<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>IT草根</title>
  <subtitle>WangXu&#39;s 代码馆 BLOG</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.codepub.cn/"/>
  <updated>2016-10-21T13:02:04.852Z</updated>
  <id>http://www.codepub.cn/</id>
  
  <author>
    <name>Wang Xu</name>
    <email>wangx89@126.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>人性的嫉妒</title>
    <link href="http://www.codepub.cn/2016/10/21/Jealousy-of-human-nature/"/>
    <id>http://www.codepub.cn/2016/10/21/Jealousy-of-human-nature/</id>
    <published>2016-10-21T12:59:36.000Z</published>
    <updated>2016-10-21T13:02:04.852Z</updated>
    
    <content type="html">&lt;p&gt;有感而发，之前在网上看到过类似文章，深以为然。起因是一次扣费事件，事情是这样的，新接的通知&lt;em&gt;党员交纳党费的比例为：每月工资收入在3000元以下(含3000元)者，交纳月工资收入的0.5%；3000元以上至5000元(含5000元)者，交纳1%；5000元以上至10000元(含10000元)者，交纳1.5%；10000元以上者，交纳2%。&lt;/em&gt;如果按照这个标准，我要缴2%，对此我不讳言，一份死工资，处处受剥削，本以所剩无几，还要存钱买房，于是我发了个朋友圈论及此事。&lt;/p&gt;
&lt;p&gt;好了，结果来了，某些熟人观点总结如下（真心的好朋友还是有的）：① 你工资高多缴点；这是什么神逻辑，工资高低是我的事，和你半毛钱关系？不论工资高低那是自己挣来的，不是天上掉下来的，他们宁愿你的钱被多扣点也不愿看到你挣钱多，这样显得和你的差距也并没有这么大了，总之如果有件事，可以让你或陌生人受益，那么他们宁愿便宜陌生人，因为毕竟陌生人和他们无有交集，眼不见心不烦，但是如果熟人受益的话，这个梗总是存在，如刺在喉 ② 跟你挣的比，这些都是小钱；我每月就这点死工资，养老金、医疗金、失业金、公积金、个税扣除四千，房租生活费扣除三千，你有没有看到我税后到手多少？不管大钱小钱那不是你能定义的，对于攒首付的来说，我觉得每一笔钱扣除的钱都不是小钱，你简单一句话完全无视别人的努力与付出，仅仅一句拿别人的努力结果说事，照你这逻辑，反而是没本事没能力挣钱的人理直气壮了？ ③ 你就哭穷吧，潜台词是工资那么高，还在我们面前装穷；其一我从没觉得工资高；其二我也没说我是穷光蛋，我只是表达不乐意被剥削而已；其三，燕雀安知鸿鹄之志哉，他们总是会潜意识中将你的收入套在他们所处的物价水平之上，而不晓得大上海的生活成本有多高。大上海这个房价，我工资就是翻倍，也未必买的起，换个角度，与上海这房价相比，我还真的是穷光蛋了。你心里见得别人工资高，然后一看在你所处的地方买房还挺容易啊，于是别人说没钱的时候在你的心里就变成装穷了。《庄子·秋水》有云“&lt;a href=&quot;http://baike.baidu.com/view/928982.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;惠子相梁&lt;/a&gt;，&lt;a href=&quot;http://baike.baidu.com/view/2760.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;庄子&lt;/a&gt;往见之，或谓惠子曰‘庄子来，欲待子相。’于是&lt;a href=&quot;http://baike.baidu.com/view/353627.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;惠子&lt;/a&gt;恐，搜于国中，三日三夜，&lt;a href=&quot;http://baike.baidu.com/view/2760.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;庄子&lt;/a&gt;往见之，曰：‘南方有鸟，其名&lt;a href=&quot;http://baike.baidu.com/link?url=tEaWmL2uR6KGMx9cioHE7fH2xwH9G9q8BN7buBWuoQfwQsrq9FUz_i1gr9VD0Bv11q2IB9SmOHouzaPz_jqYa48-3mZr1H-h_KaJDXf0Dva&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;鹓鶵&lt;/a&gt;（yuān chú，神鸟），子知之乎？夫鹓鶵发于南海而飞于北海，非梧桐不止，非练食不食非醴泉不饮，于是鸱（chī）得腐鼠，鹓鶵过之，仰而视之曰：“吓！”今子欲以子之梁国吓我邪？’”。你潜意识中拿我和你作比，却不知道我从没把你当做对手，因为你还够不了和我同台竞技的资格。&lt;/p&gt;
&lt;p&gt;当今之世，每个人身边都有很多熟人，或是昔日同窗或是今日同事。当你取得一点点成绩在与人分享时，总会有同事会背地里八卦你：切，我还不知道他那几把刷子，狗屎运罢了。有同学会私下里嘲讽你：他上学时就是个白痴，真是瞎猫撞上死耗子了。有些熟人是不愿意承认怎么身边那个平平无奇的他突然变的比我好这么多了？提拔这么快，赚了这么多，这怎么可以？“只要你过得比我好，我就受不了！！”我就要诋毁你讽刺你，想办法拉低你，就像和美人拍合影一样，我高不了瘦不了，那我得把你拖下来！&lt;/p&gt;
&lt;p&gt;这样的嘲讽和诋毁根本不值得在意，他们自己不会去努力不会去付出，也看不见你的努力和付出，但见你的成绩却会不舒服，他们会劝你何必这么拼命啊，何必牺牲那么多时间去学习去充电啊，一起喝喝啤酒享受玩乐多愉快，他们心里也会自我安慰：我之所以没有取得好的成就，只是我不屑于付出和那傻逼一样的努力罢了。&lt;/p&gt;
&lt;p&gt;人无完人，而任性、懒惰、嫉妒这人性的三大弱点相辅相生，并没有完全的独立开来，任性可以衍生固执。固执本身就是一种懒惰，是思维的懒惰，固执己见不愿换位思考，在某种程度上讨厌思考的麻烦，人的懒惰首先是思想的懒惰；固执的人总是相信自己是最正确的，认为别人的都不如自己，一旦发现别人差就会在心里强制否认别人，尽管他们自己也清楚别人在某方面比自己强，但就是不愿对自己承认和妥协，于是嫉妒心理就产生了。同样懒惰可以衍生任性，嫉妒可以衍生任性固执。&lt;/p&gt;
&lt;p&gt;这些人不求上进，当你们本来处于同一水平而你通过自己的努力，一骑绝尘将他远远甩于身后之时，人的嫉妒之心变暴露无遗，这样的人总是存在，你很难避免，他们不求上进同样也看不得别人上进。俗话说远的充拜，近的嫉妒；够不着的崇拜，够得着的嫉妒。对方比你强，但强不了多少，你的小心眼里会嘀咕『这孙子，看上去一点也不高大上，和我一样普通，咋就骑我头上了呢？』——你因为不服，所以会嫉妒。只有当差距大到他们难以企及之时，才会由嫉妒转为崇拜吧，所以借此督促自己，继续奋勇向前。所有的嫉妒都源于比较，嫉妒之心，人皆有之，不愿苛求别人，但如果我的朋友中有这些人，那我只能敬而远之了。我们所能做的仅仅是真心的对待身边的好友，默默的远离这些嫉妒心大于友情的人吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有感而发，之前在网上看到过类似文章，深以为然。起因是一次扣费事件，事情是这样的，新接的通知&lt;em&gt;党员交纳党费的比例为：每月工资收入在3000元以下(含3000元)者，交纳月工资收入的0.5%；3000元以上至5000元(含5000元)者，交纳1%；5000元以上至1000
    
    </summary>
    
      <category term="Life-Talk" scheme="http://www.codepub.cn/categories/Life-Talk/"/>
    
    
      <category term="Thinking" scheme="http://www.codepub.cn/tags/Thinking/"/>
    
  </entry>
  
  <entry>
    <title>Java 8 配置Maven-javadoc-plugin</title>
    <link href="http://www.codepub.cn/2016/10/18/Java-8-configure-maven-java-doc-plugin/"/>
    <id>http://www.codepub.cn/2016/10/18/Java-8-configure-maven-java-doc-plugin/</id>
    <published>2016-10-18T14:41:30.000Z</published>
    <updated>2016-10-21T13:02:04.851Z</updated>
    
    <content type="html">&lt;p&gt;在升级JDK至1.8之后，使用&lt;code&gt;Maven-javadoc-plugin&lt;/code&gt;插件打包报错，&lt;strong&gt;[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:2.10.4:jar (attach-javadocs) on project
&lt;/strong&gt;详细信息如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:2.10.4:jar (attach-javadocs) on project StatisticsReport: MavenReportException: Error while generating Javadoc:&lt;br&gt;[ERROR] Exit code: 1 - D:\Multi-module-project\StatisticsReport\src\main\java\com\yuewen\statistics\report\service\db\PullData.java:29: 警告: @param 没有说明&lt;br&gt;[ERROR] &lt;em&gt; @param preparedStatement&lt;br&gt;[ERROR] ^&lt;br&gt;[ERROR] D:\Multi-module-project\StatisticsReport\src\main\java\com\yuewen\statistics\report\service\db\PullData.java:30: 警告: @param 没有说明&lt;br&gt;[ERROR] &lt;/em&gt; @param params&lt;br&gt;[ERROR] ^&lt;br&gt;[ERROR] D:\Multi-module-project\StatisticsReport\src\main\java\com\yuewen\statistics\report\service\db\PullData.java:31: 警告: @return 没有说明&lt;br&gt;[ERROR] &lt;em&gt; @return&lt;br&gt;[ERROR] ^&lt;br&gt;[ERROR] D:\Multi-module-project\StatisticsReport\src\main\java\com\yuewen\statistics\report\service\db\PullData.java:32: 警告: @throws 没有说明&lt;br&gt;[ERROR] &lt;/em&gt; @throws SQLException&lt;br&gt;[ERROR] ^&lt;br&gt;[ERROR] D:\Multi-module-project\StatisticsReport\src\main\java\com\yuewen\statistics\report\service\db\PullData.java:34: 警告: logFlag没有 @param&lt;br&gt;[ERROR] public static ResultSet pullData(PreparedStatement preparedStatement, boolean logFlag, String… params) throws SQLException {&lt;br&gt;[ERROR] ^&lt;br&gt;[ERROR] D:\Multi-module-project\StatisticsReport\src\main\java\com\yuewen\statistics\report\service\db\PullData.java:51: 警告: @param 没有说明&lt;br&gt;[ERROR] &lt;em&gt; @param preparedStatement&lt;br&gt;[ERROR] ^&lt;br&gt;[ERROR] D:\Multi-module-project\StatisticsReport\src\main\java\com\yuewen\statistics\report\service\db\PullData.java:52: 警告: @param 没有说明&lt;br&gt;[ERROR] &lt;/em&gt; @param params&lt;br&gt;[ERROR] ^&lt;br&gt;[ERROR] D:\Multi-module-project\StatisticsReport\src\main\java\com\yuewen\statistics\report\service\db\PullData.java:53: 警告: @return 没有说明&lt;br&gt;[ERROR] * @return&lt;br&gt;[ERROR] ^&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;经查得知，在JDK 8中，Javadoc中添加了&lt;em&gt;doclint&lt;/em&gt;，而这个工具的主要目的是旨在获得符合W3C HTML 4.01标准规范的HTML文档，在JDK 8中，已经无法获取如下的Javadoc，除非它满足&lt;em&gt;doclint&lt;/em&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不能有自关闭的HTML tags，例如&lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;或者&lt;code&gt;&amp;lt;a id=&amp;quot;x&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不能有未关闭的HTML tags，例如有&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;而没有&lt;code&gt;&amp;lt;/ul&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不能有非法的HTML end tags，例如&lt;code&gt;&amp;lt;/br&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不能有非法的HTML attributes，需要符合doclint基于W3C HTML 4.01的实现&lt;/li&gt;
&lt;li&gt;不能有重复的HTML id attribute&lt;/li&gt;
&lt;li&gt;不能有空的HTML href attribute&lt;/li&gt;
&lt;li&gt;不能有不正确的嵌套标题，例如类的文档说明中必须有&lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt;而不是&lt;code&gt;&amp;lt;h4&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不能有非法的HTML tags，例如&lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt;需要用&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;对应的实体符号&lt;/li&gt;
&lt;li&gt;不能有损坏的&lt;code&gt;@link references&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不能有损坏的&lt;code&gt;@param references&lt;/code&gt;，它们必须匹配实际的参数名称&lt;/li&gt;
&lt;li&gt;不能有损坏的&lt;code&gt;@throws references&lt;/code&gt;，第一个词必须是一个类名称&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意违反这些规则的话，将不会得到Javadoc的输出。&lt;/p&gt;
&lt;p&gt;一种解决办法就是关闭&lt;em&gt;doclint&lt;/em&gt;，如果你在Maven中运行，你需要使用&lt;code&gt;additionalparam&lt;/code&gt;设置：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;profiles&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;profile&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;disable-javadoc-doclint&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;activation&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;jdk&lt;/span&gt;&amp;gt;&lt;/span&gt;[1.8,)&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;jdk&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;activation&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;properties&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;additionalparam&lt;/span&gt;&amp;gt;&lt;/span&gt;-Xdoclint:none&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;additionalparam&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;properties&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;profile&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;profiles&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者是添加到&lt;code&gt;maven-javadoc-plugin&lt;/code&gt;中：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;maven-javadoc-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.10.4&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;encoding&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;chartset.UTF8&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;encoding&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;aggregate&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;aggregate&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;charset&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;chartset.UTF8&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;charset&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;docencoding&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;chartset.UTF8&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;docencoding&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;executions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;attach-javadocs&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;package&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;phase&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;jar&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goal&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;goals&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;additionalparam&lt;/span&gt;&amp;gt;&lt;/span&gt;-Xdoclint:none&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;additionalparam&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;execution&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;executions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;plugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在升级JDK至1.8之后，使用&lt;code&gt;Maven-javadoc-plugin&lt;/code&gt;插件打包报错，&lt;strong&gt;[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plug
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Maven" scheme="http://www.codepub.cn/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>读《异类》</title>
    <link href="http://www.codepub.cn/2016/10/10/Read-outliers-the-story-of-success/"/>
    <id>http://www.codepub.cn/2016/10/10/Read-outliers-the-story-of-success/</id>
    <published>2016-10-10T12:15:07.000Z</published>
    <updated>2016-10-10T12:22:53.968Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;：马尔科姆·格拉德威尔（Malcolm Gladwell），被《快公司》誉为“21世纪的彼得·德鲁克，曾是《华盛顿邮报》商务科学专栏作家，目前是《纽约客》杂志专职作家。马尔科姆出生于英格兰，是牙买加人的后裔。在加拿大长大，现居纽约市。他曾经做过卫生政策和科学新闻方面的记者，其文章喜欢以小见大。马尔科姆是一个非常有创意的作家，他认为自己的文风属于一种adventure of ideas的风格，虽然大部分作品都不属于虚构，又不是围绕一个人物或者一个故事展开，但其中的故事情节却一般比较曲折，看他的文章很有adventure波澜起伏的韵味。&lt;/p&gt;
&lt;p&gt;那些取得杰出成就的人，不仅仅靠的是天赋，更多靠的是机遇，当然机遇包括整个社会所创造的机遇以及他们的家庭、生长环境、出生年月等等诸多未可知因素。而这些取得非凡业绩的人如若选择了那些专业性极强的方面，例如绘画、演奏、作曲、体育运动等，这时候就离不开一万小时理论了，除了机遇之外，剩下的就是勤勉了，相对来说，那些有着更好机遇同时又更加勤勉的人能够更快地达到一万小时的训练水平，当然也会取得更加杰出地成就。&lt;/p&gt;
&lt;p&gt;该书中提到了一个非常重要的实验，就是从1921年开始，刘易斯·特曼就满腔热忱地把测试智商、发现天才作为自己的终身事业。在联邦会的大力支持下，他组织了一个团队到加利福尼亚州的中小学进行测试智商的研究。挑选出最聪明、最有发展前途、智商最高的学生。可是这些人长大成人之后，有些人成了政府官员，有些人成了高级法院的法官，有些人成了图书、学术文章的出版人，有些人在商业上取得了一定成功…… 尽管他们中的大部分人生活得还不错，但缺少出类拔萃之辈，远远低于当时的预期。最令刘易斯·特曼感到尴尬，甚至感到无地自容的是：没有任何一个人获得诺贝尔奖，就连成为全美知名人士的也寥寥无几；可当年测试智商时被认定智商不够高、没有什么发展前途的威廉·肖克利和路易斯·阿尔瓦雷茨，却都获得了诺贝尔奖。&lt;/p&gt;
&lt;p&gt;后来，刘易斯·特曼在《天才基因的研究》一书中，以一种极端失望的笔调写道:“这些人的智商和成就并没有完美地结合在一起。”有时候，获得失败教训的价值并不比获得成功经验的价值小。心理学家刘易斯·特曼智商测试的预言虽然失败了，但却给人们留下了不可小觑的启示。那就是：从总体上看，一个孩子的成功，主要并不决定于智商。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最重要的是，组成智商的记忆、观察、想象、思考、判断等因素是很重要的，但组成情商的性格力量、意志力量、情感力量、社交力量等因素至少是不可忽视的。在一定意义上可以说，对于一个人的成功，情商比智商更重要。同样地，作者举出了大量的示例，这些事例直接说明并且证实了成功还源自优势的不断积累：你出生在何时何地，你父母的职业以及你成长的环境，这三者互相作用才塑造出这个世界上独特的你。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在造成飞机失事的民族理论部分中，作者举了阿维安卡52号坠机事故作为例子，这是一个沉痛的沟通案例，在飞机因为各种原因造成燃油即将耗尽的时候，副驾却用异常平静的语气对指挥控制室说“我们正在18 000英尺的右上方，嗯，我们将再试一次。我们的燃油快用完了。”这种轻描淡写的语气根本不足以引起飞行控制室的重视，而结果也异常打脸，飞机因为燃油耗尽而坠毁。&lt;/p&gt;
&lt;p&gt;副驾飞行员的语调并未向控制室管理员传递燃料紧急的严重信息。许多管理员接受过专门的训练，可以在各种情境下捕捉到飞行员声音中极细微的语调变化。尽管机组成员相互之间表现出对燃料问题的极大忧虑，但他们向机场传达信息的语调却是冷静而职业化的。在这次事故中，飞行员的文化、传统以及职业习惯会使飞行员不愿意声明情况紧急。如果正式报告紧急情况之后，飞行员需要写出大量的书面汇报；同时，如果发现飞行员在计算飞行油量方面疏忽大意，联邦飞行管理局就会吊销其驾驶执照。这些消极措施极大地阻碍了飞行员发出紧急呼救的信息。在这种情况下，飞行员的专业技能和荣誉感不必要地变成了决定生死命运的赌注。基于此作者进而引出了“权利距离指数”，简称PDI。权利距离指数具体而言，就是一种特定文化中重视和尊重权威的程度，我想天朝必在此列。&lt;/p&gt;
&lt;p&gt;文中还提到了中国传统的“水稻田文化”，中国人真的是世界上最勤劳的民族了。比如法国农民到了冬天要去“冬眠”，非洲一些地方农民靠捡果子谋生，你让他去种东西，他会说世上有这么多白捡的果子，你种这些干嘛？中国农民不仅勤劳质朴善良还逆来顺受，不到活不下去的地步绝不反抗，这种特质使得我们很难发展成为欧美化的那种高度分权的民选国家。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;：马尔科姆·格拉德威尔（Malcolm Gladwell），被《快公司》誉为“21世纪的彼得·德鲁克，曾是《华盛顿邮报》商务科学专栏作家，目前是《纽约客》杂志专职作家。马尔科姆出生于英格兰，是牙买加人的后裔。在加拿大长大，现居纽约市
    
    </summary>
    
      <category term="Life-Talk" scheme="http://www.codepub.cn/categories/Life-Talk/"/>
    
    
      <category term="Thinking" scheme="http://www.codepub.cn/tags/Thinking/"/>
    
  </entry>
  
  <entry>
    <title>Lucene设置单索引文件大小之性能测试</title>
    <link href="http://www.codepub.cn/2016/10/09/Lucene-sets-a-single-index-file-size-of-the-performance-test/"/>
    <id>http://www.codepub.cn/2016/10/09/Lucene-sets-a-single-index-file-size-of-the-performance-test/</id>
    <published>2016-10-09T13:31:36.000Z</published>
    <updated>2016-10-10T12:22:53.967Z</updated>
    
    <content type="html">&lt;h3 id=&quot;硬件环境&quot;&gt;硬件环境&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Operating System&lt;/strong&gt;：Windows 7 企业版 64-bit (6.1, Build 7601) Service Pack 1&lt;br&gt;&lt;strong&gt;Processor&lt;/strong&gt;：Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (8 CPUs), ~3.6GHz&lt;br&gt;&lt;strong&gt;Java version&lt;/strong&gt;：”1.8.0_91” Java HotSpot(TM) 64-Bit Server VM (build 25.91-b15, mixed mode)&lt;br&gt;&lt;strong&gt;Lucene Version&lt;/strong&gt;：V 5.5.0&lt;/p&gt;
&lt;h3 id=&quot;合并策略&quot;&gt;合并策略&lt;/h3&gt;&lt;p&gt;Lucene使用&lt;strong&gt;TieredMergePolicy&lt;/strong&gt;作为其默认合并策略，这个默认的策略是合并那些差不多大小的段，受限于每次合并时允许的段的数量。该合并策略的一些默认属性如下&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; DEFAULT_NO_CFS_RATIO = &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxMergeAtOnce = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//在一次合并过程中最多合并十个segments&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; maxMergedSegmentBytes = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1024L&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//合并之后的最大段文件为5GB&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxMergeAtOnceExplicit = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; floorSegmentBytes = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1024L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; segsPerTier = &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; forceMergeDeletesPctAllowed = &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; reclaimDeletesWeight = &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种默认的合并策略会导致单个段文件的大小达到5GB，那么如果想要控制单个段文件大小的上限要怎么办呢？追踪该类至其父类MergePolicy，继续追踪MergePolicy的所有子类，发现MergePolicy的子类包括：NoMergePolicy、MergePolicyWrapper、LogMergePolicy、TieredMergePolicy，查看LogMergePolicy发现该类有两个子类，分别为LogDocMergePolicy和LogByteSizeMergePolicy，顾名思义，前者考虑段文件的数量，后者考虑段文件的大小。&lt;/p&gt;
&lt;p&gt;另外&lt;strong&gt;TieredMergePolicy&lt;/strong&gt;和&lt;strong&gt;LogByteSizeMergepolicy&lt;/strong&gt;区别在于前者可以合并不相邻的段，并且区分最多允许一次合并的段数&lt;code&gt;setMaxMergeAtOnce(int v)&lt;/code&gt;和一层最多容许的段数&lt;code&gt;setSegmentsPerTier(double v)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;至此，找到了我们需要使用的合并策略，即&lt;strong&gt;LogByteSizeMergePolicy&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;复合索引文件&quot;&gt;复合索引文件&lt;/h3&gt;&lt;p&gt;复合索引文件是指，除了段信息文件，锁文件，以及删除的文件外，其他的一系列索引文件压缩一个后缀名为cfs的文件，意思就是所有的索引文件会被存储成一个单例的Directory，而非复合索引是灵活的，可以单独的访问某几个索引文件，而复合索引文件则不可以，因为其压缩成了一个文件，所以在某些场景下能够获取更高的效率，比如说，查询频繁，而不经常更新的需求，就很适合这种复合索引格式。&lt;/p&gt;
&lt;p&gt;如果仅仅设置&lt;code&gt;setUseCompoundFile(false)&lt;/code&gt;，那么在生成的索引中，依然会有复合索引文件并且其大小会超过&lt;code&gt;setMaxMergeMB(double mb)&lt;/code&gt;所设置的大小，是不是很奇怪，这是为什么呢？收先查看&lt;code&gt;setMaxMergeMB(double mb)&lt;/code&gt;Doc说明如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;org.apache.lucene.index.LogByteSizeMergePolicy&lt;br&gt;public void setMaxMergeMB(double mb)&lt;br&gt;Determines the largest segment (measured by total byte size of the segment’s files, in MB) that may be merged with other segments. Small values (e.g., less than 50 MB) are best for interactive indexing, as this limits the length of pauses while indexing to a few seconds. Larger values are best for batched indexing and speedier searches.&lt;br&gt;Note that setMaxMergeDocs is also used to check whether a segment is too large for merging (it’s either or).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该函数用于控制可用于合并的最大的段文件大小，通常合并之后的段文件的大小均会超过此值。所以单靠此函数不能实现控制单索引文件上限的目标。&lt;/p&gt;
&lt;p&gt;继续查看&lt;code&gt;setUseCompoundFile(false)&lt;/code&gt;Doc说明如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;org.apache.lucene.index.LiveIndexWriterConfig&lt;br&gt;public LiveIndexWriterConfig setUseCompoundFile(boolean useCompoundFile)&lt;br&gt;Sets if the IndexWriter should pack newly written segments in a compound file. Default is true.&lt;br&gt;Use false for batch indexing with very large ram buffer settings.&lt;br&gt;&lt;strong&gt;Note&lt;/strong&gt;: To control compound file usage during segment merges see &lt;strong&gt;MergePolicy.setNoCFSRatio(double)&lt;/strong&gt; and &lt;strong&gt;MergePolicy.setMaxCFSSegmentSizeMB(double)&lt;/strong&gt;. This setting only applies to newly created segments.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中提到了&lt;code&gt;MergePolicy.setNoCFSRatio(double)&lt;/code&gt;，继续查看该方法的Doc说明如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;org.apache.lucene.index.MergePolicy&lt;br&gt;public void setNoCFSRatio(double noCFSRatio)&lt;br&gt;If a merged segment will be more than this percentage of the total size of the index, leave the segment as non-compound file even if compound file is enabled. &lt;strong&gt;Set to 1.0 to always use CFS regardless of merge size&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;继续追踪noCFSRatio查找到了预定义的默认值&lt;strong&gt;DEFAULT_NO_CFS_RATIO&lt;/strong&gt;，该默认值为1.0，而根据Doc说明，当该值为1.0的时候，总是使用复合索引文件并且忽略合并大小的设置，所以就出现了设置不使用复合索引文件但无效的情况。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; DEFAULT_NO_CFS_RATIO = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; noCFSRatio = DEFAULT_NO_CFS_RATIO;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么可以通过调用&lt;code&gt;logByteSizeMergePolicy.setNoCFSRatio();&lt;/code&gt;去更改noCFSRatio的值，但是究竟设置多少合适，不得而知。此时不妨去关注下&lt;code&gt;setMaxCFSSegmentSizeMB(double)&lt;/code&gt;方法，既然总是会有复合索引文件，那么通过设置复合索引文件的上限一样可以实现控制单索引文件大小的目的。该方法Doc说明如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;org.apache.lucene.index.MergePolicy&lt;br&gt;public void setMaxCFSSegmentSizeMB(double v)&lt;br&gt;If a merged segment will be more than this value, leave the segment as non-compound file even if compound file is enabled. Set this to Double.POSITIVE_INFINITY (default) and noCFSRatio to 1.0 to always use CFS regardless of merge size.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可知如果合并之后段文件大小会超过此值时，就保留该段文件为非复合索引文件，亦即不进行合并，所以此方法可以达到控制单索引文件上限的目标。&lt;/p&gt;
&lt;h3 id=&quot;测试&quot;&gt;测试&lt;/h3&gt;&lt;p&gt;使用不同的合并策略配合三种设置，添加50000000个Document，其中每个Document包含10个Field，这些Field类型包括Int、Long、String，其值随机生成。随后根据主键搜索1000000次，统计其累计搜索耗时，其中主键为String类型数字，主键值为[0，50000000)。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;合并策略&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;参数设置&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;索引文件数&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;索引总量&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;最大单索引文件&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;搜索总耗时&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;单次搜索最大耗时&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;TieredMergePolicy&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;默认&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;123&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;7.33GB&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;464MB&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;58.2s&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;140ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;LogByteSizeMergePolicy&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;logByteSizeMergePolicy.setMinMergeMB(1);&lt;br&gt;logByteSizeMergePolicy.setMaxMergeMB(64);&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;239&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;7.77GB&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;127MB&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;127.1s&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;314ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;LogByteSizeMergePolicy&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;indexWriterConfig.setUseCompoundFile(false);&lt;br&gt;logByteSizeMergePolicy.setMinMergeMB(1);&lt;br&gt;logByteSizeMergePolicy.setMaxMergeMB(64);&lt;br&gt; logByteSizeMergePolicy.setMaxCFSSegmentSizeMB(64);&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;451&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;7.77GB&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;60.8MB&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;152.1s&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;446ms&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;总结&quot;&gt;总结&lt;/h3&gt;&lt;p&gt;虽然每次运行结果时间稍有不同，但总体趋势应该是不变的。即单索引文件上限越小，则生成的索引文件数量越多，索引文件数量越多，对应的单次搜索最长时间和总搜索时间均越长。所以应根据业务需求选择适当的合并策略，在满足需求之后尽可能提高搜索性能。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;硬件环境&quot;&gt;硬件环境&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Operating System&lt;/strong&gt;：Windows 7 企业版 64-bit (6.1, Build 7601) Service Pack 1&lt;br&gt;&lt;strong&gt;Processor&lt;/stro
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Lucene" scheme="http://www.codepub.cn/tags/Lucene/"/>
    
  </entry>
  
  <entry>
    <title>读《万能钥匙》</title>
    <link href="http://www.codepub.cn/2016/10/07/Read-the-master-key-system/"/>
    <id>http://www.codepub.cn/2016/10/07/Read-the-master-key-system/</id>
    <published>2016-10-07T12:15:59.000Z</published>
    <updated>2016-10-07T12:59:46.796Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;strong&gt;花半秒钟就看透事物本质的人，和花一辈子都看不清事物本质的人，注定是截然不同的命运。&lt;br&gt;——《教父》&lt;/strong&gt;&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;简介：&lt;/strong&gt;&lt;a href=&quot;http://baike.baidu.com/subview/92577/5447101.htm#viewPageContent&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《万能钥匙》&lt;/a&gt;（The Master Key System）是一本奇书，由作者在1912年创作出版，当时销售了20多万册，1933年起，它奇迹般的从市场上消失了，原因是很多成功的商人不愿意让更多的人看到此书，而担心更多人因此书而创富。这些商人联合起来，让美国教会查禁了这本书。&lt;/p&gt;
&lt;p&gt;这本上是硅谷最神奇的成功奇书，早年，这本书的手抄本甚至炒到3000多美金，几乎所有硅谷的亿万富翁都阅读过此书，世界首富比尔·盖茨在哈佛大学上学时，因为偶然的机会读到此书，立即决定弃学从商，从而创造了软件帝国的神话。美国成功学之父拿破仑·希尔因为得到本书的启示成为成功学大师。&lt;/p&gt;
&lt;p&gt;70年间，在美国硅谷有一个人尽皆知的秘密，那就是：每个硅谷创业者都是通过研习汉尼尔先生80年前笔耕的结晶，才掘到了自己的财富。从&lt;a href=&quot;http://baike.baidu.com/view/3243.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;硅谷&lt;/a&gt;起家的百万富翁到亿万富翁，几乎每个人都读过这本《万能钥匙》。由于此书被列为禁书，直到近年才得以重见天日，因此一度在&lt;a href=&quot;http://baike.baidu.com/view/3243.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;硅谷&lt;/a&gt;掀起了一股秘密复印该书的热潮。&lt;/p&gt;
&lt;p&gt;不管是曾经的&lt;a href=&quot;http://baike.baidu.com/link?url=5hbBaV1Dhu2rIx4BZZq3W7q4fmoH7lYuuqNc5S9TXt_UKfQ3Q2drw-yqudkrbTBwdpWTRB8kAXnQReLUxgonya&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;李笑来&lt;/a&gt;还是&lt;a href=&quot;http://baike.baidu.com/link?url=ED2Fp0iEK01IZ7kr4LtR2RLMnDWGjqO2Fjut9k7CdVe0peWPhmhRsh2fuc6oKx8jI4iJPaEM31V8BLAo6woNeyUVCJojy66c7rPSzid5qJC&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;和菜头&lt;/a&gt;，他们都是中国最早一批对比特币有了解的人，但是李笑来付出了实际行动，大量囤积比特币，并藉此实现了财富自由。反观和菜头呢？虽然看到了这个点，但是并未有任何切实的行动，你或许会说，人家才不在乎那些钱呢，呵呵，注意这可是实现财务自由的钱哦，没人会不在乎的。我觉得最根本的问题还是因为一切财富都基于认知，你的认知水准决定了你的行动指南。李笑来在他的书籍《把时间当作朋友》中也谈到了这个问题，一个人的心智或者说认知水准决定了你的高度。&lt;/p&gt;
&lt;p&gt;为什么有的人能毫不费力地实现自己的雄心壮志，有人却要付出百倍的艰辛，还有一些人则一败涂地？原因必定不在于人的体魄，否则，那些伟人们一定是体格最健壮的人了。差异必定是精神上的——必定在于人的心智。物理或者身体上所创造出的结果，其差距有限；只有心智上所创造的结果才会导致无限的差距，这也正是脑力劳动者攫取的财富永远高于体力劳动者的必然所在。&lt;/p&gt;
&lt;p&gt;如果你不打算做一件事情，那就别开始；如果你开始了，即便天塌下来也要把它做成。如果你决定做某事，那就动手去做；不要受任何人、任何事的干扰。成功的秘诀有时很简单，就是重复并且坚持，不断的重复，不断的坚持，最终必有所获。但是大多数人都败在了坚持上，就以我去健身房为例，每周一三五只要没什么意外耽搁，就去健身房，在器械区经常会看到些新面孔，而老面孔寥寥无几，可见不论是什么事情，能够坚持下来的总是少数，所以成功人士也总是少数，大多数的人都是三天打鱼两天晒网罢了。&lt;/p&gt;
&lt;p&gt;培养全神贯注的一个小方法：为了培养全神贯注的能力，取一张照片，然后再回到以前那个房间，用同样的姿势坐在那个座位上。仔细观察这张照片，至少要十分钟，注意眼神的表情，面部特征，衣着装扮，发型样式等。也就是说，注意照片上的每一个细节。然后，盖住这张照片，闭上眼睛，试着用心灵观看这张照片，如果你能够把每一个细节看得非常清楚，在脑海中出现了这张照片非常清晰的图景，那么就要恭喜你了。如果不能，那就重复这个过程，直到成功为止。&lt;/p&gt;
&lt;p&gt;我们付出的越多，得到的就越多。一个想要让身体更加强壮的运动员会花费更多的力气去锻炼，他越是苦练，就越是强健。一个希望财富不断累积的金融家，首先必须抛掷大量的金钱，因为只有使用这些钱财，钱财才能给他带来回报。无论何时，不劳而获都是不可取的，另外使用不合法的或者损害他人利益的手段的获益者都是应当被唾弃的。即便这个社会存在着很大的不公，但是就付出与回报而言，还是相对公平的，总的来说，如果你的朋友中有不愿付出，却奢望不菲的回报或者说当回报没达到他的期望进而满腹牢骚的人的话，那么可以敬而远之了。&lt;/p&gt;
&lt;p&gt;人生一切苦难无非有两种：肉身病痛与精神焦虑。这些往往可以溯源到某些违反自然法则的行为。这种违背，毫无疑问，是由迄今为止的知识局限性所造成的。然而，过往年代中积聚的阴云即将散去，随之消逝的是由于信息不完备而导致的种种悲苦境遇。在肉身病痛方面，人的身体千万不能逆自然而行，比如你在家吃饭肯定比在外面吃地沟油健康，再比如人类并没有犬齿，从生物进化角度来说，人就不是纯肉食性动物，人是杂食性动物，所以尽力保持吃蔬菜的量超过肉类的量，一定对你身体有益。顺自然而行就像这个社会一样，社会中的我们一定要懂得顺势而为，顺应整个社会的发展趋势，如果你的工资很高，想想是你是否真能创造这么大的价值？抑或仅仅是你在这个社会的大趋势下所得到的额外附加值比别人多而已。至于精神层面，我觉得更多的要靠自己去调节，不断强化正面信息给大脑以愉悦的刺激，不断背弃负面信息，将他们收进思维的小黑屋中，常置角落。&lt;/p&gt;
&lt;p&gt;据说，人每隔7年就会全部更新一次，而当今又有一些科学家指出，事实上我们每隔11个月整个人体都会重塑一次。所以，我们只有11个月的年龄。如果我们年复一年地把缺陷植入我们的身体，那可就怪不得别人了，只能从我们自己身上找原因。人是有主观能动性的，外界诸多条件我们无力改变，我们能够做到的仅仅是改变自己而已。不断激励自己，始终保持着一种积极昂扬向上的心态，不断重塑自己以最终获得最好的自己。所有的成功，都是通过把意念恒久地集中于看得见的目标而实现的。&lt;/p&gt;
&lt;p&gt;很多人的努力漫无方向，浪费了大量的时间、想法、精力，如果用来朝着愿景中的某些特定的目标努力的话，可能会创造出奇迹。为了做到这一点，你必须集中你的精神能量，定位在某一特定的想法上，排除一切杂念的干扰。如果你曾经观察过照相机的镜头，你就会知道假如不对准镜头，物体产生的影像就会模糊不清，而当你调整好焦距，图像就会变得清晰明朗起来。这说明了集中精神所具有的力量。如果你不能把精力集中在你所期待的目标上，你只能得到一个朦胧暧昧、模糊不清的理想轮廓，其结果与你的精神图景相一致。&lt;/p&gt;
&lt;p&gt;永远不要对环境表示不满。你越是将思想集中于负面的环境，这种环境就越是成长壮大，最终成为成功和幸福的绊脚石。面对生活，你要积极，积极，再积极。让你的思想明朗、清晰、坚实、确定，决不变更！在天朝，有能力改变的就改变之，这是最好的结果了，没有能力改变的就闭嘴，因为网络上的各种信息已经可以不经同意就被公安机关取证了，万不可再随意发泄一吐心中的愤懑了。&lt;/p&gt;
&lt;p&gt;一个人不应该成为运气的玩偶，而应是命运的宠儿。而做到这一点的惟一前提就是拥有知识。当你认识了越来越多的真理，未来便会在你面前铺出光明之路。其实不仅社会是不平等的，而且人生下来就是不平等的，基于这种天生的不平等状态还蕴含着诸多不平等，比如运气，不要总是感叹某人运气好，更多的要去探寻背后的缘由，为什么好运气如此青睐他人而不是自己呢？为什么机会总是被他人抓住而不是自己呢？可能好运降临而你视而不见，更可能机会就在你眼前，而你却不懂得把握罢了。我们应该像船长控制他的船舰，像火车司机驾驶火车一样，牢牢地掌握运气和机遇。&lt;/p&gt;
&lt;p&gt;懂得去思考，便认识到了自己的力量。你要明白，如果不愿“劳心”，就不得不去“劳力”。正所谓，想的越少，干的就越多，收获反而越小。这个世界，没有上帝，你能依靠的就是自己，你的“天国”就在自己心中。正所谓谋定而后动，假设做成一件事的成本是一样的，而脑力劳动和体力劳动在单位成本上是对等的，那么这就像零和博弈一样，你所付出的脑力成本越小，必然就要付出越大的体力成本。然而现实世界中，脑力劳动所创造的价值远远超过体力劳动，所以我们要不断地督促自己多动脑，进而促使脑力成本在完成一件事的整个成本中所占的比例越来越大。&lt;/p&gt;
&lt;p&gt;知识是无价的，通过对知识的运用我们可以去实现自己理想的未来。当我们认识到自己目前的性情、境遇、力量以及健康状况都是过去思维方式的结果时，就能更好地领会知识的价值。如果我们的健康状况并不理想，那我们首先应该反省一下我们的思维方式是否有问题。我们不要忘记，一切的思想都会在心灵中留下印记。而所有的印记都是一颗种子，沉入到潜意识的土壤中，形成某种倾向。这种倾向就会把类似的想法吸引过来，种子就这样慢慢长大，甚至在我们意识到它以前就已经丰收在望了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;strong&gt;花半秒钟就看透事物本质的人，和花一辈子都看不清事物本质的人，注定是截然不同的命运。&lt;br&gt;——《教父》&lt;/strong&gt;&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;
    
    </summary>
    
      <category term="Life-Talk" scheme="http://www.codepub.cn/categories/Life-Talk/"/>
    
    
      <category term="Thinking" scheme="http://www.codepub.cn/tags/Thinking/"/>
    
  </entry>
  
  <entry>
    <title>Lucene 6.0 目录结构和功能模块</title>
    <link href="http://www.codepub.cn/2016/09/27/Lucene-6-0-directory-structure-and-functional-module/"/>
    <id>http://www.codepub.cn/2016/09/27/Lucene-6-0-directory-structure-and-functional-module/</id>
    <published>2016-09-27T14:50:26.000Z</published>
    <updated>2016-09-27T14:54:44.764Z</updated>
    
    <content type="html">&lt;h4 id=&quot;Lucene英文目录结构和功能模块&quot;&gt;Lucene英文目录结构和功能模块&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/core/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;core&lt;/a&gt;: &lt;/strong&gt;Lucene core library&lt;/li&gt;
&lt;li&gt;analyzers&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-common/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-common&lt;/a&gt;: &lt;/strong&gt;Analyzers for indexing content in different languages and domains.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-icu/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-icu&lt;/a&gt;: &lt;/strong&gt;Analysis integration with ICU (International Components for Unicode).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-kuromoji/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-kuromoji&lt;/a&gt;: &lt;/strong&gt;Japanese Morphological Analyzer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-morfologik/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-morfologik&lt;/a&gt;: &lt;/strong&gt;Analyzer for dictionary stemming, built-in Polish dictionary&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-phonetic/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-phonetic&lt;/a&gt;: &lt;/strong&gt;Analyzer for indexing phonetic signatures (for sounds-alike search)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-smartcn/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-smartcn&lt;/a&gt;: &lt;/strong&gt;Analyzer for indexing Chinese&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-stempel/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-stempel&lt;/a&gt;: &lt;/strong&gt;Analyzer for indexing Polish&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-uima/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-uima&lt;/a&gt;: &lt;/strong&gt;Analysis integration with Apache UIMA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/backward-codecs/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;backward-codecs&lt;/a&gt;: &lt;/strong&gt;Codecs for older versions of Lucene.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/benchmark/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;benchmark&lt;/a&gt;: &lt;/strong&gt;System for benchmarking Lucene&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/classification/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;classification&lt;/a&gt;: &lt;/strong&gt;Classification module for Lucene&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/codecs/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;codecs&lt;/a&gt;: &lt;/strong&gt;Lucene codecs and postings formats.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/demo/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo&lt;/a&gt;: &lt;/strong&gt;Simple example code&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/expressions/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;expressions&lt;/a&gt;: &lt;/strong&gt;Dynamically computed values to sort/facet/search on based on a pluggable grammar.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/facet/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;facet&lt;/a&gt;: &lt;/strong&gt;Faceted indexing and search capabilities&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/grouping/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;grouping&lt;/a&gt;: &lt;/strong&gt;Collectors for grouping search results.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/highlighter/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;highlighter&lt;/a&gt;: &lt;/strong&gt;Highlights search keywords in results&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/join/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;join&lt;/a&gt;: &lt;/strong&gt;Index-time and Query-time joins for normalized content&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/memory/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;memory&lt;/a&gt;: &lt;/strong&gt;Single-document in-memory index implementation&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/misc/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;misc&lt;/a&gt;: &lt;/strong&gt;Index tools and other miscellaneous code&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/queries/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;queries&lt;/a&gt;: &lt;/strong&gt;Filters and Queries that add to core Lucene&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/queryparser/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;queryparser&lt;/a&gt;: &lt;/strong&gt;Query parsers and parsing framework&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/replicator/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;replicator&lt;/a&gt;: &lt;/strong&gt;Files replication utility&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/sandbox/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sandbox&lt;/a&gt;: &lt;/strong&gt;Various third party contributions and new ideas&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/spatial/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spatial&lt;/a&gt;: &lt;/strong&gt;Geospatial search&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/spatial3d/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spatial3d&lt;/a&gt;: &lt;/strong&gt;3D spatial planar geometry APIs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/spatial-extras/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spatial-extras&lt;/a&gt;: &lt;/strong&gt;Geospatial search&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/suggest/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;suggest&lt;/a&gt;: &lt;/strong&gt;Auto-suggest and Spellchecking support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/test-framework/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;test-framework&lt;/a&gt;: &lt;/strong&gt;Framework for testing Lucene-based applications&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Lucene中文目录结构和功能模块&quot;&gt;Lucene中文目录结构和功能模块&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/core/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;core&lt;/a&gt;: &lt;/strong&gt;Lucene核心类库&lt;/li&gt;
&lt;li&gt;analyzers&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-common/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-common&lt;/a&gt;: &lt;/strong&gt;不同语言和领域的内容索引分析器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-icu/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-icu&lt;/a&gt;: &lt;/strong&gt;集成ICU的分析器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-kuromoji/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-kuromoji&lt;/a&gt;: &lt;/strong&gt;日文分析器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-morfologik/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-morfologik&lt;/a&gt;: &lt;/strong&gt;字典词干分析器，内建的波兰语字典&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-phonetic/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-phonetic&lt;/a&gt;: &lt;/strong&gt;索引语音特征分析器（用于类声音搜索）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-smartcn/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-smartcn&lt;/a&gt;: &lt;/strong&gt;索引中文分析器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-stempel/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-stempel&lt;/a&gt;: &lt;/strong&gt;索引波兰语分析器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/analyzers-uima/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;analyzers-uima&lt;/a&gt;: &lt;/strong&gt;集成Apache UIMA的分析器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/backward-codecs/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;backward-codecs&lt;/a&gt;: &lt;/strong&gt;Lucene旧版本的编解码器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/benchmark/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;benchmark&lt;/a&gt;: &lt;/strong&gt;Lucene系统基准测试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/classification/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;classification&lt;/a&gt;: &lt;/strong&gt;Lucene分类器模块&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/codecs/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;codecs&lt;/a&gt;: &lt;/strong&gt;Lucene编解码器和postings格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/demo/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo&lt;/a&gt;: &lt;/strong&gt;简单代码示例&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/expressions/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;expressions&lt;/a&gt;: &lt;/strong&gt;基于可插拔语法的一个动态计算的值进行sort/facet/search&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/facet/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;facet&lt;/a&gt;: &lt;/strong&gt;切面索引和搜索功能&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/grouping/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;grouping&lt;/a&gt;: &lt;/strong&gt;分组搜索结果收集器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/highlighter/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;highlighter&lt;/a&gt;: &lt;/strong&gt;高亮搜索结果中的关键词&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/join/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;join&lt;/a&gt;: &lt;/strong&gt;标准化内容时的索引和搜索连接&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/memory/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;memory&lt;/a&gt;: &lt;/strong&gt;单文档内存索引实现&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/misc/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;misc&lt;/a&gt;: &lt;/strong&gt;索引工具和其它杂项的代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/queries/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;queries&lt;/a&gt;: &lt;/strong&gt;加入Lucene核心的过滤器和查询器&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/queryparser/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;queryparser&lt;/a&gt;: &lt;/strong&gt;查询解析器和解析框架&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/replicator/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;replicator&lt;/a&gt;: &lt;/strong&gt;文件复制工具&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/sandbox/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sandbox&lt;/a&gt;: &lt;/strong&gt;各种第三方贡献和新的想法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/spatial/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spatial&lt;/a&gt;: &lt;/strong&gt;地理空间搜索&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/spatial3d/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spatial3d&lt;/a&gt;: &lt;/strong&gt;3D空间平面几何的APIs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/spatial-extras/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;spatial-extras&lt;/a&gt;: &lt;/strong&gt;地理空间搜索&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/suggest/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;suggest&lt;/a&gt;: &lt;/strong&gt;自动推荐和拼写检查&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/test-framework/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;test-framework&lt;/a&gt;: &lt;/strong&gt;基于Lucene的应用测试框架&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;：英文水平有限，翻译若有不妥之处，还请见谅。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Lucene英文目录结构和功能模块&quot;&gt;Lucene英文目录结构和功能模块&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/core/index.html&quot; target=&quot;_bl
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Lucene" scheme="http://www.codepub.cn/tags/Lucene/"/>
    
  </entry>
  
  <entry>
    <title>程序员理财之道</title>
    <link href="http://www.codepub.cn/2016/09/14/Programmers-financial-management/"/>
    <id>http://www.codepub.cn/2016/09/14/Programmers-financial-management/</id>
    <published>2016-09-14T13:02:08.000Z</published>
    <updated>2016-09-14T14:30:53.146Z</updated>
    
    <content type="html">&lt;h3 id=&quot;为什么要理财&quot;&gt;为什么要理财&lt;/h3&gt;&lt;p&gt;关于这方面的废话我就不多说了，如果你资产低于千万，必然难以通过境外投资达到增保值的目的，亦很难通过多处房产达到增保值的目的，对于我们这些工薪狗仅仅几万块的资产真的是啥也做不了，每月工资在被强奸之后（险、金、税），到手已所剩无几，但也不能坐等让通胀把我们的辛苦钱统统吃掉，所以会点投资理财才是当前可行之道。&lt;/p&gt;
&lt;h3 id=&quot;投资渠道&quot;&gt;投资渠道&lt;/h3&gt;&lt;p&gt;至于银行的理财产品和某宝的收益率就不多说了，扣掉&lt;a href=&quot;http://baike.baidu.com/link?url=FQ9Yf8c67E7TWjUVzcB5J8DmP8lRLcKTAZiM7Nxf80wcDUJqM4N0Qb-8-P1qChIU4F0Rl6YlAj3ABfhXVfIaiJXKKXju_GMX6l2nQdNx679DXDETLncVUi3BEjUjUmJR&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CPI&lt;/a&gt;基本收益无几，而且我天朝公布的CPI数据一项注水，实际通胀率应该远在公布的CPI之上，所以你的投资收益率必须要跑赢通胀才能达到资金保值甚至增值的目的。其它渠道要么是风险低收益低，要么是风险高收益高，还有就是那专坑散户的股票市场，所以可投的渠道其实并不多，但是对于资金有限的工薪阶层来说已经够了，我目前投资的有黄金、P2P、基金。&lt;/p&gt;
&lt;h3 id=&quot;我的理财&quot;&gt;我的理财&lt;/h3&gt;&lt;h4 id=&quot;陆金所&quot;&gt;陆金所&lt;/h4&gt;&lt;p&gt;这个不多说，有平安背书，常年盘踞各大P2P平台第一名，收益率在4-9个点左右。具体投资项目，请君自选。如您有意，可通过下面链接跳转注册，平安陆金所新人注册可领100投资券（可抵本金使用），7天有效。&amp;lt;新手专区&amp;gt;首投零活宝-芝麻开花理财计划，额外奖励最高960投资券，快去看看，&lt;a href=&quot;http://t.lu.com/r/qvTZ1=J&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点我注册&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;人人贷&quot;&gt;人人贷&lt;/h4&gt;&lt;p&gt;人人贷，唯一上市的P2P投资平台，靠谱。收益率在5-10个点左右，定投期限不同，任君选购。由民生银行资金存管，中国互联网协会AAA级信用平台，新人红包高达4999元，新手专享标年化收益9.6%，&lt;a href=&quot;http://www.we.com/regPageLandingD.action?inviteCode=11j3Fs7zKEz0Q&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点我注册&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;挖财&quot;&gt;挖财&lt;/h4&gt;&lt;p&gt;投资挖财很简单，因为他们是国内为数不多的使用Scala语言的公司，试问哪一家要跑路的平台会使用这么强大新颖的技术，此家公司必然是有着长久的打算的，所以放心投资。收益率在6-12个点左右，新手注册就送20元红包，可抵扣本金，另外还有新手专享12%年化收益的新人宝（最高送150现金）等着你，&lt;a href=&quot;https://8.wacai.com/finance/newInvitation/do_invRegIndex.action?u=beb5ca977df7c722&amp;amp;a_f=yq0hy$-01-004&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点我注册&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;蚂蚁聚宝&quot;&gt;蚂蚁聚宝&lt;/h4&gt;&lt;p&gt;蚂蚁金服旗下的蚂蚁聚宝，在上面可以买基金、黄金、定期、股票等，由阿里巴巴背书。收益还不错，就是期限有点长，一直在投姚秋博士的封闭基金。&lt;/p&gt;
&lt;h4 id=&quot;黄金钱包&quot;&gt;黄金钱包&lt;/h4&gt;&lt;p&gt;黄金从年初一直涨到现在，苦于没钱投资，只能干看着别人挣钱，哎，都是泪啊。黄金钱包是由软银领头、国资入股的互联网黄金平台，新手可以特权价购买一克黄金，目前黄金市价285/克，特权价249/克，另外每天还可以挖金矿，运气佳会挖到一毫克，钱虽不多，可以练手，有兴趣的可以试试，&lt;a href=&quot;https://activity.g-banker.com/views/wapLandingPage/newIndexModel.html?price=249&amp;amp;channelCode=yaoqing&amp;amp;userCode=cffae3f33e8a45b18773674c7833d941&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点我注册&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;稳赚不赔&quot;&gt;稳赚不赔&lt;/h4&gt;&lt;p&gt;最大的投资就是投资自己，投资自己包括身体上（吃、喝、健身）、学识上（学习、充电）、精神上（音乐会、舞台剧、演唱会）等，试想，万一在退休前挂了，那么所上交了半辈子的险基本上是免费贡献给国家了，这还是在没有延退的情况下。所以人生苦短，没有经历过的还是很值得去尝试享受一番的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;声明&lt;/strong&gt;：各位如果想注册的话，请走我的推荐链接，谢谢。以上仅是个人投资项目，仅供参考。&lt;/p&gt;
&lt;h3 id=&quot;彩蛋&quot;&gt;彩蛋&lt;/h3&gt;&lt;p&gt;在「卢冠廷BEYOND IMAGINATION LIVE 2016演唱会」上，已经年过花甲的卢冠廷重新演唱了经典的《一生所爱》，听来不禁让人潸然泪下，奉献给大家。&lt;/p&gt;
&lt;center&gt;&lt;br&gt;&lt;embed src=&quot;http://static.video.qq.com/TPout.swf?vid=k0199hnmf8m&amp;auto=0&quot; allowfullscreen=&quot;true&quot; quality=&quot;high&quot; width=&quot;720&quot; height=&quot;600&quot; align=&quot;middle&quot; allowscriptaccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/center&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;为什么要理财&quot;&gt;为什么要理财&lt;/h3&gt;&lt;p&gt;关于这方面的废话我就不多说了，如果你资产低于千万，必然难以通过境外投资达到增保值的目的，亦很难通过多处房产达到增保值的目的，对于我们这些工薪狗仅仅几万块的资产真的是啥也做不了，每月工资在被强奸之后（险、金、税），到手已所
    
    </summary>
    
      <category term="Life-Talk" scheme="http://www.codepub.cn/categories/Life-Talk/"/>
    
    
      <category term="Thinking" scheme="http://www.codepub.cn/tags/Thinking/"/>
    
  </entry>
  
  <entry>
    <title>读《大数据：正在到来的数据革命》</title>
    <link href="http://www.codepub.cn/2016/08/18/Read-Big-Data-The-data-revolution-is-coming/"/>
    <id>http://www.codepub.cn/2016/08/18/Read-Big-Data-The-data-revolution-is-coming/</id>
    <published>2016-08-18T13:19:01.000Z</published>
    <updated>2016-08-18T13:22:25.314Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;strong&gt;知道可能面对的困难和痛苦，在死亡的恐惧中不断挣扎，而仍然能战胜自己，选择这条道路，才是真正的勇气。&lt;/strong&gt;&lt;br&gt;—— 《明朝那些事》&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;：&lt;a href=&quot;http://baike.baidu.com/view/3672856.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;涂子沛&lt;/a&gt;，知名信息管理专家，曾居美国硅谷，现任&lt;a href=&quot;http://baike.baidu.com/subview/2296/4818544.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阿里巴巴&lt;/a&gt;副总裁。毕业于华中科技大学、中山大学和卡内基梅隆大学。赴美留学之前，曾在省、市、县几级政府的不同部门磨砺10年，做过职业程序员，担任过公安边防巡逻艇的指挥官，也从事过政府统计工作。在美期间，先后担任软件公司的数据仓库程序员、数据部门经理、数据中心主任、亚太事务总监、首席研究员等职务。除了工作、写作，还热心公益，曾任中国旅美科技协会匹兹堡分会主席，现任中国旅美科技协会副主席，&lt;a href=&quot;http://baike.baidu.com/view/4524604.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;上海真爱梦想公益基金会&lt;/a&gt;理事。著有《&lt;a href=&quot;http://baike.baidu.com/subview/6954399/13647477.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;大数据&lt;/a&gt;》、《&lt;a href=&quot;http://baike.baidu.com/view/13054216.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数据之巅&lt;/a&gt;》。&lt;/p&gt;
&lt;p&gt;凡是属于最多数人的公共事务，却常常受到最少人的照顾，人们关怀着自己的所有，而忽视公共事务；对于公共的一切，他至多只留心到其中和他个人有些相关的事务。千百年来，人的自私和有限，并没有改变。&lt;/p&gt;
&lt;p&gt;专制者将一个国家大部分人的一部分权利和自由都剥夺了、抹杀了，大家都憎恶专制，但在一定时间、一定程度内，却很少有人反抗。为什么？这是因为，通过反抗，即使能推翻专制制度，其结果是所有人都受益，但出头冒尖的人却可能要付出极大的代价。人的自私自利的天性，使大部分人都选择了沉默，并把希冀的目光投向他们。&lt;/p&gt;
&lt;p&gt;专制者当然也懂得这个道理，他们在维护专制的同时，会不遗余力地打击出头冒尖的反抗者，杀鸡儆猴，全力瓦解一切可能发生的集体行动。&lt;/p&gt;
&lt;p&gt;这就是鼎鼎有名的“沉默的大多数”，正是因为对冒尖者的奖赏和保护不足，使得冒尖者有所顾忌，也不能全身心的投入到为大多数人谋福利的地步。在这些冒尖者为正义事业进行奋斗之时，不乏一些低素质蝇营狗苟者对这些冒尖者打击、泼冷水、嘲笑、冷嘲热讽等等，这些人其实正是这个社会的渣滓所在，因为他们不仅不能推进社会的进步，同时还是社会进步的绊脚石。&lt;/p&gt;
&lt;p&gt;之前风靡全国的火车站持刀砍人事件，想必大家都有所耳闻，就几个悍匪持刀在数万人的火车站随意砍杀，却没有人能站出来阻止，这就是对“沉默的大多数”的最好证明，因为大家都不想去做冒尖者，这可能使你在与持刀悍匪的搏斗中面对生命的危险，并且一旦身亡或者受到重大的身体伤害，很难得到应有的补偿或奖励，所以大多数人都选择了坐享其成，期盼其他人可以成为冒尖者，但正是所有人都持有这种想法，自以为自己最聪明，全世界的人都是傻瓜，这应当算作中国人的一大特色吧，才使得所有的人最后都变成了沉默者。&lt;/p&gt;
&lt;p&gt;再举一例吧，傅作义的女儿傅冬菊作为早年的中共党员，在解放战争期间，不断的为共党提供其父亲傅作义的军队部署以及作战计划，使得其父傅作义屡战屡败，最后只能固守北京城，而在此期间傅冬菊为北京的和平解放做出了重大贡献，但是政府对其奖赏与保护都不足，使得傅冬菊在文革中受到了极大的迫害，最后晚年生活亦相当凄凉，甚至文革期间，父女俩难以相见，这是整个社会的悲哀以及对人性自私自利最好的诠释，有兴趣的参见百度百科&lt;a href=&quot;http://baike.baidu.com/item/%E5%82%85%E5%86%AC%E8%8F%8A/58608&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;傅冬菊&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;是时候做出改变了，最好的方式就是一个集体、一个社会，要建立合适的激励机制，奖励那些为共同利益作贡献的人，惩罚那些没有承担集体行动成本的“搭便车”者，从而营造关心公共利益的社会文化和运行机制。&lt;/p&gt;
&lt;p&gt;林纳斯·托瓦兹说过，“一个人做事情的动机，可以分为三类：一是求生，二是社会生活，三是娱乐。当我们的动机上升到一个更高的阶段时，我们才会取得进步：不是仅仅为了求生，而是为了改变社会，更理想的是——为了兴趣和快乐”。放眼当下之中国，我们大多数人做事情的动机都异常简单，那就是求生，因为就我而言，三五月不工作就面临饿死的窘境，已不知从何时开始，国人的这种状态已经成为了一种常态，大多数的农民工都面临终年辛劳而所获甚少的局面，政府随便开动印钞机，涨点M2，就把你的辛劳给通胀掉了，偏偏可悲的是，不断增长的M2根本难以得到有效的控制。政府目前畸形的房价政策（靠土地出让金而存活）透支的不仅是上下三代人的积蓄，还有彻底吞噬掉中产阶级，中产阶级不仅是一个国家的支柱，更是一个国家走向繁荣富强的保证，当所有的中产阶级都为了求生而做事时，这是多大智力财富的浪费啊，如果这些人都能为了兴趣和快乐，各尽所能，其智力产出所创造的财富价值将远远超过为了求生所产生的财富价值。&lt;/p&gt;
&lt;p&gt;大众创新，指以普通公民而不是以知识精英为主体的创新。社会创新是指为了解决某个社会问题、满足某种社会需要、改善某部分人群的生存状况，民间力量自发产生的一种新的思想、行动和举措。社会创新也指政府在公共政策、社会治理方面的创新。社会创新最著名的例子是孟加拉的乡村银行，它向贫穷的人发放不需要担保的小额贷款，以帮助穷人改善生活。其创建人Muhammad Yunus获得了2006年的诺贝尔和平奖。&lt;/p&gt;
&lt;p&gt;回顾人类社会从古至今所有政府的历史，无论民主也好、专制也罢，所有的政府有一点是共通的：因为缺乏竞争，官僚体制与生俱来都有一种僵化保守的本性，政府机关也往往因此固守不前。但这种僵化保守也不是一成不变的，很多时候，官僚们也需要制造新的口号、接受新的概念来“收买”民意、顺承时代、说到底，一个社会，普罗大众有没有公民精神、是否勇于承担公共职责、争与不争，才是最重要的。&lt;/p&gt;
&lt;p&gt;网络外部性是理解现代经济的一个重要概念。它是指某件产品对单个消费者的使用价值，取决于这件产品总用户的多少。用户的人数越多、形成一个越大的网络，每个用户从产品中得到的效用就越高。电话、即时通讯软件、社交网站等等都是网络外部性的典型例子。&lt;/p&gt;
&lt;p&gt;信息时代的竞争，不是劳动生产率的竞争，而是知识生产率的竞争。数据，是信息的载体、是知识的源泉，当然也就可以创造价值和利润，可以预见，基于知识的竞争，将集中表现为基于数据的竞争，这种数据竞争，将成为经济发展的必然。&lt;/p&gt;
&lt;p&gt;读完此书深感忧虑，美国的数据开放程度远超中国，而这才是社会民主文明平等进步的基石，中国即便从现在开始努力追赶，亦难以企及。美国政府定期向公民公布各行各业的一系列数据资源，包括何人何地何时因何事访问白宫，与总统会谈时间等，并且免费分发到互联网上，允许任何公民免费下载，还可以基于这些公开的数据，开发一系列可视化、数据分析、数据挖掘等等服务社会大众的应用程序。同时公民亦可以发动联名请愿，强制敦促政府公开一些暂时还未有公开的数据。但是天朝，用纳税人的钱收集的数据，纳税人却无权获得，即便你愿意付费获取，政府人员都不愿意搭理你，有些公务员其实就是这个社会的蛀虫，一方面他们享受着全部人民推动社会前进所带来的发展成果，另一方面又以人民的管理者的姿态处处与人民为敌，吮吸着维持社会生命运转的血液。&lt;/p&gt;
&lt;p&gt;就像国家本身没有它自己的钱一样，国家也没有它自己的权力，但不幸的是，没有人清楚地明白这个道理。国家所有的权力都是社会授予的，或是以各种理由和借口向社会剥夺的，除了社会，国家权力没有任何其他的来源。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;strong&gt;知道可能面对的困难和痛苦，在死亡的恐惧中不断挣扎，而仍然能战胜自己，选择这条道路，才是真正的勇气。&lt;/strong&gt;&lt;br&gt;—— 《明朝那些事》&lt;br&gt;&lt;/blockquote&gt;

    
    </summary>
    
      <category term="Life-Talk" scheme="http://www.codepub.cn/categories/Life-Talk/"/>
    
    
      <category term="Thinking" scheme="http://www.codepub.cn/tags/Thinking/"/>
    
  </entry>
  
  <entry>
    <title>Lucene 5.5 开发手册</title>
    <link href="http://www.codepub.cn/2016/08/12/Lucene-5-5-developer-guide/"/>
    <id>http://www.codepub.cn/2016/08/12/Lucene-5-5-developer-guide/</id>
    <published>2016-08-12T14:52:23.000Z</published>
    <updated>2016-09-10T09:44:33.234Z</updated>
    
    <content type="html">&lt;h4 id=&quot;Lucene和Solr的历史版本&quot;&gt;Lucene和Solr的历史版本&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://archive.apache.org/dist/lucene/java/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lucene历史版本&lt;/a&gt;，不妨点进去看看，会发现&lt;strong&gt;Lucene&lt;/strong&gt;的版本更新很频繁，所以&lt;strong&gt;Lucene&lt;/strong&gt;的&lt;strong&gt;Doc&lt;/strong&gt;注释比&lt;strong&gt;JDK&lt;/strong&gt;的&lt;strong&gt;Doc&lt;/strong&gt;注释差太多，在研读&lt;code&gt;Lucene In Action&lt;/code&gt;的过程中，发现此书的&lt;strong&gt;Lucene&lt;/strong&gt;版本为&lt;strong&gt;3.0&lt;/strong&gt;，而自己使用的&lt;strong&gt;Lucene&lt;/strong&gt;版本是&lt;strong&gt;5.5&lt;/strong&gt;，所以会有诸多冲突之处，现聊记之，以备查用。另外附上&lt;a href=&quot;http://archive.apache.org/dist/lucene/solr/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Solr历史版本&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在学习&lt;strong&gt;Lucene&lt;/strong&gt;过程中，官方推荐的&lt;strong&gt;Lucene&lt;/strong&gt;索引查看工具是&lt;code&gt;Luke&lt;/code&gt;，下载地址&lt;a href=&quot;https://java.net/projects/opengrok/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点我&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;Lucene_API变动相关&quot;&gt;Lucene API变动相关&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Field&lt;/strong&gt;类中的枚举&lt;strong&gt;Index&lt;/strong&gt;已被废弃，转而采用&lt;strong&gt;FieldType&lt;/strong&gt;，并通过&lt;strong&gt;setIndexOptions&lt;/strong&gt;方法设置索引选项&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IndexWriter&lt;/strong&gt;的&lt;strong&gt;optimize&lt;/strong&gt;方法已被删除，推荐用&lt;strong&gt;forceMerge&lt;/strong&gt;方法代替&lt;/li&gt;
&lt;li&gt;对&lt;strong&gt;Document&lt;/strong&gt;加权在&lt;strong&gt;4.x&lt;/strong&gt;版本之后已经删除，如果想要对文档加权，需要对该文档中的每个&lt;strong&gt;Field&lt;/strong&gt;都进行加权&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NumericField&lt;/strong&gt;被删除，由&lt;strong&gt;FieldType&lt;/strong&gt;类中的枚举&lt;strong&gt;NumericType&lt;/strong&gt;进行设置，&lt;strong&gt;NumericType&lt;/strong&gt;提供了四种类型的数值，分别是&lt;strong&gt;INT&lt;/strong&gt;，&lt;strong&gt;LONG&lt;/strong&gt;，&lt;strong&gt;FLOAT&lt;/strong&gt;，&lt;strong&gt;DOUBLE&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IndexWriter.MaxFieldLength&lt;/strong&gt;等类似的一系列常量全被删除&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IndexWriter&lt;/strong&gt;中的&lt;strong&gt;isLocked&lt;/strong&gt;方法和&lt;strong&gt;unlock&lt;/strong&gt;方法全被删除，使用&lt;strong&gt;Directory&lt;/strong&gt;类中的&lt;strong&gt;obtainLock&lt;/strong&gt;方法替代，调用方式如下&lt;code&gt;Directory.obtainLock(IndexWriter.WRITE_LOCK_NAME)&lt;/code&gt;，如果已经获得锁的话，再次获取会抛异常&lt;code&gt;LockObtainFailedException:lock instance already obtained&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IndexWriter&lt;/strong&gt;中的&lt;strong&gt;setInfoStream(System.out)&lt;/strong&gt;方法被转移到&lt;strong&gt;IndexWriterConfig&lt;/strong&gt;类中，该方法用来打印&lt;strong&gt;Lucene&lt;/strong&gt;操作索引的相关输出信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BooleanQuery&lt;/strong&gt;的构造函数被废弃，使用&lt;strong&gt;BooleanQuery.Builder&lt;/strong&gt;替代之&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;BooleanQuery&lt;/strong&gt;中的&lt;strong&gt;add()&lt;/strong&gt;被废弃，推荐使用&lt;strong&gt;BooleanQuery.Builder().add()&lt;/strong&gt;代替之，示例如下&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TermQuery termQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;country&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Italy&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TermQuery termQuery1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;city&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Venice&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BooleanQuery build = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BooleanQuery.Builder().add(termQuery,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BooleanClause.Occur.MUST).add(termQuery1, BooleanClause.Occur.MUST).build();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中&lt;strong&gt;Occur&lt;/strong&gt;有三种选项，分别是&lt;strong&gt;MUST&lt;/strong&gt;表只有匹配该查询子句的文档才在考虑之列，&lt;strong&gt;SHOULD&lt;/strong&gt;意味着该项只是可选项，&lt;strong&gt;MUST_NOT&lt;/strong&gt;意味着搜索结果不会包含任何匹配该查询子句的文档。使用&lt;strong&gt;SHOULD&lt;/strong&gt;可以实现逻辑或（&lt;strong&gt;OR&lt;/strong&gt;）查询。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PhraseQuery&lt;/strong&gt;中的构造函数和&lt;strong&gt;setSlop&lt;/strong&gt;方法被废弃，推荐使用&lt;code&gt;PhraseQuery build = new PhraseQuery.Builder().setSlop(2).build();&lt;/code&gt;代替&lt;/li&gt;
&lt;li&gt;同样&lt;strong&gt;PhraseQuery&lt;/strong&gt;中&lt;strong&gt;add()&lt;/strong&gt;方法废弃，推荐使用&lt;code&gt;new PhraseQuery.Builder().setSlop(2).add(term).add(term1).build()&lt;/code&gt;代替，同时&lt;strong&gt;slop&lt;/strong&gt;中的数值代表的是&lt;strong&gt;term&lt;/strong&gt;和&lt;strong&gt;term1&lt;/strong&gt;中间的字符个数，不包含&lt;strong&gt;term&lt;/strong&gt;和&lt;strong&gt;term1&lt;/strong&gt;在内。注意&lt;strong&gt;slop&lt;/strong&gt;的默认值时0&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MatchAllDocsQuery(String normsField)&lt;/strong&gt;构造函数被删除，仅保留一个无参构造&lt;/li&gt;
&lt;li&gt;内建的&lt;strong&gt;TermAttribute&lt;/strong&gt;被删除，推荐使用&lt;strong&gt;CharTermAttribute&lt;/strong&gt;代替之，&lt;strong&gt;TermAttributeImpl&lt;/strong&gt;被删除，推荐使用&lt;strong&gt;CharTermAttributeImpl&lt;/strong&gt;代替之&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PerFieldAnalyzerWrapper.addAnalyzer()&lt;/strong&gt;方法被删除，使用构造函数初始化指定域所对应的分析器&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Map&amp;lt;String, Analyzer&amp;gt; fields = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fields.put(&lt;span class=&quot;string&quot;&gt;&quot;partnum&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; KeywordAnalyzer());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//对于其他的域，默认使用SimpleAnalyzer分析器，对于指定的域partnum使用KeywordAnalyzer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PerFieldAnalyzerWrapper perFieldAnalyzerWrapper = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PerFieldAnalyzerWrapper(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleAnalyzer(), fields);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;域缓存加载所有文档中某个特定域的值到内存，便于随机存取该域值。域缓存只能用于包含单个项的域，也就是说使用域缓存的文档都必须拥有一个与指定域对应的单一域值，即域值不能被拆分。&lt;strong&gt;FieldCache&lt;/strong&gt;在&lt;strong&gt;Lucene 5.5.0&lt;/strong&gt;中被&lt;strong&gt;lucene-core&lt;/strong&gt;模块移除，转移到了&lt;strong&gt;lucene-misc&lt;/strong&gt;模块并且访问权限为包级私有，&lt;strong&gt;FieldCache&lt;/strong&gt;类已经不鼓励使用，当要在某个&lt;strong&gt;Field&lt;/strong&gt;上进行排序时，用户应该使用&lt;strong&gt;Doc&lt;/strong&gt;值来索引相应的&lt;strong&gt;Field&lt;/strong&gt;，相对于使用&lt;strong&gt;FieldCache&lt;/strong&gt;更加快且耗费较少的堆大小&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IndexSearcher&lt;/strong&gt;中&lt;strong&gt;setDefaultFieldSortScoring()&lt;/strong&gt;方法被移除&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SpanQuery.getSpans()&lt;/strong&gt;方法转移到&lt;strong&gt;SpanWeight&lt;/strong&gt;中，在调用该方法前，需要先调用&lt;strong&gt;createWeight&lt;/strong&gt;方法创建&lt;strong&gt;SpanWeight&lt;/strong&gt;实例&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;SpanWeight&lt;/strong&gt;中的&lt;strong&gt;getSpans()&lt;/strong&gt;方法调用示例如下&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Spans spans = weight.getSpans(indexReader.getContext().leaves().get(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), SpanWeight.Postings.POSITIONS);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果想在域的起点查询指定的跨度，需要使用&lt;strong&gt;SpanFirstQuery(SpanQuery match, int end)&lt;/strong&gt;，&lt;strong&gt;end&lt;/strong&gt;指定了跨度的结束位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;搜索过滤中的一系列过滤器都被废弃或删除，例如&lt;strong&gt;TermRangeFilter&lt;/strong&gt;、&lt;strong&gt;NumericRangeFilter&lt;/strong&gt;、&lt;strong&gt;QueryWrapperFilter&lt;/strong&gt;、&lt;strong&gt;PrefixFilter&lt;/strong&gt;、&lt;strong&gt;CachingWrapperFilter&lt;/strong&gt;等，推荐使用相应的&lt;strong&gt;*Query&lt;/strong&gt;类和&lt;strong&gt;BooleanClause.Occur.FILTER&lt;/strong&gt;替代之，&lt;strong&gt;SpanQueryFilter&lt;/strong&gt;、&lt;strong&gt;CachingSpanFilter&lt;/strong&gt;、&lt;strong&gt;FieldCacheRangeFilter&lt;/strong&gt;等被移除&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FilteredDocIdSet&lt;/strong&gt;和&lt;strong&gt;FilteredQuery&lt;/strong&gt;将在&lt;strong&gt;Lucene 6.0&lt;/strong&gt;中移除&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MultiSearcher&lt;/strong&gt;被删除，用&lt;strong&gt;MultiReader&lt;/strong&gt;代替&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;getTermFreqVector&lt;/strong&gt;被删除，用&lt;strong&gt;getTermVector&lt;/strong&gt;代替&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FieldSelector&lt;/strong&gt;被删除，用&lt;strong&gt;StoredFieldVisitor&lt;/strong&gt;代替，&lt;strong&gt;FieldSelector&lt;/strong&gt;的子类&lt;strong&gt;LoadFirstFieldSelector&lt;/strong&gt;、&lt;strong&gt;MapFieldSelector&lt;/strong&gt;、&lt;strong&gt;SetBasedFieldSelector&lt;/strong&gt;亦被删除&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TermVectorMapper&lt;/strong&gt;被删除，相应地其子类&lt;strong&gt;PositionBasedTermVectorMapper&lt;/strong&gt;、&lt;strong&gt;SortedTermVectorMapper&lt;/strong&gt;、&lt;strong&gt;FieldSortedTermVectorMapper&lt;/strong&gt;亦被删除&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FieldSelectorResult&lt;/strong&gt;被删除，&lt;strong&gt;TermVector&lt;/strong&gt;被废弃&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Lucene_开发相关&quot;&gt;Lucene 开发相关&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;索引数字时，需要选择一个不丢弃数字的分析器，&lt;strong&gt;WhitespaceAnalyzer&lt;/strong&gt;和&lt;strong&gt;StandardAnalyzer&lt;/strong&gt;可以作为候选，而&lt;strong&gt;SimpleAnalyzer&lt;/strong&gt;和&lt;strong&gt;StopAnalyzer&lt;/strong&gt;两个类会将语汇单元流中的数字剔除&lt;/li&gt;
&lt;li&gt;优化索引只能提高搜索速度，而不是索引速度。注意索引优化会消耗大量的&lt;strong&gt;CPU&lt;/strong&gt;和&lt;strong&gt;I/O&lt;/strong&gt;资源，在优化期间，索引会占用较大的磁盘空间，大约为优化初期的3倍&lt;/li&gt;
&lt;li&gt;对于一个索引来说，一次只能打开一个&lt;strong&gt;Writer&lt;/strong&gt;，&lt;strong&gt;Lucene&lt;/strong&gt;采用文件锁来提供保障，该锁只有当&lt;strong&gt;IndexWriter&lt;/strong&gt;对象被关闭时才会释放&lt;/li&gt;
&lt;li&gt;任意多个线程都可以共享同一个&lt;strong&gt;IndexReader&lt;/strong&gt;类或者&lt;strong&gt;IndexWriter&lt;/strong&gt;类，这些类不仅是线程安全的，而且是线程友好的，能够很好的扩展到新增线程，针对并发访问唯一的限制是不能同时打开多于一个&lt;strong&gt;Writer&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;如果选择自己实现锁机制，要确认该机制能够正确运行，可以使用简单的调试工具，&lt;strong&gt;LockStressTest&lt;/strong&gt;类，该类可以与&lt;strong&gt;LockVerifyServer&lt;/strong&gt;类和&lt;strong&gt;VerifyingLockFactory&lt;/strong&gt;类联合使用，以确认你自己实现的锁机制能正常运行&lt;/li&gt;
&lt;li&gt;刷新操作是用来释放被缓存的更改的，而提交操作是用来让所有的更改（包括被缓存的更改或者已经刷新的更改）在索引中保持可见&lt;/li&gt;
&lt;li&gt;打开&lt;strong&gt;IndexReader&lt;/strong&gt;需要较大的系统开销，因此必须尽可能重复使用一个&lt;strong&gt;IndexReader&lt;/strong&gt;实例以用于搜索，并限制打开新&lt;strong&gt;IndexReader&lt;/strong&gt;的频率&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IndexSearcher&lt;/strong&gt;实例只能对其初始化时刻所对应的索引进行搜索。如果索引操作是由多线程完成的，新编入索引的文档则不能被该&lt;strong&gt;searcher&lt;/strong&gt;看到&lt;/li&gt;
&lt;li&gt;Query的一些子类说明：&lt;ul&gt;
&lt;li&gt;通过项进行搜索：&lt;strong&gt;TermQuery&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在指定的项范围内搜索：&lt;strong&gt;TermRangeQuery&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;通过短语搜索：&lt;strong&gt;PhraseQuery&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;通配符查询：&lt;strong&gt;WildcardQuery&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;搜索类似项：&lt;strong&gt;FuzzyQuery&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;匹配所有文档：&lt;strong&gt;MatchAllDocsQuery&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BooleanQuery&lt;/strong&gt;对其中包含的查询子句（调用一次&lt;strong&gt;add()&lt;/strong&gt;方法可以看作一个子句）是有数量限制的，默认情况下允许包含1024个查询子句，该限制主要是基于性能方面的考虑。当子句数量超过最大值时，程序会抛出&lt;strong&gt;TooManyClauses&lt;/strong&gt;异常。如果你在一些特殊情况下，需要增大查询子句的数量限制，可以调用&lt;code&gt;setMaxClauseCount(int maxClauseCount)&lt;/code&gt;方法进行设置，但是该操作明显会对性能产生影响&lt;/li&gt;
&lt;li&gt;举例说明&lt;strong&gt;PhraseQuery&lt;/strong&gt;匹配中&lt;strong&gt;slop&lt;/strong&gt;的计算方式，这里的&lt;strong&gt;slop&lt;/strong&gt;是指若要按顺序组成给定的短语所需要移动位置的次数。如&lt;strong&gt;Amsterdam has lots of bridges&lt;/strong&gt;这句话，假如我需要查询&lt;strong&gt;has&lt;/strong&gt;和&lt;strong&gt;bridges&lt;/strong&gt;，那么它们之间的&lt;strong&gt;slop&lt;/strong&gt;为2，假如我需要查询&lt;strong&gt;bridges&lt;/strong&gt;和&lt;strong&gt;has&lt;/strong&gt;（注意两次查询添加短语的顺序不同），那么它们之间的&lt;strong&gt;slop&lt;/strong&gt;为4，这个4代表的是将&lt;strong&gt;has&lt;/strong&gt;移动到&lt;strong&gt;bridges&lt;/strong&gt;之后需要的步数&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;PhraseQuery&lt;/strong&gt;支持复合项短语。无论短语中有多少个项，&lt;strong&gt;slop&lt;/strong&gt;因子都规定了按顺序移动项位置的总次数的最大值。例如&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//待检索文本：Venice has lots of canals&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PhraseQuery build = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PhraseQuery.Builder().setSlop(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;contents&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Venice&quot;&lt;/span&gt;)).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;contents&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;lots&quot;&lt;/span&gt;)).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;contents&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;canals&quot;&lt;/span&gt;)).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;search = indexSearcher.search(build, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Assert.assertNotEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;span class=&quot;comment&quot;&gt;//移动总次数为1+1=2，所以NotEquals&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在使用通配符&lt;strong&gt;WildcardQuery&lt;/strong&gt;进行查询时，可能会降低系统的性能，较长的前缀可以减少用于查找匹配搜索枚举的项的个数，如以通配符为首的查询模式会强制枚举所有索引中的项以用于搜索匹配&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;类似查询&lt;strong&gt;FuzzyQuery&lt;/strong&gt;会尽可能地枚举出一个索引中所有项，因此，最好尽量少地使用这类查询，即便要使用这类查询，起码也应当知晓其工作原理以及它对程序性能的影响&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;QueryParser&lt;/strong&gt;中针对某个项的否定操作必须与至少一个非否定项的操作联合起来进行，否则程序不会返回结果文档，换句话说不能使用&lt;strong&gt;“NOT term”&lt;/strong&gt;而必须使用&lt;strong&gt;“a AND NOT b”&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查询语句中用双引号括起来的项可以用来创建一个&lt;strong&gt;PhraseQuery&lt;/strong&gt;，例如查询语句”This is some phrase*“被&lt;strong&gt;StandardAnalyzer&lt;/strong&gt;分析时，将被解析成用短语”some phrase”构成的&lt;strong&gt;PhraseQuery&lt;/strong&gt;对象。星号不能被解释成模糊查询，请记住：双引号内的文本会促使分析器将之转换为PhraseQuery。那么说了这么多废话是什么意思呢？举例说明&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Query query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QueryParser(&lt;span class=&quot;string&quot;&gt;&quot;field&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer()).parse(&lt;span class=&quot;string&quot;&gt;&quot;\&quot;This is some phrase*\&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Assert.assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;analyzed&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;\&quot;? ? some phrase\&quot;&quot;&lt;/span&gt;, query.toString(&lt;span class=&quot;string&quot;&gt;&quot;field&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(query.toString(&lt;span class=&quot;string&quot;&gt;&quot;field&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//输出&quot;? ? some phrase&quot;，停用词This is被?代替了，而引号中的*被忽略了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分析器介绍&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;WhitespaceAnalyzer&lt;/strong&gt;：顾名思义，就是通过空格来分割文本信息，而并不对生成的语汇单元进行其他的规范化处理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SimpleAnalyzer&lt;/strong&gt;：该分析器会首先通过非字母字符来分割文本信息，然后将语汇单元统一为小写形式，需要注意的是，该分析器会去掉数字类型的字符，但会保留其他字符&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;StopAnalyzer&lt;/strong&gt;：该分析器功能与&lt;strong&gt;SimpleAnalyzer&lt;/strong&gt;类似，区别在于，前者会去除停用词，例如英文中的&lt;strong&gt;the&lt;/strong&gt;、&lt;strong&gt;a&lt;/strong&gt;等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;StandardAnalyzer&lt;/strong&gt;：这是Lucene最复杂的核心分析器。包含大量的逻辑操作来识别某些种类的语汇单元，比如公司名称、E-Mail地址以及主机名称等。它还会将语汇单元转换成小写形式，并去除停用词和标点符号，经试验，Lucene5.5中，该分析器无法切分出完整的邮箱地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;KeywordAnalyzer&lt;/strong&gt;：将整个文本作为一个单一语汇单元处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MultiPhraseQuery&lt;/strong&gt;类与&lt;strong&gt;PhraseQuery&lt;/strong&gt;类似，区别在于前者允许在同一位置上针对多个项的查询，当然要实现这种查询也可以使用&lt;strong&gt;BooleanQuery&lt;/strong&gt;类或者逻辑”或“连接符将所有可能的短语进行联合查询，但是这样会以更高昂的系统消耗为代价&lt;/li&gt;
&lt;li&gt;在进行多域值分析时，文档可能包含同名的多个&lt;strong&gt;Field&lt;/strong&gt;实例，而&lt;strong&gt;Lucene&lt;/strong&gt;在索引过程中在逻辑上将这些域的语汇单元按照顺序附加在一起，举例来说，如果一个域值是”&lt;strong&gt;&lt;em&gt;It’s time to pay incom tax&lt;/em&gt;&lt;/strong&gt;“而下一个域值是”&lt;strong&gt;&lt;em&gt;return library books on time&lt;/em&gt;&lt;/strong&gt;“，那么对于短语”&lt;strong&gt;&lt;em&gt;tax return&lt;/em&gt;&lt;/strong&gt;“的搜索将会匹配到这个域。为了解决这个问题，必须通过继承&lt;strong&gt;Analyzer&lt;/strong&gt;类来创建自己的分析器，然后重载&lt;strong&gt;getPositionIncrementGap&lt;/strong&gt;方法（以及&lt;strong&gt;tokenStream&lt;/strong&gt;或&lt;strong&gt;resuableTokenStream&lt;/strong&gt;方法）。默认情况下，&lt;strong&gt;getPositionIncrementGap&lt;/strong&gt;方法会返回0（无间隙），意思是它在运行时会认为各个域值是连接在一起的，如果将这个域值增加到足够大，那么位置查询就不会错误地在各个域值边界进行匹配了。注意一点，如果程序要高亮显示这些域，那么错误的偏移量会导致程序将错误的文本部分进行高亮显示，语汇单元&lt;strong&gt;OffsetAttribute&lt;/strong&gt;对象提供了几个方法来检索偏移量的起始和结束，还提供了一个特殊的&lt;strong&gt;endOffset&lt;/strong&gt;方法，该方法主要用于返回域的最后偏移&lt;/li&gt;
&lt;li&gt;另一种针对多域值的查询是使用&lt;strong&gt;MultiFieldQueryParser&lt;/strong&gt;，它是&lt;strong&gt;QueryParser&lt;/strong&gt;的子类，它会在后台程序中实例化一个&lt;strong&gt;BooleanQuery&lt;/strong&gt;对象，并将每个域的查询结合起来。当程序向&lt;strong&gt;BooleanQuery&lt;/strong&gt;添加查询子句时，默认操作符&lt;strong&gt;OR&lt;/strong&gt;被用于最简单的解析方法中，也可以通过使用&lt;strong&gt;parse&lt;/strong&gt;方法指定&lt;strong&gt;BooleanClause.Occur&lt;/strong&gt;的值。&lt;strong&gt;MultiFieldQueryParser&lt;/strong&gt;有一些使用限制，这主要是由它使用&lt;strong&gt;QueryParser&lt;/strong&gt;的方法导致的，你只能使用&lt;strong&gt;QueryParser&lt;/strong&gt;的一些默认设置，而不能更改之。&lt;strong&gt;MultiFieldQueryParser&lt;/strong&gt;的一个重要缺陷就是它会生成更多的复杂查询，而&lt;strong&gt;Lucene&lt;/strong&gt;必须对每条查询分别进行测试，这样会比使用全包含域速度更慢&lt;/li&gt;
&lt;li&gt;多域值查询的第三种方式是使用&lt;strong&gt;DisjunctionMaxQuery&lt;/strong&gt;，它会封装一个或多个任意的查询，将匹配的文档进行&lt;strong&gt;OR&lt;/strong&gt;操作，一个有趣的地方是当某个文档匹配到多于一条查询时，该类会将这个文档的评分记为最高分，而与&lt;strong&gt;BooleanQuery&lt;/strong&gt;相比，后者会将所有匹配的评分相加。&lt;strong&gt;DisjunctionMaxQuery&lt;/strong&gt;还包含一个可选的仲裁器，因此所有处理都是平等的，一个匹配更多查询的文档能够获得更高的评分&lt;/li&gt;
&lt;li&gt;如果希望停止较慢的搜索，那么可以使用&lt;strong&gt;TimeLimitingCollector&lt;/strong&gt;，它能在耗时较长的情况下停止搜索，显然你必须针对超时搜索情况选择具体的处理内容&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TimeLimitingCollector&lt;/strong&gt;在收集搜索结果时添加一些自己的操作（比如每当获取一个搜索结果文档时都检查此时是否已超时），这会使得搜索速度变得稍慢，其次，它只在收集搜索结果时判断是否超时，然后一些查询有可能在&lt;strong&gt;Query.rewrite()&lt;/strong&gt;操作期间消耗较长时间。对于这类查询来说，程序可能只有在搜索超时时才能捕获&lt;strong&gt;TimeExceededException&lt;/strong&gt;异常&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lucene&lt;/strong&gt;通过创建抽象基类&lt;strong&gt;FieldComparatorSource&lt;/strong&gt;的子类来实现自定义排序&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lucene&lt;/strong&gt;所有的核心搜索方法都在后台使用&lt;strong&gt;Collector&lt;/strong&gt;子类来完成搜索结果收集。例如，当通过相关性进行排序时，后台会使用&lt;strong&gt;TopScoreDocCollector&lt;/strong&gt;类，当通过域进行排序时，则使用&lt;strong&gt;TopFieldCollector&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Lucene索引前缀后缀规则：所谓前缀后缀规则，即当某个词和前一个词有共同的前缀的时候，后面的词仅仅保存前缀在词中的偏移（offset），以及除前缀以外的字符串（称为后缀）。例如：&lt;strong&gt;Term Terminal&lt;/strong&gt;存储为&lt;code&gt;Term4inal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;索引差值规则：先后保存两个整数的时候，后面的整数仅仅保存和前面整数的差值即可，例如：&lt;strong&gt;5,9,11&lt;/strong&gt;存储为&lt;code&gt;|5|4(9-5)|3(11-9)|&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;关于Directory子类的选择问题，最简单的方式是使用&lt;code&gt;public static FSDirectory open(Path path)&lt;/code&gt;，让Lucene来替你尽力选择最适合当前硬件环境的实现&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Lucene事务相关&quot;&gt;Lucene事务相关&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;通过IndexWriter.getReader()获得的Reader是能看到上次commit之后，IndexWriter执行至当前的所有变化，该方法提供一种”near real-time”近实时的搜索&lt;/li&gt;
&lt;li&gt;当IndexWriter正在做更改的时候，所有更改都不会对当前搜索该索引的IndexReader可见，直到你commit或者打开了一个新的NRT(near real-time)Reader。一次只能有一个IndexWriter实例对索引进行更改&lt;/li&gt;
&lt;li&gt;仅在一个新的目录上打开一个IndexWriter并不会产生一个空的commit操作，即你无法在这个目录上打开一个IndexReader，直到你完成一次commit&lt;/li&gt;
&lt;li&gt;单个Lucene索引可以保存多个commit，每次commit都持有该commit被创建的时间点的索引视图&lt;/li&gt;
&lt;li&gt;KeepOnlyLastCommitDeletionPolicy是默认的删除机制实现，它会删除掉除了最近一次commit以外的所有commit。如果采用NoDeletionPolicy，那么每一次commit都会保存&lt;/li&gt;
&lt;li&gt;你可以在commit的时候传送userData&lt;code&gt;(Map&amp;lt;String,String&amp;gt;)&lt;/code&gt;，用于记录关于本次commit的一些用户自定义信息（对Lucene不透明），然后使用IndexReader.listCommits方法获得索引的所有commit信息。一旦你找到了一次commit，你可以在其上找开一个IndexReader对commit点上的索引数据进行搜索&lt;/li&gt;
&lt;li&gt;你也可以基于之前的commit打开一个IndexWriter，回滚之后的所有变动。这有点类似于rollback方法，不同之处在于它允许你在多个commit间rollback，而不仅是回滚当前IndexWriter会话中所做的变动&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Lucene的QueryParse表达式说明&quot;&gt;Lucene的QueryParse表达式说明&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表达式&lt;/th&gt;
&lt;th&gt;匹配文档&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;java&lt;/td&gt;
&lt;td&gt;在字段中包含java&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;java junit&lt;br&gt;java OR junit&lt;/td&gt;
&lt;td&gt;在字段中包含java或者junit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+java +junit&lt;br&gt;java AND junit&lt;/td&gt;
&lt;td&gt;在字段中包含java以及junit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title:ant&lt;/td&gt;
&lt;td&gt;在title字段中包含ant&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title:extreme&lt;br&gt;-subject:sports&lt;br&gt;title:extreme&lt;br&gt;AND NOT subject:sports&lt;/td&gt;
&lt;td&gt;在title字段中包含extreme并且在subject字段中不能包含sports&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(agile OR extreme) AND methodology&lt;/td&gt;
&lt;td&gt;在字段中包含methodology并且同时包括agile或者extreme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title:”junit in action”&lt;/td&gt;
&lt;td&gt;在title字段中包含junit in action&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;title:”junit action”~5&lt;/td&gt;
&lt;td&gt;junit和action之间距离小于5的文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;java*&lt;/td&gt;
&lt;td&gt;包含以java开头的，例如：javaspaces,javaserver&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;java~&lt;/td&gt;
&lt;td&gt;包含和java相似的，如lava&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lastmodified:[1/1/04 TO 12/31/04]&lt;/td&gt;
&lt;td&gt;在lastmodified字段中值为2004-01-01到2004-12-31中间的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;+pubdate:[10100101 TO 20101231] Java AND (Lucene OR Apache)&lt;/td&gt;
&lt;td&gt;检索2010年出版的关于Java、且内容中包含Lucene或Apache关键字的所有书籍&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;如果查询表达式使用了以下特殊字符，你就应该对其进行转义操作，使这些字符在一般的表达式中能够发挥作用。&lt;strong&gt;QueryParser&lt;/strong&gt;在各个项中使用反斜杠&lt;code&gt;(\)&lt;/code&gt;来表示转义字符。需要进行转义的字符有：&lt;code&gt;\ + - ! ( ) : ^ ] { } ~ * ?&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;Lucene常见Field&quot;&gt;Lucene常见Field&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表达式&lt;/th&gt;
&lt;th&gt;匹配文档&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IntField&lt;/td&gt;
&lt;td&gt;主要对int类型的字段进行存储，需要注意的是如果需要对IntField进行排序使用SortField.Type.INT来比较，如果进范围查询或过滤，需要采用NumericRangeQuery.newIntRange()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LongField&lt;/td&gt;
&lt;td&gt;主要处理Long类型的字段的存储，排序使用SortField.Type.Long,如果进行范围查询或过滤利用NumericRangeQuery.newLongRange()，LongField常用来进行时间戳的排序，保存System.currentTimeMillions()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FloatField&lt;/td&gt;
&lt;td&gt;对Float类型的字段进行存储，排序采用SortField.Type.Float,范围查询采用NumericRangeQuery.newFloatRange()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BinaryDocVluesField&lt;/td&gt;
&lt;td&gt;只存储不共享值，如果需要共享值可以用SortedDocValuesField&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NumericDocValuesField&lt;/td&gt;
&lt;td&gt;用于数值类型的Field的排序(预排序)，需要在要排序的field后添加一个同名的NumericDocValuesField&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SortedDocValuesField&lt;/td&gt;
&lt;td&gt;用于String类型的Field的排序，需要在StringField后添加同名的SortedDocValuesField&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StringField&lt;/td&gt;
&lt;td&gt;用于String类型的字段的存储，StringField是只索引不分词&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TextField&lt;/td&gt;
&lt;td&gt;对String类型的字段进行存储，TextField和StringField的不同是TextField既索引又分词&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StoredField&lt;/td&gt;
&lt;td&gt;存储Field的值，可以用IndexSearcher.doc和IndexReader.document来获取此Field和存储的值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;参考资料&lt;br&gt;【1】Lucene In Action (Second Edition)&lt;br&gt;【2】&lt;a href=&quot;http://3dobe.com/archives/172/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://3dobe.com/archives/172/&lt;/a&gt;&lt;br&gt;【3】&lt;a href=&quot;http://blog.mikemccandless.com/2012/03/transactional-lucene.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.mikemccandless.com/2012/03/transactional-lucene.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Lucene和Solr的历史版本&quot;&gt;Lucene和Solr的历史版本&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://archive.apache.org/dist/lucene/java/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lucen
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Lucene" scheme="http://www.codepub.cn/tags/Lucene/"/>
    
  </entry>
  
  <entry>
    <title>Lucene读写NFS文件系统异常</title>
    <link href="http://www.codepub.cn/2016/08/12/Lucene-read-write-NFS-file-system-error/"/>
    <id>http://www.codepub.cn/2016/08/12/Lucene-read-write-NFS-file-system-error/</id>
    <published>2016-08-12T14:47:34.000Z</published>
    <updated>2016-08-12T15:17:55.791Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Caused by: java.lang.InternalError: a fault occurred in a recent unsafe memory access operation in compiled Java code&lt;br&gt;at org.apache.lucene.store.DataInput.readVInt(DataInput.java:134) ~[lucene-core-5.5.0.jar:5.5.0 2a228b3920a07f930f7afb6a42d0d20e184a943c - mike - 2016-02-16 15:18:34]&lt;br&gt;at org.apache.lucene.codecs.blocktree.SegmentTermsEnumFrame.loadBlock(SegmentTermsEnumFrame.java:157) ~[lucene-core-5.5.0.jar:5.5.0 2a228b3920a07f930f7afb6a42d0d20e184a943c - mike - 2016-02-16 15:18:34]&lt;br&gt;at org.apache.lucene.codecs.blocktree.SegmentTermsEnum.seekExact(SegmentTermsEnum.java:507) ~[lucene-core-5.5.0.jar:5.5.0 2a228b3920a07f930f7afb6a42d0d20e184a943c - mike - 2016-02-16 15:18:34]&lt;br&gt;at org.apache.lucene.index.LeafReader.docFreq(LeafReader.java:152) ~[lucene-core-5.5.0.jar:5.5.0 2a228b3920a07f930f7afb6a42d0d20e184a943c - mike - 2016-02-16 15:18:34]&lt;br&gt;at org.apache.lucene.search.IndexSearcher.count(IndexSearcher.java:394) ~[lucene-core-5.5.0.jar:5.5.0 2a228b3920a07f930f7afb6a42d0d20e184a943c - mike - 2016-02-16 15:18:34]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通常来说，在NFS上大规模的操作总是容易出问题的。如果你使用的是NFS（Network File System）那么建议你升级NFS文件系统所在机器的JDK到Java的最新版，而不是升级你跑程序的机器，因为NFS文件系统所在的服务器很可能和你跑程序的不在同一台服务器，通常情况下都是将NFS作为一块硬盘挂载到某个服务器之上。&lt;/p&gt;
&lt;p&gt;另外Lucene本身对NFS的支持就不够好，所以如果你服务器资源充足的话，建议在一个服务器上跑写索引进程，在另一台服务器上跑读索引进程，这样也能避免此类问题。&lt;/p&gt;
&lt;p&gt;另外，&lt;a href=&quot;http://www.gossamer-threads.com/lists/lucene/java-user/253368&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;unsafe memory access operation&lt;/a&gt;这个帖子中碰到了同样的问题，可以参考之。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Caused by: java.lang.InternalError: a fault occurred in a recent unsafe memory access operation in compiled Java code&lt;br&gt;at 
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Lucene" scheme="http://www.codepub.cn/tags/Lucene/"/>
    
  </entry>
  
  <entry>
    <title>使用坚果云同步IntelliJ IDEA的配置文件</title>
    <link href="http://www.codepub.cn/2016/08/09/Use-nuts-cloud-sync-IntelliJ-IDEA-configuration-files/"/>
    <id>http://www.codepub.cn/2016/08/09/Use-nuts-cloud-sync-IntelliJ-IDEA-configuration-files/</id>
    <published>2016-08-09T13:50:39.000Z</published>
    <updated>2016-09-14T14:30:53.198Z</updated>
    
    <content type="html">&lt;p&gt;对于IDEA这样的神器，每个人都必然会有很多个性化的配置，那么如何在多台终端同步IDEA的配置呢？配合强大的坚果云同步功能来自动同步你的配置文件吧。另外坚果云免费版虽然对流量有限制，但是同步一个小小的配置文件夹还是足够了。&lt;/p&gt;
&lt;p&gt;此方法也适用于JetBrains家的其它IDE系列产品，稍有不同之处请自行调整。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IntelliJ IDEA，一套智慧型的Java整合开发工具，特别专注与强调程序员的开发撰写效率提升&lt;/li&gt;
&lt;li&gt;PHPStorm，PHP集成开发工具&lt;/li&gt;
&lt;li&gt;PyCharm，智能Python集成开发工具&lt;/li&gt;
&lt;li&gt;RubyMine，一个为Ruby和Rails开发者准备的IDE，其带有所有开发者必须的功能，并将之紧密集成于便捷的开发环境中&lt;/li&gt;
&lt;li&gt;WebStorm，智能HTML/CSS/JS开发工具&lt;/li&gt;
&lt;li&gt;AppCode，开发Obj-C的IDE，是一个XCode的替代物&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IDEA默认配置文件存放位置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 保存在 C:/Users/username/.IntelliJIdeaXX (XX表示产品的版本号，当前版本是2016.2)&lt;/li&gt;
&lt;li&gt;Unix/Linux 保存在 ~/.IntelliJIdeaXX (~ 就是/home/目录)&lt;/li&gt;
&lt;li&gt;Mac 保存在 ~/Library/Preferences/IntelliJIdeaXX&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;如果是 IntelliJ IDEA Community，那么文件名就是 IdeaICXX。坚果云的客户端安装就不说了，关闭IDEA，从你的默认配置目录里剪切config这个目录到你的坚果云同步目录。如果你想要同步多个工具的配置目录，那么可以为config搭配一个父目录使用。例如我的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;E:/jianguoyun/IDEA/config &amp;emsp;&amp;emsp;#IDEA的配置文件路径&lt;/li&gt;
&lt;li&gt;E:/jianguoyun/PyCharm/config &amp;emsp;&amp;emsp;#PyCharm的配置文件路径&lt;/li&gt;
&lt;li&gt;E:/jianguoyun/PHPStorm/config &amp;emsp;&amp;emsp;#PHPStorm的配置文件路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开IDEA安装目录&lt;code&gt;C:\Program Files (x86)/JetBrains/IntelliJ IDEA 2016.2/bin/idea.properties&lt;/code&gt;，找到第8行，把idea.config.path前面的#号去掉，=号后面的路径修改成之前的配置文件夹的目录，例如IDEA修改为&lt;code&gt;idea.config.path=E:/jianguoyun/IDEA/config&lt;/code&gt;。记得把路径中的“\”换成“/”。&lt;/p&gt;
&lt;p&gt;第二天到公司直接修改idea.properties即可，前提是同样安装了坚果云客户端哦。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对于IDEA这样的神器，每个人都必然会有很多个性化的配置，那么如何在多台终端同步IDEA的配置呢？配合强大的坚果云同步功能来自动同步你的配置文件吧。另外坚果云免费版虽然对流量有限制，但是同步一个小小的配置文件夹还是足够了。&lt;/p&gt;
&lt;p&gt;此方法也适用于JetBrains家的
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="IntelliJ" scheme="http://www.codepub.cn/tags/IntelliJ/"/>
    
  </entry>
  
  <entry>
    <title>读《大国空巢》</title>
    <link href="http://www.codepub.cn/2016/07/09/Read-a-big-country-in-an-empty-nest/"/>
    <id>http://www.codepub.cn/2016/07/09/Read-a-big-country-in-an-empty-nest/</id>
    <published>2016-07-09T15:31:11.000Z</published>
    <updated>2016-07-20T14:41:59.212Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;strong&gt;一个人在科学探索的道路上，走过弯路，犯过错误，并不是坏事，更不是什么耻辱，要在实践中勇于承认和改正错误。&lt;/strong&gt;&lt;br&gt;—— 爱因斯坦&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;：易富贤，男，湖南洪江市（黔阳县）人。1988-1999年在中南大学湘雅医学院学习，获临床医学学士、药理学硕士、药理学博士学位。1999-2002年在美国明尼苏达大学、威斯康星医学院做博士后。2002年起为威斯康星大学妇产科“母胎医学奖学金项目”（MFM Fellowship，由“美国妇产科董事会”推进）的副研究员（Associate Scientist）。2013年晋升为研究员（Senior Scientist）。育有一女两儿。美华学社400名初始会员之一。中国旅美科技协会会员。中国改革发展研究院中国改革论坛网络专家。&lt;/p&gt;
&lt;p&gt;作者早年学成归国，但是在国内一直不受待见，于是至今定居国外。这在天朝本不是稀奇的事情，正确的事正确的人往往无法发挥其所拥有的真正价值。这本书的主要观点包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主流家庭生一个孩子，这个社会必然出现老龄化等问题&lt;/li&gt;
&lt;li&gt;人口不是社会负担，它创造社会财富&lt;/li&gt;
&lt;li&gt;人口下降带来的问题的严重程度被低估，不执行计划生育带来的问题被夸大&lt;/li&gt;
&lt;li&gt;现在停止计划生育政策已经有点晚了，但是国家还没有完全停止计划生育，结构性问题要纠正需要很长时间&lt;/li&gt;
&lt;li&gt;中国目前社会想要完成世代更替，社会总生育率应该保持在2.3的水平，也就是一个家庭生育2.3个孩子&lt;/li&gt;
&lt;li&gt;主流家庭需要生三个孩子，人口推动经济繁荣，人口决定文明的兴衰&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大国空巢是一本反思计划生育的书籍，所以在当年计划生育大行其道之时一直被当做禁书对待，直到近年放开二孩政策的推行才使得此书与读者得以想见，这确实是一本好书，为什么这么说呢？因为它从另一个侧面让我知道了我们平时接受到的大多数观点并不一定是正确的，例如减少人口可以提高素质，胡扯，真正能提高人口素质的只有良好的教育；例如优生优育可以提高人口质量，胡扯，不管是优质基因还是非优质基因都应该得到传承，这才是真正的基因多样化，因为一代的非优秀基因经过几代的繁衍一样可以孕育出非常优秀的基因，这就像大多数伟大的科学家，其父辈及祖上的基因却并不都是优秀的基因；例如，降低人口数量，可以提高就业率，胡扯，你没看过世界上大多数国家的人口都不及美国人口的数量，但是个个失业率都超过美国吗？再例如，推行晚婚晚育的政策，在医学上早有定论，人在三十岁之前的基因才是质量最好的基因，如果大家都三十岁四十岁之后生孩子，经过多代繁衍，估计自己就把自己灭亡了。很多观点不能一一列举，只是想说这个世界上聪明或者有远见之人一直都在，只是没有机会发声而已，即便他们奋力呐喊，普通愚民也难以企及。&lt;/p&gt;
&lt;p&gt;作者在书籍中早就预测到如今东北的经济衰退是必然，而其依据就是人口的流动以及出生率，近几年东北的人口一直都处于净流出状态，从这点来说，东北经济不衰退才奇怪呢。毛爷爷早就说过，人是第一最可宝贵的资源，无论任何事物，离开人都是不行的，这也是毛爷爷时代人口激增的原因。况且那个年代人口激增也不能怪毛爷爷，而主要原因是因为国人经过战乱之后平均寿命大大延长所致。换句话说，我们现代人都是享受毛爷爷的遗留成果而已，如果中国没有这么多廉价的人力资源，没有人口红利的存在，现如今想成长为全球第二大经济体，无异于痴人说梦。所以很多事情并不是在当代才会有结果体现，往往要延后数十年才能真正的认识到一些决策的优劣与否。&lt;/p&gt;
&lt;p&gt;所有的独生子女家庭都像是在走钢丝，而失独家庭就是那些走钢丝摔下来的人，现在中国有几百万的失独家庭，预计将来失独家庭可能会达到千万级别，想一想，这一千万个家庭中可能会存在多少伟大的基因，但是都由于失独而导致绝种，伟大基因从此在世界上消失。失独不仅仅是白发人送黑发人，更是有悖人伦的人间惨剧，当这些人进入耄耋之年，整个生活失去目标，想想自己这一血脉从此在世间再无延续，而且随着年龄的增加，老无所依，老无所养，更缺少子孙去慰藉他们的内心世界，同时还会加重整个社会的养老负担。&lt;/p&gt;
&lt;p&gt;越是最基本的权利，就越是需要公平地得到保障。比如在空气和阳光这些基本的生活资源，无论贫富基本是平等共享的。生育是最原始的本能，生育权是仅次于生存权的基本人权。一夫一妻制的建立，就是为了保障性和生育这两大基本权利在制度上平等。无论贫富，基本的生育权都需要得到保障。合理的制度是既能让高学历、高收入者“愿意生孩子”，也让低收入者“养得起孩子”。现在即便放开生育，依然没有出现爆发式的补偿性生育高峰，究其原因，并不是人们不愿生，而是生了养不起，哈哈，天朝啊。&lt;/p&gt;
&lt;p&gt;人是生物，生物体最基本的特征是新陈代谢，这是与非生物最本质的区别。只有在新陈代谢的基础上，生物体才能进行生长、发育、应激、适应、遗传和变异等各项生命活动。中华文明之所以能够延续数千年，就是因为中华生育文化符合“生物学”原则，强调新陈代谢。而现在美国的生育文化尚处于“物理学”的水平，还没有上升到“生物学”的高度。没有人口的新陈代谢，人类文明将如同温水煮青蛙，在适应中灭亡。&lt;/p&gt;
&lt;p&gt;最后肯定会出现读者不认同作者观点的情况，不要紧，不管你相不相信计划生育会带来巨大的社会问题，如今已经有了非常好的佐证，那就是由于穆斯林超强的生育能力，未来的世界中，穆斯林们必然是一支有着强大影响力的存在。有兴趣的话请看&lt;a href=&quot;https://www.douban.com/group/topic/4808975/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;欧洲穆斯林化与西方的衰落&lt;/a&gt;，这是书籍《America Alone ：The end of the world as we know it》中的部分内容。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;strong&gt;一个人在科学探索的道路上，走过弯路，犯过错误，并不是坏事，更不是什么耻辱，要在实践中勇于承认和改正错误。&lt;/strong&gt;&lt;br&gt;—— 爱因斯坦&lt;br&gt;&lt;/blockquote&gt;

    
    </summary>
    
      <category term="Life-Talk" scheme="http://www.codepub.cn/categories/Life-Talk/"/>
    
    
      <category term="Thinking" scheme="http://www.codepub.cn/tags/Thinking/"/>
    
  </entry>
  
  <entry>
    <title>读《黑客与画家》</title>
    <link href="http://www.codepub.cn/2016/06/29/Read-Hackers-and-Painters-Big-Ideas-from-the-Computer-Age/"/>
    <id>http://www.codepub.cn/2016/06/29/Read-Hackers-and-Painters-Big-Ideas-from-the-Computer-Age/</id>
    <published>2016-06-29T15:21:40.000Z</published>
    <updated>2016-06-29T15:47:23.584Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;strong&gt;一杯清水因滴入一滴污水而变污浊，一杯污水却不会因一滴清水的存在而变清澈。&lt;/strong&gt;&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;：保罗•格雷厄姆，《黑客与画家》一书的作者，硅谷创业之父。1964年，出生于匹兹堡郊区的一个中产阶级家庭。父亲是设计核反应堆的物理学家，母亲在家照看他和他的妹妹。青少年时代，格雷厄姆就开始编程。但是，他还喜欢许多与计算机无关的东西，这在编程高手之中是很少见的。&lt;/p&gt;
&lt;p&gt;保罗•格雷厄姆在康奈尔大学读完本科，然后在哈佛大学获得计算机科学博士学位。1995年，他创办了Viaweb，帮助个人用户在网上开店，这是世界上第一个互联网应用程序。1998年夏天，Yahoo!公司收购了Viaweb，收购价约为5000万美元。&lt;/p&gt;
&lt;p&gt;此后，他架起了个人网站paulgraham.com，在上面撰写了许许多多关于软件和创业的文章，以深刻的见解和清晰的表达而著称，迅速引起了轰动。2005年，他身体力行，创建了风险投资公司Y Combinator(Y运算子，简称YC，Y Combinator是一个编程术语，意思是创造其它函数的函数)，将己的理论转化为实践，目前已经资助了80多家创业公司。现在，他是公认的互联网创业权威。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;《黑客与画家：硅谷创业之父Paul Graham文集》主要介绍黑客即优秀程序员的爱好和动机，讨论黑客成长、黑客对世界的贡献以及编程语言和黑客工作方法等所有对计算机时代感兴趣的人的一些话题。书中的内容不但有助于了解计算机编程的本质、互联网行业的规则，还会帮助读者了解我们这个时代、迫使读者独立思考。&lt;/p&gt;
&lt;h4 id=&quot;为什么书呆子不受欢迎&quot;&gt;为什么书呆子不受欢迎&lt;/h4&gt;&lt;p&gt;“书呆子”与“高智商”有强烈的正相关关系，你越喜欢读书，就越不受别人的欢迎，因此“书呆子”和“受欢迎”之间，有一种更强烈的负相关关系。这样看来，“高智商”似乎导致了你不受欢迎。道理应该是浅显直白的，爱读书的人一般不愿意和无聊或低俗的人去讨论生活的乐趣以及人生的意义，相对地，他们更愿意花时间独处，去汲取未知世界的养分，成长自己。而人际关系又多数是和彼此之间的交流或者共同的生活交织在一起，这样就自然导致独处的人不容易受到别人的欢迎，但是记住天才都是孤独的，没人能跟得上他们思维的脚步，他们也不愿意停留，而是一直进取。这些都是我的个人见解，在本书中，作者认为书呆子不受欢迎的真正原因，是他们脑子里想着别的事情。他们的注意力都放在读书或者观察世界上面，而不是放在穿衣打扮、开晚会上面。&lt;/p&gt;
&lt;h4 id=&quot;黑客与画家&quot;&gt;黑客与画家&lt;/h4&gt;&lt;p&gt;判断一个人是否具备“换位思考”的能力有一个好方法，那就是看他怎样向没有技术背景的人解释技术问题。我们大概都认识这样一些人，他们在其它方面非常聪明，但是把问题解释清楚的能力却惊人低下。软件的部分功能就是解释自身。为了写出优秀软件，你必须假定用户对你的软件基本上一无所知。基于这些原因，也导致了目前软件世界里面的主流问题，软件工程师看用户就像傻瓜一样，用户呢？看开发软件的人也像傻瓜一样，互相看不上，互相不理解。所以技术人员也要适当的学会换位思考，这样才能够开发出更符合大众水平更加流行的优秀作品。如果只能让别人记住一句关于编程的名言，那么这句名言就是《计算机程序的结构与解释》一书的卷首语：“程序写出来是给人看的，附带能在机器上运行”。&lt;/p&gt;
&lt;p&gt;“换位思考”不仅是为了你的用户，也是为了你的读者。这对你是有利的，因为你也会读自己写的东西。许多黑客六个月后再读自己的程序，却发现根本看不懂它是怎么运行的。注意一点，把代码写得便于阅读，并不是让你塞进去很多注释。只有在那些不太成熟、容易出现问题的地方，你才应该加上注释，提醒读者注意那里，就好像公路上只有在急转弯处才会出现警示标志一样。&lt;/p&gt;
&lt;h4 id=&quot;不能说的话&quot;&gt;不能说的话&lt;/h4&gt;&lt;p&gt;要是能坐上时间机器回到过去，不管哪一个年代，有一件事都是不会改变的，那就是“祸从口出”。你一定要小心自己说的话，自以为无害的言论会给你惹来大麻烦。历史的常态似乎就是，任何一个年代的人们，都会对一些荒谬的东西深信不疑。他们的信念还很坚定，只要有人稍微表示一点怀疑，就会惹来大麻烦。我们这个时代是否有所不同？只要读过一点历史，你就知道答案几乎确定无疑，就是“没有不同”。即使有那么一丝微小的可能，有史以来第一次，我们这个时代的所有信念都是正确的，那也是处于惊人的巧合，而不是因为我们真正找到了正确的方向。我想作者应该是没有读过中国历史，否则他就会知道不仅有些话不能说，而且还不能写出来，这都要拜大清朝特有的文字狱所赐。&lt;/p&gt;
&lt;h4 id=&quot;良好的坏习惯&quot;&gt;良好的坏习惯&lt;/h4&gt;&lt;p&gt;不少公司都想知道，什么事情可以外包（指的是聘请另一个公司来执行，而不是指把业务部门转移到海外），什么事情不可以外包。一个可能的答案是，公司内部所有不直接感受到竞争压力的部门都应该外包出去，让他们暴露在竞争压力之下。&lt;/p&gt;
&lt;h4 id=&quot;如何创造财富&quot;&gt;如何创造财富&lt;/h4&gt;&lt;p&gt;从经济学观点看，你可以把创业想象成一个压缩过程，你的所有工作年份被压缩成了短短几年。你不再是低强度地工作四十年，而是以极限强度工作四年。在高技术领域，这种压缩的回报尤其丰厚，工作效率越高，额外报酬就越高。&lt;/p&gt;
&lt;p&gt;一个大学毕业生总是想“我需要一份工作”，别人也是这么对他说的，好像变成某个组织的成员是一件多么重要的事情。更直接的表达方式应该是“你需要去做一些人们需要的东西”。公司不过是一群人在一起工作，共同做出某种人们需要的东西。真正重要的是做出人们需要的东西，而不是加入某个公司。&lt;/p&gt;
&lt;p&gt;要致富，你需要两样东西：可测量性和可放大性。你的职位产生的业绩，应该是可测量的，否则你做得再多，也不会得到更多的报酬。此外，你还必须有可放大性，也就是说你做出的决定能够产生巨大的效应。就算你无法测量每个员工的贡献，但是你可以得到近似值，那就是测量小团队的贡献。一般情况下，小型团队都由多人组成。只有表演或写作这样的特殊工作，你才会一个人单干。你最好找出色的人合作，因为他们的工作和你的一起平均计算。团队越大，每个人的贡献就越接近于整体的平均值。&lt;/p&gt;
&lt;p&gt;如果你有两个选择，就选择较难的那个。如果你要选择是坐在家里看电视，还是外出跑步，那就出去跑步吧。这个方法有效的原因可能是遇到两个一难一易的选择时，往往出于懒惰的缘故，你会选择较易的那个选项。在意识深处，你其实知道不懒惰的做法会带来更好的结果，这个方法只是迫使你接受这一点。&lt;/p&gt;
&lt;p&gt;关于工业革命的起因，已经有大量的文献论述过。但是，创造财富的人能够心安理得地享用自己的财富，这确实是工业革命的一个必要条件。如何从经济学观点看什么是创业公司呢？简单说，就是可以让人更快速工作的地方。你不再是慢慢地积累50年的普通工资，而是要尽快地将这笔钱赚到手。所以，政府禁止个人财富积累实际上就是命令人民减慢工作的速度。缓慢工作的后果并不仅仅是延迟了技术革新，而且很可能会扼杀技术革新。只有在快速获得巨大利益的激励下，你才会去挑战那些困难的问题，否则你根本不愿意去碰它们。冷战、第二次世界大战、近代的大多数战争都说明了这个道理。要鼓励大家去创业。只要懂得藏富于民，国家就会变得强大。让书呆子保住它们的血汗钱，你就会无敌于天下。&lt;/p&gt;
&lt;p&gt;别老是想着去赚世界上的钱，而是应该想着为世界创造财富，当你真的能为世界创造财富的时候，金钱也就会找上你了。假设你拥有一辆老爷车，你可以不去管它，在家中悠闲度日，也可以自己动手把它修葺一新。这样做的话，你就创造了财富。世界上因为多了一辆修葺一新的车，财富就变的更多了一点，对你尤其是如此。财富和金钱完全是两码事，请大家不要混淆一谈，你拥有财富，比如技术、人脉、后台等等，这些都是可以帮你赢得金钱的，但是你拥有金钱不一定比财富来的稳固，如果被政府没收的话，你还能不能赚到这么多的金钱，但是拥有财富的人是不一样的，财富是别人无法夺走的，哪怕你现在是个穷光蛋，你都有可能随时变成百万富翁。&lt;/p&gt;
&lt;p&gt;程序员创造财富的速率存在巨大的差异，一个优秀的程序员连续工作几个星期就可以创造价值100万美元的财富。同样的时间内，一个平庸的程序员不仅无法创造财富，甚至还可能减少财富（比如引入了bug）。这就是为什么如此之多的最优秀程序员都是自由主义者的原因。我们这个世界，你向下沉沦或者向上奋进都取决于你自己，因为最顶尖的5%的程序员写出了全世界99%的优秀软件。&lt;/p&gt;
&lt;p&gt;创造财富不是致富的唯一方法，在人类的历史长河中，它甚至不是最常见的方法。就在几个世纪前，财富的主要来源还是矿石、奴隶、农奴、土地、牲畜，而快速获得财富的方法只有继承、婚姻、征服、没收。&lt;/p&gt;
&lt;h4 id=&quot;关注贫富分化&quot;&gt;关注贫富分化&lt;/h4&gt;&lt;p&gt;事实上，财富与金钱是两个概念。金钱只是用来交易财富的一种手段，财富才是有价值的东西，我们购买的商品和服务都属于财富。财富从何而来？人类创造出来的。财富总量不是固定不变的，不像大饼那样会被分光。如果你想要更多的财富，自己生产就可以了。由于每个人创造财富的能力和欲望强烈程度都不一样，所以每个人创造财富的数量很不平等。&lt;/p&gt;
&lt;p&gt;作者提出了一种关于贫富分化的新观点，即现代社会的收入差距扩大是一种健康的信号。技术使得生产率的差异加速扩大，如果这种扩大没有反映在收入上面，只有三种可能的解释：（1）技术革新停顿了；（2）那些创造大部分财富的人停止工作了；（3）创造财富的人没有获得报酬。如果想社会繁荣而不扩大贫富分化，可以反推（1）（2）的可能性不大，那么只能是（3）。但是如果得不到报酬，人们是否愿意创造财富？唯一的可能就是，工作必须提供乐趣。&lt;/p&gt;
&lt;p&gt;如果创业就是比别人工作的更勤奋、赚到更多的钱，那么很显然人人都想去创业。而且一定程度上，创业也比较有趣。但创业是有一些潜规则的，其中一条就是很多事情由不得你。比如，你无法决定到底付出多少。你只想更勤奋工作2到3倍，从而得到相应的回报。但是，真正创业以后，你的竞争对手决定了你到底要有多辛苦，而他们做出的决定都是一样的：你能吃多少苦，我们就能吃多少苦。另一条潜规则就是，创业的付出与回报虽然总体上是成比例的，但是个体上是不成比例的。对于个人来说，付出与回报之间存在一个很随机的放大因子。你努力了30倍，最后得到的回报在现实中并不是30倍，而是0到1000倍之间的一个随机数。假定所有创业者都是努力30倍，最后他们得到的总体平均回报是30倍，但中位数却是0。大多数创业公司都以失败告终，其中并不都是很烂的项目，一种很普遍的情况是，某个创业公司确实在开发一个很好的产品，但是开发时间长了一点，结果就是资金用完，关门散伙。创业公司如同蚊子，往往只有两种结局，要么赢得一切，要么彻底消失。&lt;/p&gt;
&lt;h4 id=&quot;防止垃圾邮件的一种方法&quot;&gt;防止垃圾邮件的一种方法&lt;/h4&gt;&lt;p&gt;在所有对抗垃圾邮件的方法之中，“贝叶斯过滤”是最有效的工具。但是，使用的不同方法越多，综合效果就越好，因为任何对发送人构成限制的方法往往都会使得过滤器工作起来更顺利。即使同样是基于内容的过滤器，我也认为，如果有多种不同的软件可以同时使用会比较好。过滤器的差异越大，垃圾邮件想要逃过拦截就越不可能。&lt;/p&gt;
&lt;h4 id=&quot;设计者的品味&quot;&gt;设计者的品味&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;好设计是简单的设计&lt;/li&gt;
&lt;li&gt;好设计是永不过时的设计&lt;/li&gt;
&lt;li&gt;好设计是解决主要问题的设计&lt;/li&gt;
&lt;li&gt;好设计是启发性的设计&lt;/li&gt;
&lt;li&gt;好设计通常是有点趣味性的设计&lt;/li&gt;
&lt;li&gt;好设计是艰苦的设计&lt;/li&gt;
&lt;li&gt;好设计是看似容易的设计&lt;/li&gt;
&lt;li&gt;好设计是对称的设计&lt;/li&gt;
&lt;li&gt;好设计是模仿大自然的设计&lt;/li&gt;
&lt;li&gt;好设计是一种再设计&lt;/li&gt;
&lt;li&gt;好设计是能够复制的设计&lt;/li&gt;
&lt;li&gt;好设计常常是奇特的设计&lt;/li&gt;
&lt;li&gt;好设计是成批出现的&lt;/li&gt;
&lt;li&gt;好设计常常是大胆的设计&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;编程语言解析&quot;&gt;编程语言解析&lt;/h4&gt;&lt;p&gt;如果你长期使用某种编程语言，你就会慢慢按照这种语言的思维模式进行思考。所以，后来当你遇到其它任何一种有重大差异的语言，即使那语言本身并没有任何不对的地方，你也会觉得它极其难用。&lt;/p&gt;
&lt;p&gt;计算机程序只是文本而已，你选择什么语言，决定了你能说什么话，编程语言就是程序员的思维方式。如果你仅仅是要养家糊口，那么劝你最好选择市场流行的以及未来一段时间内仍然会流行的语言，这样你才不会被市场抛弃，而且可以更容易的找到工作。但是如果你要做的是黑客级别的技术高手，那么一个锋利的工具对你会更有帮助。&lt;/p&gt;
&lt;p&gt;最优秀的苹果机为什么在市场上表现不佳？还是那个老生常谈的问题：成本太高。微软公司把所有精力都集中在软件上面，微软到现在依然是靠它三个最赚钱的部门即Windows、Office和服务器三大部门来支撑它的整个商业帝国，这些都是微软之根本所在，如果你想要打败微软，那么首先想想这三个里面你能消灭掉哪个，如果你最多消灭两个，那么劝你早日投降，因为结局已定。所以我不反对企业做大做强，但是正如李嘉诚所说的，你一定要有一个支柱性产业，当你的其他方向的发展还没有实现盈利的时候，你的支柱性产业的利润就可以用来培育那些将来可能盈利的方向。同时一旦出现大的金融动荡，你依然能够保证进退自如，因为你始终有一个可以为公司带来利润的产业。所以很多厂商只要专攻硬件就可以了，把硬件成本降了下来。单单是微软的软件或者第三方厂商的硬件都不足以赢得市场优势，但是它们结合起来，就在个人电脑出现后一段关键时期中主导了市场。苹果公司同时做软件和硬件，所以成本上没有优势。IBM的PC机也面临类似的问题，它的PC机卖的相当的贵，质量也很好，但是却没能统治市场，为什么？因为IBM的机器设计的所使用的都是可以用十年甚至更久都不会出现问题的部件与材料，但是现在的电子消费品更新的如此之快，用户干嘛要花那么多钱去买一个他只准备用两年或三年的产品，但是这个产品却可以用十年都没有质量问题，所以说成本是产品占领市场不得不考虑的一个问题。&lt;/p&gt;
&lt;p&gt;1998年，当时的搜索市场由雅虎统治，许多人认为再推出一个新的搜索引擎已经太晚了，互联网世界已经定型了。谷歌证明了这种看法是错误的。如果新事物真的有重大改进，那么它总是可以找到生存空间的。就像中国的人人网，模仿的是facebook，但是在人人之后，不是依然有程炳皓做出来的开心网吗，当初为什么开心败在了人人的手下，最根本的问题就是程炳皓根本不是陈一舟的对手，陈一舟是一个在商场里浸淫N年之久的老江湖，而程炳皓呢，仅仅是一个技术了得的技术员而已，所以开心的域名是kaixin001，当年有人劝程把kaixin这个域名买过来（因为创办开心网的时候，这个域名被老外注册过了），但是程根本不把此事放在心上，所以当人人对开心发起攻击的时候，陈一舟做的第一件事就是把kaixin这个域名买到手，然后利用许多用户的无知，把大量的用户引入到了这个假的开心网之上，即便后来陈一舟输了官司，关闭了kaixin，但是依然有大量的用户访问这个域名，而结果就是访问之后页面自动跳转到renren上了。所以对于开心输给人人之事，我不想多说，根本原因就是你不是人家的对手，所以输给别人也是再正常不过的了（说真的我很欣赏程炳皓这个人，一个许多人都应该学习的典范，一个中专学历的人，凭着自己对技术的钻研，到创办开心网，差点功成名就，只不过是由于不太懂得商场的残酷，而最终失败）。&lt;/p&gt;
&lt;p&gt;我要纠正一个常识性的错误，几乎我碰到的所有的人都说虽然编程语言不同，但是你会了某种语言，其他的也就会了。我从来就没有这么认为过，首先不说他们的语法特点设计不同，就是语言的设计思想也没有一样的，另外每个语言都有每个语言所擅长的方向，经常看到有人拿Java和C++比速度，我觉得这种人就是无知，就像你拿男人和女人比谁的胸大是一回事，对于那些攻击Java速度的人，你怎么不比较Java和C++的跨平台能力呢？让我们复习一下Java的口号—“Write once, run ererywhere (WORA)”。请你们多多读书，提高修养。另外一点就是人们经常拿链表和数组比添加删除元素时候的速度，但是你有没有想过，你要添加删除某个元素是需要先找到它的，而数组的查找比链表要快的多的多，链表的添加删除是比数组快，但是如果我有几百万个元素，而我想删中间一个元素，数组可以直接定位，但是链表要查找将近一半的元素。谁快谁慢一目了然。如果你长期使用某种语言，你就会慢慢按照这种语言的思维模式进行思考。所以，后来当你遇到其他任何一种有重大差异的语言，即使那种语言本身并没有任何不对的地方，你也会觉得它及其难用。缺乏经验的程序员对于各种语言优缺点的判断经常被这种心态误导。一种编程语言能否流行并不取决于它本身，大多数程序员也许无法分辨语言的好坏。但是，这并不代表优秀的编程语言会被埋没，专家级的黑客一眼就能认出它们，并且会拿来使用。一种真正的优秀的编程语言应该既整洁又混乱。“整洁”的意思是设计得很清楚，内核由数量不多的运算符构成，这些运算符易于理解，每一个都有很完整的独立用途。“混乱”的意思是它允许黑客以自己的方式使用。&lt;/p&gt;
&lt;h4 id=&quot;一百年后的编程语言&quot;&gt;一百年后的编程语言&lt;/h4&gt;&lt;p&gt;编程语言进化缓慢的原因在于它们并不是真正的技术。语言只是一种书写法，而程序则是一种严格符合规则的描述，以书面形式记录计算机应该如何解决你的问题。所以编程语言的进化速度更像数学符号的进化速度，而不像真正的技术的进化速度。数学符号的进化是缓慢的渐变式变化，而不是真正技术的那种跳跃式发展。&lt;/p&gt;
&lt;h4 id=&quot;拒绝平庸&quot;&gt;拒绝平庸&lt;/h4&gt;&lt;p&gt;如果从图灵等价的角度来看，所有语言都是一样强大的，但是这对程序员没有意义。程序员关心的那种强大也许很难正式定义，但是有一个办法可以解释，那就是有一些功能在一种语言中是内置的，但是在另一种语言中需要修改解释器才能做到，那么前者就比后者更强大。&lt;/p&gt;
&lt;p&gt;技术的变化速度通常是很快的。但是编程语言不一样，与其说它是技术，还不如说是程序员的思考模式。编程语言是技术和宗教的混合物。所以，一种很普通的编程语言就是很普通的程序员使用的语言，它的变化就像冰山那样缓慢。&lt;/p&gt;
&lt;h4 id=&quot;书呆子的复仇&quot;&gt;书呆子的复仇&lt;/h4&gt;&lt;p&gt;衡量语言的编程能力的最简单方法可能就是看代码数量。所谓高级语言，就是能够提供更强大抽象能力的语言，从某种意义上，就像能够提供更大的砖头，所以砌墙的时候用到的砖头数量就变少了。因此，语言的编程能力越强大，写出来的程序就越短。&lt;/p&gt;
&lt;h4 id=&quot;梦寐以求的编程语言&quot;&gt;梦寐以求的编程语言&lt;/h4&gt;&lt;p&gt;优秀的语言不一定会被市场接受，很可能无人使用，因为语言的流行不取决于它本身。语言流行的秘诀必须要涵盖以下几点，一种免费的实现，一本相关的书籍，以及语言所依附的计算机系统，除此之外还必须要简洁。其它特点还有诸如可编程性、一次性程序、精心设计的函数库、效率等。&lt;/p&gt;
&lt;h4 id=&quot;设计与研究&quot;&gt;设计与研究&lt;/h4&gt;&lt;p&gt;设计与研究的区别看来就在于，前者追求“好”，后者追求“新”。优秀的设计不一定很“新”，但必须是“好”的；优秀的研究不一定很“好”，但必须是“新”的。作者认为两条道路最后会发生交叉：只有应用“新”的创意和理念，才会诞生超越前人的最佳设计；只有解决那些值得解决的难题，才会诞生最佳研究。所以设计和研究都通向同一个地方，只是前进的路线不同罢了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;strong&gt;一杯清水因滴入一滴污水而变污浊，一杯污水却不会因一滴清水的存在而变清澈。&lt;/strong&gt;&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;：保
    
    </summary>
    
      <category term="Life-Talk" scheme="http://www.codepub.cn/categories/Life-Talk/"/>
    
    
      <category term="Thinking" scheme="http://www.codepub.cn/tags/Thinking/"/>
    
  </entry>
  
  <entry>
    <title>Lucene 6.0 实战-索引热备份及恢复</title>
    <link href="http://www.codepub.cn/2016/06/24/Lucene-6-0-in-action-the-index-of-hot-backup-and-recovery/"/>
    <id>http://www.codepub.cn/2016/06/24/Lucene-6-0-in-action-the-index-of-hot-backup-and-recovery/</id>
    <published>2016-06-24T15:24:43.000Z</published>
    <updated>2016-08-12T15:01:24.256Z</updated>
    
    <content type="html">&lt;h3 id=&quot;索引备份的几个关键问题&quot;&gt;索引备份的几个关键问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;最简单的备份方式是关闭IndexWriter，然后逐一拷贝索引文件，但是如果索引比较大，那么这种备份操作会持续较长时间，而在备份期间，程序无法对索引文件进行修改，很多搜索程序是不能接受索引操作期间如此长时间停顿的&lt;/li&gt;
&lt;li&gt;那么不关闭IndexWriter又如何呢？这样也不行，因为在拷贝索引期间，如果索引文件发生变化，会导致备份的索引文件损坏&lt;/li&gt;
&lt;li&gt;另外一个问题就是如果原索引文件损坏的话，再备份它也毫无意义，所以一定要备份的是最后一次成功commit之后的索引文件&lt;/li&gt;
&lt;li&gt;每次在备份之前，如果程序将要覆盖上一个备份，需要先删除备份中未出现在当前快照中的文件，因为这些文件已经不会被当前索引引用了；如果每次都更改备份路径的话，那么就直接拷贝即可&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;索引热备份&quot;&gt;索引热备份&lt;/h3&gt;&lt;p&gt;从Lucene 2.3版本开始，Lucene提供了一个热备策略，就是SnapshotDeletionPolicy，这样就能在不关闭IndexWriter的情况下，对程序最近一次索引修改提交操作时的文件引用进行备份，从而能建立一个连续的索引备份镜像。那么你也许会有疑问，在备份期间，索引出现变化怎么办呢？这就是SnapshotDeletionPolicy的牛逼之处，在使用SnapshotDeletionPolicy.snapshot()获取快照之后，索引更新提交时刻的所有文件引用都不会被IndexWriter删除，只要IndexWriter并未关闭，即使IndexWriter在进行更新、优化操作等也不会删除这些文件。如果说索引拷贝过程耗时较长也不会出现问题，因为被拷贝的文件时索引快照，在快照的有效期，其引用的文件会一直存在于磁盘上。&lt;/p&gt;
&lt;p&gt;所以在备份期间，索引会比通常情况下占用更大的磁盘空间，当索引备份完成后，可以调用SnapshotDeletionPolicy.release (IndexCommit commit) 释放指定的某次提交，以便让IndexWriter删除这些已被关闭或下次将要更新的文件。&lt;/p&gt;
&lt;p&gt;需要注意的是，Lucene对索引文件的写入操作是一次性完成的。这意味着你可以简单通过文件名比对来完成对索引的增量备份备份，你不必查看每个文件的内容，也不必查看该文件上次被修改的时间戳，因为一旦程序从快照中完成文件写入和引用操作，这些文件就不会改变了。&lt;/p&gt;
&lt;p&gt;segments.gen文件在每次程序提交索引更新时都会被重写，因此备份模块必须要经常备份该文件，但是在Lucene 6.0中注意segments.gen已经从Lucene索引文件格式中移除，所以无需单独考虑segments.gen的备份策略了。在备份期间，write.lock文件不用拷贝。&lt;/p&gt;
&lt;p&gt;SnapshotDeletionPolicy类有两个使用限制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;该类在同一时刻只保留一个可用的索引快照，当然你也可以解除该限制，方法是通过建立对应的删除策略来同时保留多个索引快照&lt;/li&gt;
&lt;li&gt;当前快照不会保存到硬盘，这意味着你关闭旧的IndexWriter并打开一个新的IndexWriter，快照将会被删除，因此在备份结束前是不能关闭IndexWriter的，否则也会报org.apache.lucene.store.AlreadyClosedException: this IndexWriter is closed异常。不过该限制也是很容易解除的：你可以将当前快照存储到磁盘上，然后在打开新的IndexWriter时将该快照保护起来，这样就能在关闭旧的IndexWriter和打开新IndexWriter时继续进行备份操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;索引热备份解决方案&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.commons.io.FileUtils;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.standard.StandardAnalyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.TermQuery;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.store.FSDirectory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.nio.file.Paths;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Collection;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; org.apache.lucene.document.Field.Store.YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 测试Lucene索引热备&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestIndexBackupRecovery&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String f = &lt;span class=&quot;string&quot;&gt;&quot;D:/index_test&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String d = &lt;span class=&quot;string&quot;&gt;&quot;D:/index_back&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexWriterConfig indexWriterConfig = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriterConfig.setIndexDeletionPolicy(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SnapshotDeletionPolicy(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; KeepOnlyLastCommitDeletionPolicy()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexWriter writer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(FSDirectory.open(Paths.get(f)), indexWriterConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(&lt;span class=&quot;string&quot;&gt;&quot;ID&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;111&quot;&lt;/span&gt;, YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntPoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        writer.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        writer.commit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(&lt;span class=&quot;string&quot;&gt;&quot;ID&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;222&quot;&lt;/span&gt;, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntPoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;333&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;333&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        writer.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(&lt;span class=&quot;string&quot;&gt;&quot;ID&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;333&quot;&lt;/span&gt;, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntPoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;555&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;555&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(&lt;span class=&quot;string&quot;&gt;&quot;ID&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;333&quot;&lt;/span&gt;, YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntPoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt; + i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt; + i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(&lt;span class=&quot;string&quot;&gt;&quot;desc&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;ABCDEFG&quot;&lt;/span&gt; + i, YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            writer.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        writer.deleteDocuments(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;ID&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;333&quot;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        writer.commit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        backupIndex(writer, f, d);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        writer.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;backupIndex&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(IndexWriter indexWriter, String indexDir, String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            backupIndexDir)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexWriterConfig config = (IndexWriterConfig) indexWriter.getConfig();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SnapshotDeletionPolicy snapshotDeletionPolicy = (SnapshotDeletionPolicy) config.getIndexDeletionPolicy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexCommit snapshot = snapshotDeletionPolicy.snapshot();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//设置索引提交点，默认是null，会打开最后一次提交的索引点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config.setIndexCommit(snapshot);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Collection&amp;lt;String&amp;gt; fileNames = snapshot.getFileNames();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File[] dest = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(backupIndexDir).listFiles();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String sourceFileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String destFileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dest != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; dest.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//先删除备份文件中的在此次快照中已经不存在的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (File file : dest) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; flag = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//包括文件扩展名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                destFileName = file.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String fileName : fileNames) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sourceFileName = fileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sourceFileName.equals(destFileName)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        flag = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//跳出内层for循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flag) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    file.delete();&lt;span class=&quot;comment&quot;&gt;//删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//然后开始备份快照中新生成的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String fileName : fileNames) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; flag = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sourceFileName = fileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (File file : dest) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    destFileName = file.getName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//备份中已经存在无需复制，因为Lucene索引是一次写入的，所以只要文件名相同不要要hash检查就可以认为它们的数据是一样的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (destFileName.equals(sourceFileName)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        flag = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flag) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    File from = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(indexDir + File.separator + sourceFileName);&lt;span class=&quot;comment&quot;&gt;//源文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    File to = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(backupIndexDir + File.separator + sourceFileName);&lt;span class=&quot;comment&quot;&gt;//目的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    FileUtils.copyFile(from, to);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//备份不存在，直接创建&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String fileName : fileNames) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                File from = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(indexDir + File.separator + fileName);&lt;span class=&quot;comment&quot;&gt;//源文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                File to = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(backupIndexDir + File.separator + fileName);&lt;span class=&quot;comment&quot;&gt;//目的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                FileUtils.copyFile(from, to);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        snapshotDeletionPolicy.release(snapshot);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//删除已经不再被引用的索引提交记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter.deleteUnusedFiles();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;索引文件格式&quot;&gt;索引文件格式&lt;/h3&gt;&lt;p&gt;首先索引里都存了些什么呢？一个索引包含一个documents的序列，一个document是一个fields的序列，一个field是一个有名的terms序列，一个term是一个比特序列。&lt;/p&gt;
&lt;p&gt;根据&lt;a href=&quot;https://lucene.apache.org/core/6_0_0/core/index.html?org/apache/lucene/codecs/lucene60/package-summary.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Summary of File Extensions&lt;/a&gt;的说明，目前Lucene 6.0中存在的索引格式如下&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Extension&lt;/th&gt;
&lt;th&gt;Brief Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Segments File&lt;/td&gt;
&lt;td&gt;segments_N&lt;/td&gt;
&lt;td&gt;Stores information about a commit point&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lock File&lt;/td&gt;
&lt;td&gt;write.lock&lt;/td&gt;
&lt;td&gt;The Write lock prevents multiple IndexWriters from writing to the same file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Segment Info&lt;/td&gt;
&lt;td&gt;.si&lt;/td&gt;
&lt;td&gt;Stores metadata about a segment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Compound File&lt;/td&gt;
&lt;td&gt;.cfs, .cfe&lt;/td&gt;
&lt;td&gt;An optional “virtual” file consisting of all the other index files for systems that frequently run out of file handles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fields&lt;/td&gt;
&lt;td&gt;.fnm&lt;/td&gt;
&lt;td&gt;Stores information about the fields&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Field Index&lt;/td&gt;
&lt;td&gt;.fdx&lt;/td&gt;
&lt;td&gt;Contains pointers to field data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Field Data&lt;/td&gt;
&lt;td&gt;.fdt&lt;/td&gt;
&lt;td&gt;The stored fields for documents&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Term Dictionary&lt;/td&gt;
&lt;td&gt;.tim&lt;/td&gt;
&lt;td&gt;The term dictionary, stores term info&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Term Index&lt;/td&gt;
&lt;td&gt;.tip&lt;/td&gt;
&lt;td&gt;The index into the Term Dictionary&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Frequencies&lt;/td&gt;
&lt;td&gt;.doc&lt;/td&gt;
&lt;td&gt;Contains the list of docs which contain each term along with frequency&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Positions&lt;/td&gt;
&lt;td&gt;.pos&lt;/td&gt;
&lt;td&gt;Stores position information about where a term occurs in the index&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Payloads&lt;/td&gt;
&lt;td&gt;.pay&lt;/td&gt;
&lt;td&gt;Stores additional per-position metadata information such as character offsets and user payloads&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Norms&lt;/td&gt;
&lt;td&gt;.nvd, .nvm&lt;/td&gt;
&lt;td&gt;Encodes length and boost factors for docs and fields&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Per-Document Values&lt;/td&gt;
&lt;td&gt;.dvd, .dvm&lt;/td&gt;
&lt;td&gt;Encodes additional scoring factors or other per-document information&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Term Vector Index&lt;/td&gt;
&lt;td&gt;.tvx&lt;/td&gt;
&lt;td&gt;Stores offset into the document data file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Term Vector Documents&lt;/td&gt;
&lt;td&gt;.tvd&lt;/td&gt;
&lt;td&gt;Contains information about each document that has term vectors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Term Vector Fields&lt;/td&gt;
&lt;td&gt;.tvf&lt;/td&gt;
&lt;td&gt;The field level info about term vectors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Live Documents&lt;/td&gt;
&lt;td&gt;.liv&lt;/td&gt;
&lt;td&gt;Info about what files are live&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Point values&lt;/td&gt;
&lt;td&gt;.dii, .dim&lt;/td&gt;
&lt;td&gt;Holds indexed points, if any&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在Lucene索引结构中，既保存了正向信息，也保存了反向信息。&lt;br&gt;正向信息存储在：段(segments_N)-&amp;gt;field(.fnm/.fdx/.fdt)-&amp;gt;term(.tvx/.tvd/.tvf)&lt;br&gt;反向信息存储在：词典(.tim)-&amp;gt;倒排表(.doc/.pos)&lt;/p&gt;
&lt;p&gt;如果想要查看中文，可以参考&lt;a href=&quot;http://my.oschina.net/rickylau/blog/527602&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;恢复索引&quot;&gt;恢复索引&lt;/h3&gt;&lt;p&gt;恢复索引步骤如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关闭索引目录下的全部reader和writer，这样才能进行文件恢复。对于Windows系统来说，如果还有其它进程在使用这些文件，那么备份程序仍然不能覆盖这些文件&lt;/li&gt;
&lt;li&gt;删除当前索引目录下的所有文件，如果删除过程出现“访问被拒绝”（Access is denied）错误，那么再次检查上一步是否已完成&lt;/li&gt;
&lt;li&gt;从备份目录中拷贝文件至索引目录。程序需要保证该拷贝操作不会碰到任何错误，如磁盘空间已满等，因为这些错误会损坏索引文件&lt;/li&gt;
&lt;li&gt;对于损坏索引，可以使用CheckIndex（org.apache.lucene.index）进行检查并修复&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常Lucene能够很好地避免大多数常见错误，如果程序遇到磁盘空间已满或者OutOfMemoryException异常，那么它只会丢失内存缓冲中的文档，已经编入索引的文档将会完好保存下来，并且索引也会保持原样。这个结果对于以下情况同样适用：如出现JVM崩溃，或者程序碰到无法控制的异常，或者程序进程被终止，或者操作系统崩溃，或者计算机突然断电等。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; source 索引源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; dest 索引目标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; indexWriterConfig 配置相关&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;recoveryIndex&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String source, String dest, IndexWriterConfig indexWriterConfig)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(FSDirectory.open(Paths.get(dest)), indexWriterConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        log.error(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//说明IndexWriter正常打开了，无需恢复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (indexWriter != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; indexWriter.isOpen()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                log.error(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//说明IndexWriter已经无法打开，使用备份恢复索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//此处简单操作，先清空损坏的索引文件目录，如果索引特别大，可以比对每个文件，不必全部删除  try &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                FileUtils.deleteDirectory(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(dest));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  FileUtils.copyDirectory(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(source), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(dest));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                log.error(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//使用备份恢复出错，那么就使用最后一招修复索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  log.info(&lt;span class=&quot;string&quot;&gt;&quot;Check index &amp;#123;&amp;#125; now!&quot;&lt;/span&gt;, dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    IndexUtils.checkIndex(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException | InterruptedException e1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    log.error(&lt;span class=&quot;string&quot;&gt;&quot;Check index error!&quot;&lt;/span&gt;, e1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;修复索引&quot;&gt;修复索引&lt;/h3&gt;&lt;p&gt;当其它所有方法都无法解决索引损坏问题时，你的最后一个选项就是使用CheckIndex工具了。该工具除了能汇报索引细节状况以外，还能完成修复索引的工作。该工具会强制删除索引中出现问题的段，需要注意的是，该操作还会全部删除这些段包含的文档，该工具的使用目标应主要着眼于能够在紧急状况下让搜索程序再次运行起来，一旦我们进行了索引备份，并且备份完好，应优先使用恢复索引，而不是修复索引。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * CheckIndex会检查索引中的每个字节，所以当索引比较大时，此操作会比较耗时&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; IOException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; InterruptedException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;checkIndex&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String indexFilePath)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CheckIndex checkIndex = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CheckIndex(FSDirectory.open(Paths.get(indexFilePath)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    checkIndex.setInfoStream(System.out);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CheckIndex.Status status = checkIndex.checkIndex();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status.clean) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Check Index successfully！&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//产生索引中的某个文件之后再次测试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Starting repair index files...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//该方法会向索引中写入一个新的segments文件，但是并不会删除不被引用的文件，除非当你再次打开IndexWriter才会移除不被引用的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//该方法会移除所有存在错误段中的Document索引文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkIndex.exorciseIndex(status);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkIndex.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//测试修复完毕之后索引是否能够打开&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(FSDirectory.open(Paths.get(indexFilePath)), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                StandardAnalyzer()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(indexWriter.isOpen());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果索引完好，输出如下信息：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Segments file=segments_2 numSegments=2 version=6.0.0 id=2jlug2dgsc4tmgkf5rck1xgm4&lt;br&gt;  1 of 2: name=_0 maxDoc=1&lt;br&gt;    version=6.0.0&lt;br&gt;    id=2jlug2dgsc4tmgkf5rck1xgm1&lt;br&gt;    codec=Lucene60&lt;br&gt;    compound=true&lt;br&gt;    numFiles=3&lt;br&gt;    size (MB)=0.002&lt;br&gt;    diagnostics = {java.runtime.version=1.8.0_45-b15, java.vendor=Oracle Corporation, java.version=1.8.0_45, java.vm.version=25.45-b02, lucene.version=6.0.0, os=Windows 7, os.arch=amd64, os.version=6.1, source=flush, timestamp=1464159740092}&lt;br&gt;    no deletions&lt;br&gt;    test: open reader………OK [took 0.051 sec]&lt;br&gt;    test: check integrity…..OK [took 0.000 sec]&lt;br&gt;    test: check live docs…..OK [took 0.000 sec]&lt;br&gt;    test: field infos………OK [2 fields] [took 0.000 sec]&lt;br&gt;    test: field norms………OK [0 fields] [took 0.000 sec]&lt;br&gt;    test: terms, freq, prox…OK [1 terms; 1 terms/docs pairs; 0 tokens] [took 0.007 sec]&lt;br&gt;    test: stored fields…….OK [2 total field count; avg 2.0 fields per doc] [took 0.008 sec]&lt;br&gt;    test: term vectors……..OK [0 total term vector count; avg 0.0 term/freq vector fields per doc] [took 0.000 sec]&lt;br&gt;    test: docvalues………..OK [0 docvalues fields; 0 BINARY; 0 NUMERIC; 0 SORTED; 0 SORTED_NUMERIC; 0 SORTED_SET] [took 0.000 sec]&lt;br&gt;    test: points…………..OK [1 fields, 1 points] [took 0.001 sec]&lt;br&gt;  2 of 2: name=_1 maxDoc=1001&lt;br&gt;    version=6.0.0&lt;br&gt;    id=2jlug2dgsc4tmgkf5rck1xgm3&lt;br&gt;    codec=Lucene60&lt;br&gt;    compound=true&lt;br&gt;    numFiles=4&lt;br&gt;    size (MB)=0.023&lt;br&gt;    diagnostics = {java.runtime.version=1.8.0_45-b15, java.vendor=Oracle Corporation, java.version=1.8.0_45, java.vm.version=25.45-b02, lucene.version=6.0.0, os=Windows 7, os.arch=amd64, os.version=6.1, source=flush, timestamp=1464159740329}&lt;br&gt;    has deletions [delGen=1]&lt;br&gt;    test: open reader………OK [took 0.003 sec]&lt;br&gt;    test: check integrity…..OK [took 0.000 sec]&lt;br&gt;    test: check live docs…..OK [1000 deleted docs] [took 0.000 sec]&lt;br&gt;    test: field infos………OK [3 fields] [took 0.000 sec]&lt;br&gt;    test: field norms………OK [0 fields] [took 0.000 sec]&lt;br&gt;    test: terms, freq, prox…OK [1 terms; 1 terms/docs pairs; 0 tokens] [took 0.008 sec]&lt;br&gt;    test: stored fields…….OK [2 total field count; avg 2.0 fields per doc] [took 0.012 sec]&lt;br&gt;    test: term vectors……..OK [0 total term vector count; avg 0.0 term/freq vector fields per doc] [took 0.000 sec]&lt;br&gt;    test: docvalues………..OK [0 docvalues fields; 0 BINARY; 0 NUMERIC; 0 SORTED; 0 SORTED_NUMERIC; 0 SORTED_SET] [took 0.000 sec]&lt;br&gt;    test: points…………..OK [1 fields, 1001 points] [took 0.001 sec]&lt;br&gt;No problems were detected with this index.&lt;br&gt;Took 0.159 sec total.&lt;br&gt;Check Index successfully！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在破坏索引之后（删除了一个cfe文件），再次运行输出&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Segments file=segments_2 numSegments=2 version=6.0.0 id=2jlug2dgsc4tmgkf5rck1xgm4&lt;br&gt;  1 of 2: name=_0 maxDoc=1&lt;br&gt;    version=6.0.0&lt;br&gt;    id=2jlug2dgsc4tmgkf5rck1xgm1&lt;br&gt;    codec=Lucene60&lt;br&gt;    compound=true&lt;br&gt;    numFiles=3&lt;br&gt;FAILED&lt;br&gt;    WARNING: exorciseIndex() would remove reference to this segment; full exception:&lt;br&gt;java.nio.file.NoSuchFileException: D:\index_test_0.cfe&lt;br&gt;    at sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:79)&lt;br&gt;…&lt;br&gt;…&lt;br&gt;    at java.lang.reflect.Method.invoke(Method.java:497)&lt;br&gt;    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)&lt;br&gt;  2 of 2: name=_1 maxDoc=1001&lt;br&gt;    version=6.0.0&lt;br&gt;    id=2jlug2dgsc4tmgkf5rck1xgm3&lt;br&gt;    codec=Lucene60&lt;br&gt;    compound=true&lt;br&gt;    numFiles=4&lt;br&gt;    size (MB)=0.023&lt;br&gt;    diagnostics = {java.runtime.version=1.8.0_45-b15, java.vendor=Oracle Corporation, java.version=1.8.0_45, java.vm.version=25.45-b02, lucene.version=6.0.0, os=Windows 7, os.arch=amd64, os.version=6.1, source=flush, timestamp=1464159740329}&lt;br&gt;    has deletions [delGen=1]&lt;br&gt;    test: open reader………OK [took 0.059 sec]&lt;br&gt;    test: check integrity…..OK [took 0.000 sec]&lt;br&gt;    test: check live docs…..OK [1000 deleted docs] [took 0.001 sec]&lt;br&gt;    test: field infos………OK [3 fields] [took 0.000 sec]&lt;br&gt;    test: field norms………OK [0 fields] [took 0.000 sec]&lt;br&gt;    test: terms, freq, prox…OK [1 terms; 1 terms/docs pairs; 0 tokens] [took 0.013 sec]&lt;br&gt;    test: stored fields…….OK [2 total field count; avg 2.0 fields per doc] [took 0.016 sec]&lt;br&gt;    test: term vectors……..OK [0 total term vector count; avg 0.0 term/freq vector fields per doc] [took 0.000 sec]&lt;br&gt;    test: docvalues………..OK [0 docvalues fields; 0 BINARY; 0 NUMERIC; 0 SORTED; 0 SORTED_NUMERIC; 0 SORTED_SET] [took 0.000 sec]&lt;br&gt;    test: points…………..OK [1 fields, 1001 points] [took 0.002 sec]&lt;br&gt;WARNING: 1 broken segments (containing 1 documents) detected&lt;br&gt;Took 0.165 sec total.&lt;br&gt;Starting repair index files…&lt;br&gt;true&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;索引备份的几个关键问题&quot;&gt;索引备份的几个关键问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;最简单的备份方式是关闭IndexWriter，然后逐一拷贝索引文件，但是如果索引比较大，那么这种备份操作会持续较长时间，而在备份期间，程序无法对索引文件进行修改，很多搜索程序是不能接受索引
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Lucene" scheme="http://www.codepub.cn/tags/Lucene/"/>
    
  </entry>
  
  <entry>
    <title>Lucene 6.0 实战-索引备份No index commit to snapshot</title>
    <link href="http://www.codepub.cn/2016/06/24/Lucene-6-0-in-action-index-backup-No-index-commit-to-snapshot/"/>
    <id>http://www.codepub.cn/2016/06/24/Lucene-6-0-in-action-index-backup-No-index-commit-to-snapshot/</id>
    <published>2016-06-24T15:16:03.000Z</published>
    <updated>2016-07-27T14:09:33.657Z</updated>
    
    <content type="html">&lt;h3 id=&quot;备份之前先提交&quot;&gt;备份之前先提交&lt;/h3&gt;&lt;p&gt;在使用Lucene进行索引备份的时候，报错&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exception in thread “main” java.lang.IllegalStateException: No index commit to snapshot&lt;br&gt;at org.apache.lucene.index.SnapshotDeletionPolicy.snapshot(SnapshotDeletionPolicy.java:160)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中导致抛错的代码是&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SnapshotDeletionPolicy snapshotDeletionPolicy = (SnapshotDeletionPolicy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;indexWriter.getConfig().getIndexDeletionPolicy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IndexCommit snapshot = snapshotDeletionPolicy.snapshot();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看snapshot()方法源码发现&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lastCommit == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// No commit yet, eg this is a new IndexWriter:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&quot;No index commit to snapshot&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可见如果是第一次也就是说还没有commit过，这种情况通常是第一次使用IndexWriter的时候，那么就会抛此异常。解决办法很简单，就是在热备之前commit索引，将所有的缓存flush到硬盘，这也是热备的正确逻辑，可以确保将索引的最新变动保存到备份之中。&lt;/p&gt;
&lt;h3 id=&quot;确保使用同一个SnapshotDeletionPolicy&quot;&gt;确保使用同一个SnapshotDeletionPolicy&lt;/h3&gt;&lt;p&gt;另外还有一点需要注意，如果你在备份的时候使用的是新new的SnapshotDeletionPolicy，那么同样会抛出此异常&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SnapshotDeletionPolicy snapshot= &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SnapshotDeletionPolicy(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; KeepOnlyLastCommitDeletionPolicy());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IndexCommit commit = snapshot.snapshot();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Collection&amp;lt;String&amp;gt; fileNames = commit.getFileNames();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是因为采用new的形式得到的SnapshotDeletionPolicy和最初实例化IndexWriter的时候使用的并不是同一个，所以对于IndexWriter所做的提交，新的SnapshotDeletionPolicy是无法知道的。正确方式如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;IndexWriterConfig config = (IndexWriterConfig) indexWriter.getConfig();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SnapshotDeletionPolicy snapshotDeletionPolicy = (SnapshotDeletionPolicy) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.getIndexDeletionPolicy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IndexCommit snapshot = snapshotDeletionPolicy.snapshot();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置索引提交点，默认是null，会打开最后一次提交的索引点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;config.setIndexCommit(snapshot);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Collection&amp;lt;String&amp;gt; fileNames = snapshot.getFileNames();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;备份之前先提交&quot;&gt;备份之前先提交&lt;/h3&gt;&lt;p&gt;在使用Lucene进行索引备份的时候，报错&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exception in thread “main” java.lang.IllegalStateException: No ind
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Lucene" scheme="http://www.codepub.cn/tags/Lucene/"/>
    
  </entry>
  
  <entry>
    <title>读《把时间当作朋友》</title>
    <link href="http://www.codepub.cn/2016/06/10/Read-treat-time-as-a-friend/"/>
    <id>http://www.codepub.cn/2016/06/10/Read-treat-time-as-a-friend/</id>
    <published>2016-06-10T07:22:38.000Z</published>
    <updated>2016-06-10T07:36:23.451Z</updated>
    
    <content type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;strong&gt;人生就是两件事：一是该做的；二是想做的。摆对顺序成就一生，摆错顺序一事无成。&lt;/strong&gt;&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;：李笑来，原新东方老师，现艾德睿智国际教育咨询合伙人。他，经历丰富，与众小有不同。东北人，就读普通高校，本科学财会，毕业干销售，惯于洞察他人心理，一不留神，成了新东方教写作的名师，授业解惑，乐此不疲。&lt;/p&gt;
&lt;p&gt;《把时间当作朋友》主要讲述的是关于开启心智方面的，可以这么说，李笑来用最浅显直白的语言表述了我们日常生活中经常发生的场景，其思想虽谈不上深邃，但总能比常人多看一层，而这一层就足以和常人拉开差距。阅读本书也让我认识到我以前心中一些不甚明了的困惑，李笑来旁征博引，用简短明了的示例或名言，直指我们日常生活中习以为常以至于司空见惯的坏习惯。然诸多当事人却沉浸其中，而无法自知。&lt;/p&gt;
&lt;p&gt;很多学生都是“既勤奋又懒惰”的类型，我觉得对于绝大多数资质平平而又努力向上的人来说，都或多或少的会沾染些许“既勤奋又懒惰”的坏习惯。然而，不要忘记生活中明显有另外一些人——尽管数量上并不占优——在用另外一种状态生活。他们从容，他们优雅，他们善于化解各种压力，安静地去做他们认为应该做的事情，并总能有所成就。这些人中不乏天资聪颖，亦不乏后天环境优越或是父辈竭尽全力而为其创造各种优越条件。那么先不谈如何赶上甚至超越这部分人，就谈与他们并驾齐驱好了，你可能首先想到的方法就是“管理时间”抑或“时间管理”。然而时间不会服从于任何人的管理，它只会自顾自地流逝。时间不理任何人，它用自己特有的速度流逝，不受任何外界因素影响。所以李笑来老师给出的观点是：&lt;strong&gt;我们无法管理时间，我们真正能够管理的，是我们自己。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在阅读本书过程中，仅摘录部分要点如下，如果你想要获得更全面的知识，请自行阅读全书。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人们很难接受与已有知识和经验相左的信息或观念&lt;/li&gt;
&lt;li&gt;被灌输的观念，越是错误的，越有惊人的繁殖力&lt;/li&gt;
&lt;li&gt;人类能将自己的思考作为思考对象的能力被称作“元认知能力”&lt;/li&gt;
&lt;li&gt;你的大脑并不是你，你的大脑是属于“你的”大脑，尽管你用它思考，好像它也在指导你的行为，但是你要明白，你不应该隶属于你的大脑，而应该是它隶属于你&lt;/li&gt;
&lt;li&gt;人所拥有的任何东西，都可以被剥夺，唯独人性最后的自由——也就是在任何境遇中选择一己态度和生活方式的自由——不能被剥夺&lt;/li&gt;
&lt;li&gt;心智与智商不同，大多数人都拥有正常的智商，但并非每个拥有正常智商的人都拥有正常的心智，许多人的心智仍处于未开启的状态&lt;/li&gt;
&lt;li&gt;骗子想要成功行骗，必须把想让别人相信的谎言掺到大量的真理之中&lt;/li&gt;
&lt;li&gt;有些认识，哪怕是简单的常识，也需要亲身经历后才能真正体会&lt;/li&gt;
&lt;li&gt;我们总在不由自主地想，如果有速成的办法就好了——可惜，没有，确实没有&lt;/li&gt;
&lt;li&gt;英文代码中的“foo”、“bar”类似于中文里的“张三”、“李四”，是一个无特别含义的名字。（我表示刚知道）&lt;/li&gt;
&lt;li&gt;为了进步，我们必须忍受一定的未知，不要陷入“牛角尖陷阱”，例如循环代码块里的起始变量名称为什么是“i”，为什么第二次循环的起始变量名称通常是“j”，为什么“John”这个英文会被翻译成“约翰”？&lt;/li&gt;
&lt;li&gt;尽管天分很重要，但一个人的能力主要靠积累获得&lt;/li&gt;
&lt;li&gt;越是不满现状，摆脱现状的欲望就越强烈，而这种欲望会让一个人最终迷失方向，因为无论是谁，从本质上看都无法摆脱现状——每一时刻的现状都是过去某一或者某些时刻的结果，而每一时刻的现状都是未来某一或者某些时刻的原因。没有人能够逃脱现实的束缚&lt;/li&gt;
&lt;li&gt;从某种意义上理解，“逆境造就成功、磨难令人成熟”之类的话纯属胡说八道。显然，在顺境中更容易成功，而且很多磨难根本没有必要——这更可能是失败者对他们自己一生都未曾有机会体验的成功以及成功者“意淫”式的猜想而已&lt;/li&gt;
&lt;li&gt;失败者永远没有机会了解成功的真相，因为人最容易受自身经验的限制，而不曾有哪怕一点点成功经验的人更无从摆脱自身的局限&lt;/li&gt;
&lt;li&gt;对现状不满、急于摆脱现状，是人们常常不知不觉落入的陷阱（尽管偶尔这也是少数人真正的动力）。接受现状才是最优策略——有什么做什么，有什么用什么；做什么都做好，用什么都用好&lt;/li&gt;
&lt;li&gt;资源原本是有限的，经济学里将这种现象描述为“资源稀缺”。在整体上资源稀缺的前提下，“资源并非均匀分布”体现在每个人身上，直接的结果就是“绝大多数人都觉得自己拥有的不够多”。在我们生存的这个世界里，资源稀缺是客观现实，也恰因如此，人们的主观愿望肯定不可能全部被满足&lt;/li&gt;
&lt;li&gt;墨菲定律：Murphy’s law，一个经验定律，其一般表述为“凡事只要可能出错，就会出错”&lt;/li&gt;
&lt;li&gt;对一个5岁的孩子来讲，未来的1年相当于他已经度过的人生的¹⁄₅，即20%；而对一个50 岁的成年人来讲，未来的1年只相当于他已经度过的人生的¹⁄₅₀，即2%。所以，随着年龄的增加，人们会觉得时间运动得越来越快&lt;/li&gt;
&lt;li&gt;每个人都有必要阅读项目管理方面的经典书籍。也许你并没有“项目经理”之类的头衔，但，实际上，每个人都应该是自己的项目经理—自主、独立，是心智成熟的人必有的素质&lt;/li&gt;
&lt;li&gt;无论学到了什么东西，都可以接着问自己：“那……这个道理还可以运用在什么地方？”反复问自己这种简单问题，能够锻炼自己融会贯通、举一反三的能力&lt;/li&gt;
&lt;li&gt;尽管总是有人劝诫“速成没戏”，但还是有人宣扬各种速成的方法，并且信者大有人在，宛若“野火烧不尽，春风吹又生”。为什么呢？上过中学的人都应该明白“省功不省力、省力不省功”的物理原理啊！其实，这些人缺乏的就是这种思考能力或者说思考习惯&lt;/li&gt;
&lt;li&gt;我从来都不相信“人人都能成功”之类的话，我顶多相信“其实人人原本都有可能成功”。我觉得，一个人最终成功的关键，并不是因为他曾经精确地计划过自己的成功，而是坚持&lt;/li&gt;
&lt;li&gt;从更高的层面上说，设计验收机制也是任何一个领导者必须拥有的基本能力。哪怕你领导的只是一个很小的团队，你也都必然要向团队成员指派各种各样的任务。在这种情况下，如果你没有设计验收机制，最终的结果肯定会让你非常失望，因为缺少验收机制会使团队成员对自己的工作质量毫不介意，长此以往，团队的执行力将等于零，作为团队领导者的你也必须承担失败的责任&lt;/li&gt;
&lt;li&gt;不仅存在无法通过个体或者群体经验获得的知识，还存在与现有经验相悖的知识&lt;/li&gt;
&lt;li&gt;我常常暗骂现在的大学本科教育。不夸张地讲，今天的本科教育很大程度上已经忘了“本”。本科教育之“本”在于培养学生的自学能力。从理论上讲，一个人本科毕业之后，应该有能力自学他所需要的任何知识&lt;/li&gt;
&lt;li&gt;“自证预言”-罗伯特·莫顿教授发现了这种现象，并将其命名为“自证预言”，即如果人们相信某件事情会发生（事实上其原本并不见得一定会发生），那么这件事情最终真的会发生&lt;/li&gt;
&lt;li&gt;“自利性偏差”-人类普遍拥有的一个认知偏差就是：把成功揽到自己身上，把失败归咎于别人或者坏运气&lt;/li&gt;
&lt;li&gt;成功背后的东西很难看清楚，所谓成功的真实性也很难判断，而成功者们又会有意无意地美化和包装他们的经验，而这一切，都在干扰我们的判断。不过，观察失败者却相对容易得多，因为失败者的失败往往是显然的、确定的，失败的真正原因也往往很容易查实&lt;/li&gt;
&lt;li&gt;有些时候，我们的思维会因我们所使用的语言（表达手段之一）而受到各种各样的影响。恰当而又正确地使用语言，可以帮助修复思维漏洞。一旦明白个中道理，我们就会发现，语言就是一个便宜（甚至免费）而又有效的辅助工具&lt;/li&gt;
&lt;li&gt;以下一些句式最好经常使用，因为它们特别有助于独立思考习惯的养成，并且也有刺激思考的作用：&lt;br&gt;▷ ……是一回事，而……是另外一回事。&lt;br&gt;▷ ……和……其实根本不是一回事。&lt;br&gt;▷ ……不一定……&lt;br&gt;▷ ……。可是，这并不意味着……&lt;br&gt;▷ ……也许还有另外一种可能性（解释）。&lt;br&gt;▷ ……看起来像……，可是……&lt;br&gt;▷ ……。而事实却可能远比看起来的更为复杂（简单）。&lt;br&gt;▷ ……。然而，（这个论断）反过来（陈述）却不一定成立……&lt;br&gt;▷ ……其实很可能与……根本就没有任何关系。&lt;br&gt;▷ ……和……之间不一定是单纯的因果关系，它们也可能互为因果。&lt;br&gt;▷ ……和……之间的比较也许没有任何意义。&lt;br&gt;▷ ……其实不过是表面现象，其背后的本质是……&lt;br&gt;▷ ……有一个通常被忽略的前提。&lt;br&gt;▷ ……尽管听起来很有道理，然而却完全不现实。&lt;br&gt;▷ ……也许有人会说……，但是这种质疑却……&lt;br&gt;这些句式看起来简单，却往往能带来不同凡响的思考结果。平时遇到任何问题的时候，都不妨把这些句式套进去填空—就当想着玩了—要不了多久你就能体会这种游戏的有趣之处。不出意外的话，我们会发现自己的思维因为这些句式的运用而不由自主地发生了巨大转变。例如，“……和……其实根本不是一回事”这个句式往往瞬间就能使一个人的脑子更加清楚&lt;/li&gt;
&lt;li&gt;大多数人会对自己的记忆力过分高估。这个幻觉来自每时每刻都有一些确实可以记得住的东西，而记不住的东西恰恰则因为没有被记住所以看上去“并不存在”。换言之，每时每刻都有“我记得住”的证据，而“我记不住”的证据基本上难觅其踪。这也就是为什么总有那么多人真诚地相信自己考试成绩差是因为“没发挥好”&lt;/li&gt;
&lt;li&gt;我个人认为，在分享知识的时候，“知无不言，言无不尽”是正确的；而在日常交流中，这个原则的适用性非常差&lt;/li&gt;
&lt;li&gt;在讨论问题的时候，我们常常会被对方的“固执己见”挫败，但在对方眼里，我们可能也是“固执己见”的，只不过是程度不同而已&lt;/li&gt;
&lt;li&gt;我经常鼓励学生只要有时间就去看杂书—越杂越好，多多益善。为什么呢？因为读杂书会大大提高一个人接受新事物的能力（这种能力也是理解能力的一种）。阅历丰富、博览群书的人，肯定拥有更强的理解能力，因为他们在遇到未知的时候，更有可能迅速地在自己已有的知识中找到可以用来类比的信息&lt;/li&gt;
&lt;li&gt;方法固然重要，但是比起“用功”来说，方法几乎可以忽略不计。由此可见，所有学习上的成功，都只依靠两件事—策略和坚持，而坚持本身就是最重要的策略。坚持，其实就是重复；而重复，说到底就是时间的投入，准确地说，是大量时间的投入&lt;/li&gt;
&lt;li&gt;浪费时间、虚度年华的人，有一个共同的特征—拼命想控制自己完全不能控制的事物，却在自己真正能掌控的地方彻底失控&lt;/li&gt;
&lt;li&gt;当一个人没有准备好的时候，对他来讲，不存在任何机会。机会时时刻刻都会出现在我们身边，关键在于，我们有没有足够努力，做到“万事俱备，只欠东风”。而当一个人准备好了的时候，随处都是机会，而且所有的机会都是切实的、可以把握的&lt;/li&gt;
&lt;li&gt;从整体上看，人脉当然很重要。不过，针对某个个体来说，比人脉更重要的是他所拥有的资源。有些资源很难靠白手起家获得，比如金钱、地位、名誉。然而，有些资源却可以轻易从零开始积累，比如一个人的才华与学识。才华与学识，是一定可以通过努力获得的&lt;/li&gt;
&lt;li&gt;如果一个人的身边都是优秀的人，就往往会出现没有人求他帮忙的景况，因为优秀的人几乎无一例外都以耽误别人的时间为耻，同时，这些人恰恰因为能够独立解决遇到的问题才被其他认为是优秀者&lt;/li&gt;
&lt;li&gt;专心做可以提升自己的事情，学习并拥有更多、更好的技能，成为一个值得他人交往的人&lt;/li&gt;
&lt;li&gt;学会独善其身，以不给他人制造麻烦为美德，用自己的独立赢得尊重&lt;/li&gt;
&lt;li&gt;鸡尾酒会效应：cocktail party effect。指人的一种听力选择能力，在这种情况下，注意力集中在某一个人的谈话之中而忽略背景中其他的对话或噪音&lt;/li&gt;
&lt;li&gt;当我们不停地鼓励所有人的时候，最大的受益者其实是我们自己，因为最终我们会发现，自己开始进入一种他人无法想象的状态，成为一个不需要他人鼓励的人。这一点很重要。因为很多人之所以做事裹足不前，浪费时间甚至生命，原因就在于他们是必须获得别人的鼓励才敢于行动的人。可是，我们却能成为另外一种人—我们可以不需要被别人鼓励—这是一种境界&lt;/li&gt;
&lt;li&gt;对一个人来说，家庭是最重要的。因为最终有一天我们会发现，在很极端的情况下，依然支持我们的肯定是也通常只是我们的家庭—无论我们认为自己的家庭是好还是坏&lt;/li&gt;
&lt;li&gt;当一个团队成功的时候，几乎每个人都会倾向于把成功归因于自己的贡献而忽略别人的存在；当一个团队失败的时候，几乎每个人都会倾向于把失败归咎于他人的过失而尽量把自己排除在外。这种现象被称作“自利性偏差”&lt;/li&gt;
&lt;li&gt;劣币驱逐良币：Bad money drives out good，也称格雷欣法则（Gresham’s Law）。该法则认为当有两种名义价值相同但实际价值不同的货币同时在市场上流通时，实际价值高的货币将会被屯积并最终被实际价值低的货币取代&lt;/li&gt;
&lt;li&gt;God, grant me the serenity to accept the things I cannot change, Courage to change the things I can, And wisdom to know the difference.（愿上帝赐予我从容去接受我不能改变的，赐予我勇气去改变我可以改变的，并赐予我智慧去分辨这两者间的区别。）&lt;/li&gt;
&lt;li&gt;任何积累都需要时间，而且必然需要漫长的时间。也正因如此，大多数人才不肯积累，不愿积累，甚至不屑于积累&lt;/li&gt;
&lt;li&gt;爱因斯坦说过：“用当年我们制造麻烦的思路，我们根本无法解决它们。”所以，别再跟时间较劲了。看清楚、想明白，问题出在自己身上。将来，时间可能是我们的敌人，也可能是我们的朋友。时间究竟是敌是友，就看你的了……&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;&lt;strong&gt;人生就是两件事：一是该做的；二是想做的。摆对顺序成就一生，摆错顺序一事无成。&lt;/strong&gt;&lt;br&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;
    
    </summary>
    
      <category term="Life-Talk" scheme="http://www.codepub.cn/categories/Life-Talk/"/>
    
    
      <category term="Thinking" scheme="http://www.codepub.cn/tags/Thinking/"/>
    
  </entry>
  
  <entry>
    <title>Lucene 6.0 实战（5）-索引搜索器IndexSearcher</title>
    <link href="http://www.codepub.cn/2016/05/24/Lucene-6-0-in-action-5-The-index-search-an-IndexSearcher/"/>
    <id>http://www.codepub.cn/2016/05/24/Lucene-6-0-in-action-5-The-index-search-an-IndexSearcher/</id>
    <published>2016-05-24T13:51:49.000Z</published>
    <updated>2016-07-27T14:10:18.141Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Lucene的主要搜索API&quot;&gt;Lucene的主要搜索API&lt;/h3&gt;&lt;p&gt;一个简单的搜索应用主要包括索引和搜索两部分，在Lucene中，IndexSearcher类是用于对索引中文档进行搜索的核心类，它有几个重载的搜索方法，可以使用最常用的方法对特定的项进行搜索，一个项由一个字符串类型的域值和对应的域名构成。现将搜索相关API汇总如下&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类&lt;/th&gt;
&lt;th&gt;目的&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IndexSearcher&lt;/td&gt;
&lt;td&gt;搜索索引的核心类。所有搜索都通过IndexSearcher进行，它们会调用该类中重载的search方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Query及其子类&lt;/td&gt;
&lt;td&gt;封装某种查询类型的具体子类。Query实例将被传递给IndexSearcher的search方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;QueryParser&lt;/td&gt;
&lt;td&gt;将用户输入的可读的查询表达式处理成具体的Query对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TopDocs&lt;/td&gt;
&lt;td&gt;保持由IndexSearcher.search()方法返回的具有较高评分的顶部文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ScoreDoc&lt;/td&gt;
&lt;td&gt;提供对TopDocs中每条搜索结果的访问接口&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;IndexSearcher简介&quot;&gt;IndexSearcher简介&lt;/h3&gt;&lt;p&gt;首先看IndexSearcher的doc注释&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Implements search over a single IndexReader.&lt;br&gt;Applications usually need only call the inherited search(Query, int) or search(Query, Filter, int) methods. For performance reasons, if your index is unchanging, you should share a single IndexSearcher instance across multiple searches instead of creating a new one per-search. If your index has changed and you wish to see the changes reflected in searching, you should use DirectoryReader.openIfChanged(DirectoryReader) to obtain a new reader and then create a new IndexSearcher from that. Also, for low-latency turnaround it’s best to use a near-real-time reader (DirectoryReader.open(IndexWriter)). Once you have a new IndexReader, it’s relatively cheap to create a new IndexSearcher from it.&lt;br&gt;NOTE: IndexSearcher instances are completely thread safe, meaning multiple threads can call any of its methods, concurrently. If your application requires external synchronization, you should not synchronize on the IndexSearcher instance; use your own (non-Lucene) objects instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从这段说明中得出如下几点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供了对单个IndexReader的查询实现&lt;/li&gt;
&lt;li&gt;通常应用程序只需要调用search(Query, int)或者search(Query, Filter, int)方法&lt;/li&gt;
&lt;li&gt;如果你的索引不变，在多个搜索中应该采用共享一个IndexSearcher实例的方式&lt;/li&gt;
&lt;li&gt;如果索引有变动，并且你希望在搜索中有所体现，那么应该使用DirectoryReader.openIfChanged(DirectoryReader)来获取新的reader，然后通过这个reader创建一个新的IndexSearcher&lt;/li&gt;
&lt;li&gt;为了低延迟查询，最好使用近实时搜索（NRT），此时构建IndexSearcher需要使用DirectoryReader.open(IndexWriter)，一旦你获取一个新的IndexReader，再去创建一个IndexSearcher所付出的代价要小的多&lt;/li&gt;
&lt;li&gt;IndexSearcher实例是完全线程安全的，这意味着多个线程可以并发调用任何方法。如果需要外部同步，无需对IndexSearcher实例进行同步&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Lucene的多样化查询&quot;&gt;Lucene的多样化查询&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;通过项进行搜索-TermQuery类&lt;/li&gt;
&lt;li&gt;在指定的项范围内搜索-TermRangeQuery类&lt;/li&gt;
&lt;li&gt;通过字符串搜索-PrefixQuery类&lt;/li&gt;
&lt;li&gt;组合查询-BooleanQuery类&lt;/li&gt;
&lt;li&gt;通过短语搜索-PhraseQuery类&lt;/li&gt;
&lt;li&gt;通配符查询-WildcardQuery类&lt;/li&gt;
&lt;li&gt;搜索类似项-FuzzyQuery类&lt;/li&gt;
&lt;li&gt;匹配所有文档-MatchAllDocsQuery类&lt;/li&gt;
&lt;li&gt;不匹配文档-MatchNoDocsQuery类&lt;/li&gt;
&lt;li&gt;解析查询表达式-QueryParser类&lt;/li&gt;
&lt;li&gt;多短语查询-MultiPhraseQuery类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些简单的查询示例如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;224&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.Analyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.TokenStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.core.WhitespaceAnalyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.standard.StandardAnalyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.tokenattributes.OffsetAttribute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.Document;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.Field;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.StringField;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.TextField;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.DirectoryReader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.IndexWriter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.IndexWriterConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.Term;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.queryparser.classic.ParseException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.queryparser.classic.QueryParser;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.store.Directory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.store.RAMDirectory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.util.BytesRef;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Assert;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Before;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.StringReader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IndexSearchDemo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Directory directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String[] ids = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String[] countries = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;Netherlands&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Italy&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String[] contents = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;Amsterdam has lots of bridges&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Venice has lots of canals, not bridges&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String[] cities = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;Amsterdam&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Venice&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IndexWriterConfig indexWriterConfig = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IndexWriter indexWriter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createIndex&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, indexWriterConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Field idField = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;, ids[i], Field.Store.YES);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Field countryField = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(&lt;span class=&quot;string&quot;&gt;&quot;country&quot;&lt;/span&gt;, countries[i], Field.Store.YES);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Field contentField = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TextField(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, contents[i], Field.Store.NO);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Field cityField = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(&lt;span class=&quot;string&quot;&gt;&quot;city&quot;&lt;/span&gt;, cities[i], Field.Store.YES);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                document.add(idField);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                document.add(countryField);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                document.add(contentField);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                document.add(cityField);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testTermQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Term term = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(term), &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testMatchNoDocsQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Query query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MatchNoDocsQuery();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testTermRangeQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//搜索起始字母范围从A到Z的city&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Query query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;city&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BytesRef(&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BytesRef(&lt;span class=&quot;string&quot;&gt;&quot;Z&quot;&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testQueryParser&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ParseException, IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//使用WhitespaceAnalyzer分析器不会忽略大小写，也就是说大小写敏感&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        QueryParser queryParser = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QueryParser(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Query query = queryParser.parse(&lt;span class=&quot;string&quot;&gt;&quot;+lots +has&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        query = queryParser.parse(&lt;span class=&quot;string&quot;&gt;&quot;lots OR bridges&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//有点需要注意，在QueryParser解析通配符表达式的时候，一定要用引号包起来，然后作为字符串传递给parse函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QueryParser(&lt;span class=&quot;string&quot;&gt;&quot;field&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer()).parse(&lt;span class=&quot;string&quot;&gt;&quot;\&quot;This is some phrase*\&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;analyzed&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;\&quot;? ? some phrase\&quot;&quot;&lt;/span&gt;, query.toString(&lt;span class=&quot;string&quot;&gt;&quot;field&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//语法参考：http://lucene.apache.org/core/6_0_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#package_description&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//使用QueryParser解析&quot;~&quot;，~代表编辑距离，~后面参数的取值在0-2之间，默认值是2，不要使用浮点数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        QueryParser parser = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QueryParser(&lt;span class=&quot;string&quot;&gt;&quot;city&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//例如，roam~，该查询会匹配foam和roams，如果~后不跟参数，则默认值是2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//QueryParser在解析的时候不区分大小写（会全部转成小写字母），所以虽少了一个字母，但是首字母被解析为小写的v，依然不匹配，所以编辑距离是2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        query = parser.parse(&lt;span class=&quot;string&quot;&gt;&quot;Venic~2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testBooleanQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Query termQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;country&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Beijing&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Query termQuery1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;city&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Venice&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//测试OR查询，或者出现Beijing或者出现Venice&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BooleanQuery build = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BooleanQuery.Builder().add(termQuery, BooleanClause.Occur.SHOULD).add(termQuery1, BooleanClause.Occur.SHOULD).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(build, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//使用BooleanQuery实现 国家是(Italy OR Netherlands) AND contents中包含(Amsterdam)操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BooleanQuery build1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BooleanQuery.Builder().add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;country&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Italy&quot;&lt;/span&gt;)), BooleanClause.Occur.SHOULD).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;country&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;Netherlands&quot;&lt;/span&gt;)), BooleanClause.Occur.SHOULD).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BooleanQuery build2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BooleanQuery.Builder().add(build1, BooleanClause.Occur.MUST).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Amsterdam&quot;&lt;/span&gt;)), BooleanClause.Occur&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .MUST).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        search = indexSearcher.search(build2, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testPhraseQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//设置两个短语之间的跨度为2，也就是说has和bridges之间的短语小于等于均可检索到&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PhraseQuery build = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PhraseQuery.Builder().setSlop(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;has&quot;&lt;/span&gt;)).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;bridges&quot;&lt;/span&gt;)).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(build, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        build = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PhraseQuery.Builder().setSlop(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Venice&quot;&lt;/span&gt;)).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;lots&quot;&lt;/span&gt;)).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;canals&quot;&lt;/span&gt;)).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        search = indexSearcher.search(build, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertNotEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testMatchAllDocsQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Query query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MatchAllDocsQuery();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testFuzzyQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, ParseException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//注意是区分大小写的，同时默认的编辑距离的值是2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//注意两个Term之间的编辑距离必须小于两者中最小者的长度：the edit distance between the terms must be less than the minimum length term&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Query query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FuzzyQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;city&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Veni&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testWildcardQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//*代表0个或者多个字母&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Query query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WildcardQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;*dam&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//?代表0个或者1个字母&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WildcardQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;?ridges&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WildcardQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;b*s&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testPrefixQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//使用前缀搜索以It打头的国家名，显然只有Italy符合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PrefixQuery query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PrefixQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;country&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;It&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IndexSearcher &lt;span class=&quot;title&quot;&gt;getIndexSearcher&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testToken&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Analyzer analyzer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TokenStream&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tokenStream = analyzer.tokenStream(&lt;span class=&quot;string&quot;&gt;&quot;myfield&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringReader(&lt;span class=&quot;string&quot;&gt;&quot;Some text content for my test!&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OffsetAttribute offsetAttribute = tokenStream.addAttribute(OffsetAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tokenStream.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (tokenStream.incrementToken()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;token: &quot;&lt;/span&gt; + tokenStream.reflectAsString(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;).toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;token start offset: &quot;&lt;/span&gt; + offsetAttribute.startOffset());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;token end offset: &quot;&lt;/span&gt; + offsetAttribute.endOffset());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testMultiPhraseQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Term[] terms = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term[]&amp;#123;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;has&quot;&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;lots&quot;&lt;/span&gt;)&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Term term2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;bridges&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//多个add之间认为是OR操作，即(has lots)和bridges之间的slop不大于3，不计算标点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MultiPhraseQuery multiPhraseQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MultiPhraseQuery.Builder().add(terms).add(term2).setSlop(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(multiPhraseQuery, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//使用BooleanQuery类模拟MultiPhraseQuery类的功能&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testBooleanQueryImitateMultiPhraseQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PhraseQuery first = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PhraseQuery.Builder().setSlop(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Amsterdam&quot;&lt;/span&gt;)).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;bridges&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PhraseQuery second = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PhraseQuery.Builder().setSlop(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Venice&quot;&lt;/span&gt;)).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;lots&quot;&lt;/span&gt;)).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BooleanQuery booleanQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BooleanQuery.Builder().add(first, BooleanClause.Occur.SHOULD).add(second, BooleanClause.Occur.SHOULD).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = getIndexSearcher();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(booleanQuery, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有关QueryParser的详细语法请参考&lt;a href=&quot;http://lucene.apache.org/core/6_0_0/queryparser/index.html?org/apache/lucene/queryparser/classic/package-summary.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;Lucene的高级搜索技术&quot;&gt;Lucene的高级搜索技术&lt;/h3&gt;&lt;p&gt;Lucene包含了一个建立在SpanQuery类基础上的整套查询体系，大致反映了Lucene的Query类体系。SpanQuery是指域中的起始语汇单元和终止语汇单元的位置。SpanQuery有一些常用的子类，如下所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SpanQuery类型&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SpanTermQuery&lt;/td&gt;
&lt;td&gt;和其它跨度查询类型结合使用，单独使用时相当于TermQuery&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SpanFirstQuery&lt;/td&gt;
&lt;td&gt;用来匹配域中首部分的各个跨度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SpanNearQuery&lt;/td&gt;
&lt;td&gt;用来匹配临近的跨度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SpanNotQuery&lt;/td&gt;
&lt;td&gt;用来匹配不重叠的跨度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SpanOrQuery&lt;/td&gt;
&lt;td&gt;跨度查询的聚合匹配&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FieldMaskingSpanQuery&lt;/td&gt;
&lt;td&gt;封装其它SpanQuery类，但程序会认为已匹配到另外的域，该功能可用于针对多个域的跨度查询&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用示例&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;203&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;204&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;206&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;207&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;208&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;209&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;210&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;211&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;212&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;213&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;214&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;215&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;216&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;217&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;218&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;219&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;220&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;221&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;222&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;223&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;224&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;225&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;226&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;227&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;228&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;229&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;230&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;231&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;232&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;233&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;234&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;235&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;236&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;237&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;238&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;239&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;240&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;241&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;242&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;243&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;244&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;245&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;246&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;247&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;248&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;249&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;250&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;251&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;252&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;253&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;254&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;257&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;258&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;259&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;260&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;261&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;262&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;263&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.Analyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.TokenStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.core.WhitespaceAnalyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.tokenattributes.OffsetAttribute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.Document;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.Field;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.StringField;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.TextField;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.spans.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.store.RAMDirectory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.After;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Assert;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Before;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.StringReader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SpanQueryDemo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; RAMDirectory directory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IndexSearcher indexSearcher;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IndexReader indexReader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SpanTermQuery quick;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SpanTermQuery brown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SpanTermQuery red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SpanTermQuery fox;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SpanTermQuery lazy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SpanTermQuery sleepy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SpanTermQuery dog;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SpanTermQuery cat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Analyzer analyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IndexWriter indexWriter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IndexWriterConfig indexWriterConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        analyzer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriterConfig = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(analyzer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriterConfig.setOpenMode(IndexWriterConfig.OpenMode.CREATE_OR_APPEND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, indexWriterConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//TextField使用Store.YES时索引文档、频率、位置信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TextField(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;What&#39;s amazing, the quick brown fox jumps over the lazy dog&quot;&lt;/span&gt;, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TextField(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Wow! the quick red fox jumps over the sleepy cat&quot;&lt;/span&gt;, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter.commit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexReader = indexSearcher.getIndexReader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quick = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanTermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;quick&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        brown = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanTermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;brown&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        red = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanTermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fox = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanTermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;fox&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lazy = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanTermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;lazy&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dog = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanTermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;dog&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sleepy = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanTermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;sleepy&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cat = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanTermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;cat&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@After&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (indexWriter != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; indexWriter.isOpen()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                System.out.println(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;assertOnlyBrownFox&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Query query)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;string&quot;&gt;&quot;wrong doc&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, search.scoreDocs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].doc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;assertBothFoxes&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Query query)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;assertNoMatches&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Query query)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 输出跨度查询的结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; query&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; IOException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dumpSpans&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(SpanQuery query)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanWeight weight = query.createWeight(indexSearcher, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Spans spans = weight.getSpans(indexReader.getContext().leaves().get(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), SpanWeight.Postings.POSITIONS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(query);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;[] scores = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc sd : search.scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scores[sd.doc] = sd.score;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; numSpans = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//处理所有跨度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (spans.nextDoc() != Spans.NO_MORE_DOCS) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (spans.nextStartPosition() != Spans.NO_MORE_POSITIONS) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                numSpans++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; id = spans.docID();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//检索文档&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Document doc = indexReader.document(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//重新分析文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                TokenStream stream = analyzer.tokenStream(&lt;span class=&quot;string&quot;&gt;&quot;contents&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringReader(doc.get(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                stream.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                OffsetAttribute offsetAttribute = stream.addAttribute(OffsetAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                StringBuilder sb = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sb.append(&lt;span class=&quot;string&quot;&gt;&quot;  &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//处理所有语汇单元&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (stream.incrementToken()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i == spans.startPosition()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        sb.append(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sb.append(offsetAttribute.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; == spans.endPosition()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        sb.append(&lt;span class=&quot;string&quot;&gt;&quot;&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sb.append(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sb.append(&lt;span class=&quot;string&quot;&gt;&quot;(&quot;&lt;/span&gt;).append(scores[id]).append(&lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                System.out.println(sb.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                stream.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (numSpans == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                System.out.println(&lt;span class=&quot;string&quot;&gt;&quot; No Spans&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testSpanTermQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertOnlyBrownFox(brown);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(brown);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanTermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;the&quot;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanTermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;fox&quot;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * SpanFirstQuery可以对出现在域中前面某位置的跨度进行查询&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testSpanFirstQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanFirstQuery spanFirstQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanFirstQuery(brown, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertNoMatches(spanFirstQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(spanFirstQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//设置从前面开始10个跨度查找brown，一个切分结果是一个跨度，使用的是空格分词器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        spanFirstQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanFirstQuery(brown, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(spanFirstQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertOnlyBrownFox(spanFirstQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testSpanNearQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanQuery[] queries = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanQuery[]&amp;#123;quick, brown, dog&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanNearQuery spanNearQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(queries, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertNoMatches(spanNearQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(spanNearQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        spanNearQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(queries, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertNoMatches(spanNearQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(spanNearQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        spanNearQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(queries, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertOnlyBrownFox(spanNearQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(spanNearQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//将inOrder设置为false，那么就不会考虑顺序，只要两者中间不超过三个就可以检索到&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        spanNearQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanQuery[]&amp;#123;lazy, fox&amp;#125;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertOnlyBrownFox(spanNearQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(spanNearQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//在考虑顺序的情况下，是检索不到的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        spanNearQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanQuery[]&amp;#123;lazy, fox&amp;#125;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertNoMatches(spanNearQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(spanNearQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PhraseQuery phraseQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PhraseQuery.Builder().add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;lazy&quot;&lt;/span&gt;)).add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;fox&quot;&lt;/span&gt;)).setSlop(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertNoMatches(phraseQuery);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PhraseQuery phraseQuery1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PhraseQuery.Builder().setSlop(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;).add(phraseQuery.getTerms()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]).add(phraseQuery.getTerms()[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertOnlyBrownFox(phraseQuery1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testSpanNotQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//设置slop为1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanNearQuery quickFox = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanQuery[]&amp;#123;quick, fox&amp;#125;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertBothFoxes(quickFox);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(quickFox);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//第一个参数表示要包含的跨度对象，第二个参数则表示要排除的跨度对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanNotQuery quickFoxDog = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNotQuery(quickFox, dog);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertBothFoxes(quickFoxDog);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(quickFoxDog);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//下面把red排除掉，那么就只能查到一条记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanNotQuery noQuickRedFox = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNotQuery(quickFox, red);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertOnlyBrownFox(noQuickRedFox);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(noQuickRedFox);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testSpanOrQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanNearQuery quickFox = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanQuery[]&amp;#123;quick, fox&amp;#125;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanNearQuery lazyDog = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanQuery[]&amp;#123;lazy, dog&amp;#125;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanNearQuery sleepyCat = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanQuery[]&amp;#123;sleepy, cat&amp;#125;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanNearQuery quickFoxNearLazyDog = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanQuery[]&amp;#123;quickFox, lazyDog&amp;#125;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertOnlyBrownFox(quickFoxNearLazyDog);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(quickFoxNearLazyDog);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanNearQuery quickFoxNearSleepyCat = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanNearQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanQuery[]&amp;#123;quickFox, sleepyCat&amp;#125;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(quickFoxNearSleepyCat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SpanOrQuery or = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanOrQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SpanQuery[]&amp;#123;quickFoxNearLazyDog, quickFoxNearSleepyCat&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        assertBothFoxes(or);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dumpSpans(or);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 测试安全过滤&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; IOException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testSecurityFilter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(&lt;span class=&quot;string&quot;&gt;&quot;owner&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;eric&quot;&lt;/span&gt;, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TextField(&lt;span class=&quot;string&quot;&gt;&quot;keywords&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;A B of eric&quot;&lt;/span&gt;, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TextField(&lt;span class=&quot;string&quot;&gt;&quot;owner&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;jobs&quot;&lt;/span&gt;, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TextField(&lt;span class=&quot;string&quot;&gt;&quot;keywords&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;A B of jobs&quot;&lt;/span&gt;, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TextField(&lt;span class=&quot;string&quot;&gt;&quot;owner&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;jack&quot;&lt;/span&gt;, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TextField(&lt;span class=&quot;string&quot;&gt;&quot;keywords&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;A B of jack&quot;&lt;/span&gt;, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexWriter.commit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TermQuery termQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;owner&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;eric&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TermQuery termQuery1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;keywords&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//把FILTER看做是Like即可，也就是说owner必须是eric的才允许检索到&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Query query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BooleanQuery.Builder().add(termQuery1, BooleanClause.Occur.MUST).add(termQuery,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                BooleanClause.Occur.FILTER).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(query);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//如果不加安全过滤的话，那么应该检索到三条记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        query = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BooleanQuery.Builder().add(termQuery1, BooleanClause.Occur.MUST).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(query);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        search = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String keywords = indexSearcher.doc(search.scoreDocs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].doc).get(&lt;span class=&quot;string&quot;&gt;&quot;keywords&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;使用Filter查询：&quot;&lt;/span&gt; + keywords);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//使用BooleanQuery可以实现同样的功能&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BooleanQuery booleanQuery = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BooleanQuery.Builder().add(termQuery, BooleanClause.Occur.MUST).add(termQuery1, BooleanClause.Occur.MUST).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        search = indexSearcher.search(booleanQuery, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;使用BooleanQuery查询：&quot;&lt;/span&gt; + indexSearcher.doc(search.scoreDocs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].doc).get(&lt;span class=&quot;string&quot;&gt;&quot;keywords&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;禁用模糊查询和通配符查询&quot;&gt;禁用模糊查询和通配符查询&lt;/h3&gt;&lt;p&gt;有时候，可能不希望用户使用模糊查询或者通配符查询，这时候可以通过实现自己的QueryParser达到禁用的目的。例如&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.Analyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.core.WhitespaceAnalyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.queryparser.classic.ParseException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.queryparser.classic.QueryParser;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.Query;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Description:禁用模糊查询和通配符查询，同样的如果希望禁用其它类型查询，只需要覆写对应的getXXXQuery方法即可&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;lt;/P&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; Wang Xu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@version&lt;/span&gt; V1.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@since&lt;/span&gt; V1.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * WebSite: http://codepub.cn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Licence: Apache v2 License&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CustomQueryParser&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;QueryParser&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CustomQueryParser&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String f, Analyzer a)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(f, a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Query &lt;span class=&quot;title&quot;&gt;getFuzzyQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String field, String termStr, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; minSimilarity)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ParseException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ParseException(&lt;span class=&quot;string&quot;&gt;&quot;Fuzzy queries not allowed!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Query &lt;span class=&quot;title&quot;&gt;getWildcardQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String field, String termStr)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ParseException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ParseException(&lt;span class=&quot;string&quot;&gt;&quot;Wildcard queries not allowed!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String args[])&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ParseException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CustomQueryParser customQueryParser = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CustomQueryParser(&lt;span class=&quot;string&quot;&gt;&quot;filed&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        customQueryParser.parse(&lt;span class=&quot;string&quot;&gt;&quot;a?t&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        customQueryParser.parse(&lt;span class=&quot;string&quot;&gt;&quot;junit~&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;多索引的搜索合并方法&quot;&gt;多索引的搜索合并方法&lt;/h3&gt;&lt;p&gt;如果存在多索引文件，需要如何搜索并合并搜索结果呢？此时需要使用MultiReader，通过该类的构造函数MultiReader(IndexReader… subReaders)可以接收多个IndexReader实例，而一个IndexReader实例对应一个索引文件目录，之后用该MultiReader实例初始化IndexSearcher。&lt;/p&gt;
&lt;p&gt;注意，IndexReader实例是完全线程安全的，多线程可以调用其任何方法，而无需对IndexReader实例进行同步。如果你的应用需要外部同步操作，对你自己的对象进行同步，而不是Lucene的。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.Analyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.core.WhitespaceAnalyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.Document;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.Field;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.StringField;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.IndexSearcher;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.ScoreDoc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.TermRangeQuery;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.TopDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.store.Directory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.store.RAMDirectory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.util.BytesRef;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.After;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Assert;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Before;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Description:测试有多个索引文件的情况下，如何进行搜索并合并搜索结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &amp;lt;/P&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@author&lt;/span&gt; Wang Xu&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@version&lt;/span&gt; V1.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@since&lt;/span&gt; V1.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * WebSite: http://codepub.cn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Licence: Apache v2 License&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MultiReaderDemo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Analyzer analyzer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory aDirectory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory bDirectory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriterConfig aIndexWriterConfig = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(analyzer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriterConfig bIndexWriterConfig = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(analyzer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter aIndexWriter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter bIndexWriter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String[] animals = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;d&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;e&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;f&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;g&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;h&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;i&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;j&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;k&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;m&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;o&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;p&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;q&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;s&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;t&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;u&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;v&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;x&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;y&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;z&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        aIndexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(aDirectory, aIndexWriterConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bIndexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(bDirectory, bIndexWriterConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; animals.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String animal = animals[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(&lt;span class=&quot;string&quot;&gt;&quot;animal&quot;&lt;/span&gt;, animal, Field.Store.YES));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (animal.charAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;lt; &lt;span class=&quot;string&quot;&gt;&#39;n&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                aIndexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bIndexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        aIndexWriter.commit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bIndexWriter.commit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@After&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDown&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (aIndexWriter != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; aIndexWriter.isOpen()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                aIndexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bIndexWriter != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; bIndexWriter.isOpen()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bIndexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testMultiReader&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexReader aIndexReader = DirectoryReader.open(aDirectory);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexReader bIndexReader = DirectoryReader.open(bDirectory);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MultiReader multiReader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MultiReader(aIndexReader, bIndexReader);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(multiReader);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TopDocs animal = indexSearcher.search(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;animal&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BytesRef(&lt;span class=&quot;string&quot;&gt;&quot;h&quot;&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BytesRef(&lt;span class=&quot;string&quot;&gt;&quot;q&quot;&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;), &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, animal.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ScoreDoc[] scoreDocs = animal.scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc sd : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(indexSearcher.doc(sd.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;animal:h&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;animal:i&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;animal:j&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;animal:k&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;animal:l&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;animal:m&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;animal:n&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;animal:o&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;animal:p&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;animal:q&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Lucene的主要搜索API&quot;&gt;Lucene的主要搜索API&lt;/h3&gt;&lt;p&gt;一个简单的搜索应用主要包括索引和搜索两部分，在Lucene中，IndexSearcher类是用于对索引中文档进行搜索的核心类，它有几个重载的搜索方法，可以使用最常用的方法对特定的项进行搜索
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Lucene" scheme="http://www.codepub.cn/tags/Lucene/"/>
    
  </entry>
  
  <entry>
    <title>Lucene 6.0 实战（4）-文本分析器</title>
    <link href="http://www.codepub.cn/2016/05/23/Lucene-6-0-in-action-4-The-text-analyzer/"/>
    <id>http://www.codepub.cn/2016/05/23/Lucene-6-0-in-action-4-The-text-analyzer/</id>
    <published>2016-05-23T15:30:05.000Z</published>
    <updated>2016-07-27T14:14:09.273Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Analyzer简介&quot;&gt;Analyzer简介&lt;/h3&gt;&lt;p&gt;在Lucene的org.apache.lucene.analysis模块中提供了顶层的抽象类Analyzer，Analyzer主要是用来构建TokenStreams，如果想实现自定义的Analyzer，必须覆写createComponents(String)方法，并定义自己的TokenStreamComponents。&lt;/p&gt;
&lt;p&gt;为什么要有Analyzer呢？对于Lucene而言，不管是索引还是检索，都是针对纯文本而言，对于纯文本的来源可以是PDF，Word，Excel，PPT，HTML等，Lucene对此并不关心，只要保证传递给Lucene的是纯文本即可。&lt;/p&gt;
&lt;p&gt;而通常情况下，对于大量的文本，用户在检索的时候不可能全部输入，例如有文本“Hello World，I’am javaer!”，用户在检索的时候可能只是输入了“Hello”，这里就需要Lucene索引该文本的时候预先对文本进行切分，这样在检索的时候才能将词源和文本对应起来。&lt;/p&gt;
&lt;p&gt;Lucene常用分析器整理如下&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;分析器&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;WhitespaceAnalyzer&lt;/td&gt;
&lt;td&gt;根据空格拆分语汇单元&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SimpleAnalyzer&lt;/td&gt;
&lt;td&gt;根据非字母拆分文本，并将其转换为小写形式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StopAnalyzer&lt;/td&gt;
&lt;td&gt;根据非字母拆分文本，然后小写化，再移除停用词&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;KeywordAnalyzer&lt;/td&gt;
&lt;td&gt;将整个文本作为一个单一语汇单元处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StandardAnalyzer&lt;/td&gt;
&lt;td&gt;根据Unicode文本分割算法，具体算法参考&lt;a href=&quot;http://unicode.org/reports/tr29/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unicode Standard Annex #29&lt;/a&gt;，然后将文本转化为小写，并移除英文停用词&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SmartChineseAnalyzer&lt;/td&gt;
&lt;td&gt;SmartChineseAnalyzer是一个智能中文分词模块，能够利用概率对汉语句子进行最优切分，并内嵌英文tokenizer，能有效处理中英文混合的文本内容。它的原理基于自然语言处理领域的隐马尔科夫模型（HMM），利用大量语料库的训练来统计汉语词汇的词频和跳转概率，从而根据这些统计结果对整个汉语句子计算最似然（likelihood）的切分。因为智能分词需要词典来保存词汇的统计值，SmartChineseAnalyzer的运行需要指定词典位置，如何指定词典位置请参考org.apache.lucene.analysis.cn.smart.AnalyzerProfile。SmartChineseAnalyzer的算法和语料库词典来自于&lt;a href=&quot;http://ictclas.nlpir.org/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ICTCLAS&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CJKAnalyzer&lt;/td&gt;
&lt;td&gt;CJK表示中日韩，目的是要把分别来自中文、日文、韩文、越文中，本质、意义相同、形状一样或稍异的表意文字（主要为汉字，但也有仿汉字如日本国字、韩国独有汉字、越南的喃字）在ISO 10646及Unicode标准内赋予相同编码。对于中文是交叉双字分割，二元分词法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;Analyzer部分子类分词示例&quot;&gt;Analyzer部分子类分词示例&lt;/h3&gt;&lt;p&gt;选取了六个实现类，并分别输出它们对英文、中文、特殊符号及邮箱等的切分效果。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AnalyzerDemo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String[] examples = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;The quick brown 1234 fox jumped over the lazy dog!&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;XY&amp;amp;Z 15.6 Corporation - xyz@example.com&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;北京市北京大学&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Analyzer[] ANALYZERS = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Analyzer[]&amp;#123;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer(), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleAnalyzer(), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StopAnalyzer(), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            StandardAnalyzer(), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CJKAnalyzer(), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SmartChineseAnalyzer()&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testAnalyzer&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; ANALYZERS.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String simpleName = ANALYZERS[i].getClass().getSimpleName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; examples.length; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                TokenStream contents = ANALYZERS[i].tokenStream(&lt;span class=&quot;string&quot;&gt;&quot;contents&quot;&lt;/span&gt;, examples[j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//TokenStream contents = ANALYZERS[i].tokenStream(&quot;contents&quot;, new StringReader(examples[j]));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                OffsetAttribute offsetAttribute = contents.addAttribute(OffsetAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                TypeAttribute typeAttribute = contents.addAttribute(TypeAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                contents.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                System.out.println(simpleName + &lt;span class=&quot;string&quot;&gt;&quot; analyzing : &quot;&lt;/span&gt; + examples[j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (contents.incrementToken()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    String s1 = offsetAttribute.toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i1 = offsetAttribute.startOffset();&lt;span class=&quot;comment&quot;&gt;//起始偏移量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i2 = offsetAttribute.endOffset();&lt;span class=&quot;comment&quot;&gt;//结束偏移量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    System.out.print(s1 + &lt;span class=&quot;string&quot;&gt;&quot;[&quot;&lt;/span&gt; + i1 + &lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt; + i2 + &lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt; + typeAttribute.type() + &lt;span class=&quot;string&quot;&gt;&quot;]&quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                contents.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                contents.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                System.out.println();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WhitespaceAnalyzer analyzing : The quick brown &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt; fox jumped over the lazy dog!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:word] quick[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:word] brown[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:word] &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:word] fox[&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:word] jumped[&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;:word] over[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:word] the[&lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;:word] lazy[&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:word] dog![&lt;span class=&quot;number&quot;&gt;46&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WhitespaceAnalyzer analyzing : XY&amp;amp;Z &lt;span class=&quot;number&quot;&gt;15.6&lt;/span&gt; Corporation - xyz&lt;span class=&quot;annotation&quot;&gt;@example&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XY&amp;amp;Z[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:word] &lt;span class=&quot;number&quot;&gt;15.6&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:word] Corporation[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:word] -[&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:word] xyz&lt;span class=&quot;annotation&quot;&gt;@example&lt;/span&gt;.com[&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;39&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WhitespaceAnalyzer analyzing : 北京市北京大学&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;北京市北京大学[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SimpleAnalyzer analyzing : The quick brown &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt; fox jumped over the lazy dog!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;the[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:word] quick[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:word] brown[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:word] fox[&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:word] jumped[&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;:word] over[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:word] the[&lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;:word] lazy[&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:word] dog[&lt;span class=&quot;number&quot;&gt;46&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SimpleAnalyzer analyzing : XY&amp;amp;Z &lt;span class=&quot;number&quot;&gt;15.6&lt;/span&gt; Corporation - xyz&lt;span class=&quot;annotation&quot;&gt;@example&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xy[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:word] z[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:word] corporation[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:word] xyz[&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;:word] example[&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;:word] com[&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;39&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SimpleAnalyzer analyzing : 北京市北京大学&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;北京市北京大学[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StopAnalyzer analyzing : The quick brown &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt; fox jumped over the lazy dog!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;quick[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:word] brown[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:word] fox[&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:word] jumped[&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;:word] over[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:word] lazy[&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:word] dog[&lt;span class=&quot;number&quot;&gt;46&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StopAnalyzer analyzing : XY&amp;amp;Z &lt;span class=&quot;number&quot;&gt;15.6&lt;/span&gt; Corporation - xyz&lt;span class=&quot;annotation&quot;&gt;@example&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xy[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:word] z[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:word] corporation[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:word] xyz[&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;:word] example[&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;:word] com[&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;39&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StopAnalyzer analyzing : 北京市北京大学&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;北京市北京大学[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StandardAnalyzer analyzing : The quick brown &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt; fox jumped over the lazy dog!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;quick[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] brown[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&amp;lt;NUM&amp;gt;] fox[&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] jumped[&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] over[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] lazy[&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] dog[&lt;span class=&quot;number&quot;&gt;46&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StandardAnalyzer analyzing : XY&amp;amp;Z &lt;span class=&quot;number&quot;&gt;15.6&lt;/span&gt; Corporation - xyz&lt;span class=&quot;annotation&quot;&gt;@example&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xy[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] z[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] &lt;span class=&quot;number&quot;&gt;15.6&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:&amp;lt;NUM&amp;gt;] corporation[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] xyz[&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] example.com[&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;39&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StandardAnalyzer analyzing : 北京市北京大学&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;北[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&amp;lt;IDEOGRAPHIC&amp;gt;] 京[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&amp;lt;IDEOGRAPHIC&amp;gt;] 市[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&amp;lt;IDEOGRAPHIC&amp;gt;] 北[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:&amp;lt;IDEOGRAPHIC&amp;gt;] 京[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;:&amp;lt;IDEOGRAPHIC&amp;gt;] 大[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;:&amp;lt;IDEOGRAPHIC&amp;gt;] 学[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&amp;lt;IDEOGRAPHIC&amp;gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CJKAnalyzer analyzing : The quick brown &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt; fox jumped over the lazy dog!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;quick[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] brown[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&amp;lt;NUM&amp;gt;] fox[&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] jumped[&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] over[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] lazy[&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] dog[&lt;span class=&quot;number&quot;&gt;46&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CJKAnalyzer analyzing : XY&amp;amp;Z &lt;span class=&quot;number&quot;&gt;15.6&lt;/span&gt; Corporation - xyz&lt;span class=&quot;annotation&quot;&gt;@example&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xy[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] z[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] &lt;span class=&quot;number&quot;&gt;15.6&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:&amp;lt;NUM&amp;gt;] corporation[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] xyz[&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] example.com[&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;39&lt;/span&gt;:&amp;lt;ALPHANUM&amp;gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CJKAnalyzer analyzing : 北京市北京大学&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;北京[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&amp;lt;DOUBLE&amp;gt;] 京市[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&amp;lt;DOUBLE&amp;gt;] 市北[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:&amp;lt;DOUBLE&amp;gt;] 北京[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;:&amp;lt;DOUBLE&amp;gt;] 京大[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;:&amp;lt;DOUBLE&amp;gt;] 大学[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&amp;lt;DOUBLE&amp;gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SmartChineseAnalyzer analyzing : The quick brown &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt; fox jumped over the lazy dog!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;the[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:word] quick[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:word] brown[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:word] &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:word] fox[&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:word] jump[&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;:word] over[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:word] the[&lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;:word] lazi[&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:word] dog[&lt;span class=&quot;number&quot;&gt;46&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;49&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SmartChineseAnalyzer analyzing : XY&amp;amp;Z &lt;span class=&quot;number&quot;&gt;15.6&lt;/span&gt; Corporation - xyz&lt;span class=&quot;annotation&quot;&gt;@example&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xy[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:word] z[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:word] &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:word] &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:word] corpor[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:word] xyz[&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;:word] exampl[&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;:word] com[&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;39&lt;/span&gt;:word] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SmartChineseAnalyzer analyzing : 北京市北京大学&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;北京市[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:word] 北京大学[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:word]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Analyzer之TokenStream&quot;&gt;Analyzer之TokenStream&lt;/h3&gt;&lt;p&gt;TokenStream是分析处理组件中的一种中间数据格式，它从一个reader中获取文本，并以TokenStream作为输出结果。在所有的过滤器中，TokenStream同时充当着输入和输出格式。Tokenizer和TokenFilter继承自TokenStream，Tokenizer是一个TokenStream，其输入源是一个Reader；TokenFilter也是一个TokenStream，其输入源是另一个TokenStream。而TokenStream简单点说就是生成器的输出结果。TokenStream是一个分词后的Token结果组成的流，通过流能够不断的得到下一个Token。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testTokenStream&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Analyzer analyzer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String inputText = &lt;span class=&quot;string&quot;&gt;&quot;This is a test text for token!&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TokenStream tokenStream = analyzer.tokenStream(&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringReader(inputText));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//保存token字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CharTermAttribute charTermAttribute = tokenStream.addAttribute(CharTermAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//在调用incrementToken()开始消费token之前需要重置stream到一个干净的状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tokenStream.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (tokenStream.incrementToken()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//打印分词结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;[&quot;&lt;/span&gt; + charTermAttribute + &lt;span class=&quot;string&quot;&gt;&quot;]&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[This][is][a][test][text][for][token!]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Analyzer之TokenAttribute&quot;&gt;Analyzer之TokenAttribute&lt;/h3&gt;&lt;p&gt;在调用tokenStream()方法之后，我们可以通过为之添加多个Attribute，从而可以了解到分词之后详细的词元信息，比如CharTermAttribute用于保存词元的内容，TypeAttribute用于保存词元的类型。&lt;/p&gt;
&lt;p&gt;在Lucene中提供了几种类型的Attribute，每种类型的Attribute提供一个不同的方面或者token的元数据，罗列如下&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CharTermAttribute&lt;/td&gt;
&lt;td&gt;表示token本身的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PositionIncrementAttribute&lt;/td&gt;
&lt;td&gt;表示当前token相对于前一个token的相对位置，也就是相隔的词语数量（例如“text for attribute”，text和attribute之间的getPositionIncrement为2），如果两者之间没有停用词，那么该值被置为默认值1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OffsetAttribute&lt;/td&gt;
&lt;td&gt;表示token的首字母和尾字母在原文本中的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TypeAttribute&lt;/td&gt;
&lt;td&gt;表示token的词汇类型信息，默认值为word，其它值有&amp;lt;ALPHANUM&amp;gt; &amp;lt;APOSTROPHE&amp;gt; &amp;lt;ACRONYM&amp;gt; &amp;lt;COMPANY&amp;gt; &amp;lt;EMAIL&amp;gt; &amp;lt;HOST&amp;gt; &amp;lt;NUM&amp;gt; &amp;lt;CJ&amp;gt; &amp;lt;ACRONYM_DEP&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FlagsAttribute&lt;/td&gt;
&lt;td&gt;与TypeAttribute类似，假设你需要给token添加额外的信息，而且希望该信息可以通过分析链，那么就可以通过flags去传递&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PayloadAttribute&lt;/td&gt;
&lt;td&gt;在每个索引位置都存储了payload（关键信息），当使用基于Payload的查询时，该信息在评分中非常有用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testAttribute&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Analyzer analyzer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String input = &lt;span class=&quot;string&quot;&gt;&quot;This is a test text for attribute! Just add-some word.&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TokenStream tokenStream = analyzer.tokenStream(&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringReader(input));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CharTermAttribute charTermAttribute = tokenStream.addAttribute(CharTermAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PositionIncrementAttribute positionIncrementAttribute = tokenStream.addAttribute(PositionIncrementAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OffsetAttribute offsetAttribute = tokenStream.addAttribute(OffsetAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TypeAttribute typeAttribute = tokenStream.addAttribute(TypeAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PayloadAttribute payloadAttribute = tokenStream.addAttribute(PayloadAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    payloadAttribute.setPayload(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BytesRef(&lt;span class=&quot;string&quot;&gt;&quot;Just&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tokenStream.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (tokenStream.incrementToken()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;[&quot;&lt;/span&gt; + charTermAttribute + &lt;span class=&quot;string&quot;&gt;&quot; increment:&quot;&lt;/span&gt; + positionIncrementAttribute.getPositionIncrement() +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot; start:&quot;&lt;/span&gt; + offsetAttribute&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .startOffset() + &lt;span class=&quot;string&quot;&gt;&quot; end:&quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                offsetAttribute&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .endOffset() + &lt;span class=&quot;string&quot;&gt;&quot; type:&quot;&lt;/span&gt; + typeAttribute.type() + &lt;span class=&quot;string&quot;&gt;&quot; payload:&quot;&lt;/span&gt; + payloadAttribute.getPayload() +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;]\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tokenStream.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tokenStream.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在调用incrementToken()结束迭代之后，调用end()和close()方法，其中end()可以唤醒当前TokenStream的处理器去做一些收尾工作，close()可以关闭TokenStream和Analyzer去释放在分析过程中使用的资源。&lt;/p&gt;
&lt;p&gt;输出结果如下，其中停用词被分词器过滤掉了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[test increment:4 start:10 end:14 type:&lt;alphanum&gt; payload:null]&lt;br&gt;[text increment:1 start:15 end:19 type:&lt;alphanum&gt; payload:null]&lt;br&gt;[attribute increment:2 start:24 end:33 type:&lt;alphanum&gt; payload:null]&lt;br&gt;[just increment:1 start:35 end:39 type:&lt;alphanum&gt; payload:null]&lt;br&gt;[add increment:1 start:40 end:43 type:&lt;alphanum&gt; payload:null]&lt;br&gt;[some increment:1 start:44 end:48 type:&lt;alphanum&gt; payload:null]&lt;br&gt;[word increment:1 start:49 end:53 type:&lt;alphanum&gt; payload:null]&lt;/alphanum&gt;&lt;/alphanum&gt;&lt;/alphanum&gt;&lt;/alphanum&gt;&lt;/alphanum&gt;&lt;/alphanum&gt;&lt;/alphanum&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Analyzer之TokenFilter&quot;&gt;Analyzer之TokenFilter&lt;/h3&gt;&lt;p&gt;TokenFilter主要用于TokenStream的过滤操作，用来处理Tokenizer或者上一个TokenFilter处理后的结果，如果是对现有分词器进行扩展或修改，推荐使用自定义TokenFilter方式。自定义TokenFilter需要实现incrementToken()抽象函数，并且该方法需要声明为final的，在此函数中对过滤Term的CharTermAttribute和PositionIncrementAttribute等属性进行操作，就能实现过滤功能，例如一个简单的词扩展过滤器如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.Analyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.TokenFilter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.TokenStream;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.core.WhitespaceAnalyzer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.tokenattributes.CharTermAttribute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.HashMap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Map;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestTokenFilter&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String text = &lt;span class=&quot;string&quot;&gt;&quot;Hi, Dr Wang, Mr Liu asks if you stay with Mrs Liu yesterday!&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Analyzer analyzer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CourtesyTitleFilter filter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CourtesyTitleFilter(analyzer.tokenStream(&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;, text));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CharTermAttribute charTermAttribute = filter.addAttribute(CharTermAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        filter.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (filter.incrementToken()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.print(charTermAttribute + &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 自定义词扩展过滤器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CourtesyTitleFilter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TokenFilter&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;String, String&amp;gt; courtesyTitleMap = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; CharTermAttribute termAttribute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Construct a token stream filtering the given input.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CourtesyTitleFilter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TokenStream input)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(input);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        termAttribute = addAttribute(CharTermAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        courtesyTitleMap.put(&lt;span class=&quot;string&quot;&gt;&quot;Dr&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;doctor&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        courtesyTitleMap.put(&lt;span class=&quot;string&quot;&gt;&quot;Mr&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;mister&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        courtesyTitleMap.put(&lt;span class=&quot;string&quot;&gt;&quot;Mrs&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;miss&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;incrementToken&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!input.incrementToken()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String small = termAttribute.toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (courtesyTitleMap.containsKey(small)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            termAttribute.setEmpty().append(courtesyTitleMap.get(small));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出结果如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi, doctor Wang, mister Liu asks if you stay with miss Liu yesterday!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;自定义Analyzer实现扩展停用词&quot;&gt;自定义Analyzer实现扩展停用词&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;继承自Analyzer并覆写createComponents(String)方法&lt;/li&gt;
&lt;li&gt;维护自己的停用词词典&lt;/li&gt;
&lt;li&gt;重写TokenStreamComponents，选择合适的过滤策略&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StopAnalyzerExtend&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Analyzer&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; CharArraySet stopWordSet;&lt;span class=&quot;comment&quot;&gt;//停止词词典&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; CharArraySet &lt;span class=&quot;title&quot;&gt;getStopWordSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.stopWordSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setStopWordSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(CharArraySet stopWordSet)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.stopWordSet = stopWordSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StopAnalyzerExtend&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setStopWordSet(StopAnalyzer.ENGLISH_STOP_WORDS_SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; stops 需要扩展的停止词&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StopAnalyzerExtend&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(List&amp;lt;String&amp;gt; stops)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/**如果直接为stopWordSet赋值的话，会报如下异常，这是因为在StopAnalyzer中有ENGLISH_STOP_WORDS_SET = CharArraySet.unmodifiableSet(stopSet);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * ENGLISH_STOP_WORDS_SET 被设置为不可更改的set集合&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * Exception in thread &quot;main&quot; java.lang.UnsupportedOperationException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * at org.apache.lucene.analysis.util.CharArrayMap$UnmodifiableCharArrayMap.put(CharArrayMap.java:592)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * at org.apache.lucene.analysis.util.CharArraySet.add(CharArraySet.java:105)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * at java.util.AbstractCollection.addAll(AbstractCollection.java:344)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * at MyAnalyzer.&amp;lt;init&amp;gt;(AnalyzerDemo.java:146)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         * at MyAnalyzer.main(AnalyzerDemo.java:162)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//stopWordSet = getStopWordSet();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stopWordSet = CharArraySet.copy(getStopWordSet());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stopWordSet.addAll(StopFilter.makeStopSet(stops));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; TokenStreamComponents &lt;span class=&quot;title&quot;&gt;createComponents&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String fieldName)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Tokenizer source = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LowerCaseTokenizer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TokenStreamComponents(source, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StopFilter(source, stopWordSet));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ArrayList&amp;lt;String&amp;gt; strings = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;() &amp;#123;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            add(&lt;span class=&quot;string&quot;&gt;&quot;小鬼子&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            add(&lt;span class=&quot;string&quot;&gt;&quot;美国佬&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Analyzer analyzer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StopAnalyzerExtend(strings);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String content = &lt;span class=&quot;string&quot;&gt;&quot;小鬼子 and 美国佬 are playing together!&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TokenStream tokenStream = analyzer.tokenStream(&lt;span class=&quot;string&quot;&gt;&quot;myfield&quot;&lt;/span&gt;, content);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tokenStream.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CharTermAttribute charTermAttribute = tokenStream.addAttribute(CharTermAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (tokenStream.incrementToken()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 已经过滤掉自定义停用词&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 输出：playing   together&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(charTermAttribute.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tokenStream.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tokenStream.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;自定义Analyzer实现字长过滤&quot;&gt;自定义Analyzer实现字长过滤&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LongFilterAnalyzer&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Analyzer&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getLen&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.len;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setLen&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.len = len;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LongFilterAnalyzer&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LongFilterAnalyzer&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setLen(len);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; TokenStreamComponents &lt;span class=&quot;title&quot;&gt;createComponents&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String fieldName)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Tokenizer source = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WhitespaceTokenizer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//过滤掉长度&amp;lt;len，并且&amp;gt;20的token&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TokenStream tokenStream = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LengthFilter(source, len, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TokenStreamComponents(source, tokenStream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//把长度小于2的过滤掉，开区间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Analyzer analyzer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LongFilterAnalyzer(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String words = &lt;span class=&quot;string&quot;&gt;&quot;I am a java coder! Testingtestingtesting!&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TokenStream stream = analyzer.tokenStream(&lt;span class=&quot;string&quot;&gt;&quot;myfield&quot;&lt;/span&gt;, words);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stream.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CharTermAttribute offsetAtt = stream.addAttribute(CharTermAttribute.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (stream.incrementToken()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                System.out.println(offsetAtt.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stream.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stream.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;am&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;coder!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，长度小于两个字符的文本都被过滤掉了。&lt;/p&gt;
&lt;h3 id=&quot;Analyzer之PerFieldAnalyzerWrapper&quot;&gt;Analyzer之PerFieldAnalyzerWrapper&lt;/h3&gt;&lt;p&gt;PerFieldAnalyzerWrapper的doc注释中提供了详细的说明，该类提供处理不同的Field使用不同的Analyzer的技术方案。PerFieldAnalyzerWrapper可以像其它的Analyzer一样使用，包括索引和查询分析。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testPerFieldAnalyzerWrapper&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, ParseException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;String, Analyzer&amp;gt; fields = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fields.put(&lt;span class=&quot;string&quot;&gt;&quot;partnum&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; KeywordAnalyzer());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//对于其他的域，默认使用SimpleAnalyzer分析器，对于指定的域partnum使用KeywordAnalyzer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PerFieldAnalyzerWrapper perFieldAnalyzerWrapper = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PerFieldAnalyzerWrapper(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleAnalyzer(), fields);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriterConfig indexWriterConfig = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(perFieldAnalyzerWrapper);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, indexWriterConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FieldType fieldType = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FieldType();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fieldType.setStored(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fieldType.setIndexOptions(IndexOptions.DOCS_AND_FREQS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;string&quot;&gt;&quot;partnum&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Q36&quot;&lt;/span&gt;, fieldType));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;string&quot;&gt;&quot;description&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Illidium Space Modulator&quot;&lt;/span&gt;, fieldType));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//直接使用TermQuery是可以检索到的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TopDocs search = indexSearcher.search(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;string&quot;&gt;&quot;partnum&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Q36&quot;&lt;/span&gt;)), &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//如果使用QueryParser，那么必须要使用PerFieldAnalyzerWrapper，否则如下所示，是检索不到的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Query description = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QueryParser(&lt;span class=&quot;string&quot;&gt;&quot;description&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleAnalyzer()).parse(&lt;span class=&quot;string&quot;&gt;&quot;partnum:Q36 AND SPACE&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    search = indexSearcher.search(description, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;SimpleAnalyzer :&quot;&lt;/span&gt; + description.toString());&lt;span class=&quot;comment&quot;&gt;//+partnum:q +description:space，原因是SimpleAnalyzer会剥离非字母字符并将字母小写化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//使用PerFieldAnalyzerWrapper可以检索到&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//partnum:Q36 AND SPACE表示在partnum中出现Q36，在description中出现SPACE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    description = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QueryParser(&lt;span class=&quot;string&quot;&gt;&quot;description&quot;&lt;/span&gt;, perFieldAnalyzerWrapper).parse(&lt;span class=&quot;string&quot;&gt;&quot;partnum:Q36 AND SPACE&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    search = indexSearcher.search(description, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Assert.assertEquals(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, search.totalHits);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;(SimpleAnalyzer,KeywordAnalyzer) :&quot;&lt;/span&gt; + description.toString());&lt;span class=&quot;comment&quot;&gt;//+partnum:Q36 +description:space&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SimpleAnalyzer :+partnum:q +description:space&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(SimpleAnalyzer,KeywordAnalyzer) :+partnum:Q36 +description:space&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由结果可以看出，在索引阶段，使用KeywordAnalyzer作为partnum域的分词器，使用SimpleAnalyzer作为其它域的分词器，同样的在检索阶段，也必须这样处理，否则无法检索到结果。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Analyzer简介&quot;&gt;Analyzer简介&lt;/h3&gt;&lt;p&gt;在Lucene的org.apache.lucene.analysis模块中提供了顶层的抽象类Analyzer，Analyzer主要是用来构建TokenStreams，如果想实现自定义的Analyzer，必
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Lucene" scheme="http://www.codepub.cn/tags/Lucene/"/>
    
  </entry>
  
  <entry>
    <title>Lucene 6.0 实战（3）-各种Field查询操作</title>
    <link href="http://www.codepub.cn/2016/05/20/Lucene-6-0-in-action-3-A-variety-of-Field-query-operation/"/>
    <id>http://www.codepub.cn/2016/05/20/Lucene-6-0-in-action-3-A-variety-of-Field-query-operation/</id>
    <published>2016-05-20T13:33:32.000Z</published>
    <updated>2016-07-27T14:10:03.199Z</updated>
    
    <content type="html">&lt;h3 id=&quot;IntPoint查询&quot;&gt;IntPoint查询&lt;/h3&gt;&lt;p&gt;XXXPoint类中提供了一些常用的静态工厂查询方法，可以直接用来构建查询语句。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testIntPointQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Field intPoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntPoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(intPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    intPoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(intPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Field intPoint1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntPoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(intPoint1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    intPoint1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(intPoint1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//精确查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Query query = IntPoint.newExactQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ScoreDoc[] scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;精确查询：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，不包含边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = IntPoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, Math.addExact(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), Math.addExact(&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;不包含边界：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，包含边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = IntPoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;包含边界：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，左包含，右不包含&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = IntPoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, Math.addExact(&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;左包含右不包含：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//集合查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = IntPoint.newSetQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;集合查询：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;精确查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;包含边界：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;包含边界：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;左包含右不包含：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;集合查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;集合查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;LongPoint查询&quot;&gt;LongPoint查询&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testLongPointQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Field longPoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LongPoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(longPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    longPoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(longPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    longPoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LongPoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(longPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    longPoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(longPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//精确查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Query query = LongPoint.newExactQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ScoreDoc[] scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;精确查询：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，不包含边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = LongPoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, Math.addExact(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), Math.addExact(&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;不包含边界：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，包含边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = LongPoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;包含边界：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，左包含，右不包含&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = LongPoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, Math.addExact(&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;左包含右不包含：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//集合查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = LongPoint.newSetQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;集合查询：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;精确查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;包含边界：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;包含边界：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;左包含右不包含：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;集合查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;集合查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;FloatPoint查询&quot;&gt;FloatPoint查询&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testFloatPointQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Field floatPoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FloatPoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(floatPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    floatPoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(floatPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    floatPoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FloatPoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22.2f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(floatPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    floatPoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22.2f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(floatPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//精确查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Query query = FloatPoint.newExactQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ScoreDoc[] scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;精确查询：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，不包含边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = FloatPoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, Math.nextUp(&lt;span class=&quot;number&quot;&gt;11.1f&lt;/span&gt;), Math.nextDown(&lt;span class=&quot;number&quot;&gt;22.2f&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;不包含边界：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，包含边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = FloatPoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22.2f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;包含边界：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，左包含，右不包含&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = FloatPoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1f&lt;/span&gt;, Math.nextDown(&lt;span class=&quot;number&quot;&gt;22.2f&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;左包含右不包含：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//集合查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = FloatPoint.newSetQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22.2f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;33.3f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;集合查询：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;精确查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;包含边界：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;包含边界：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;22.2&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;左包含右不包含：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;集合查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;集合查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;22.2&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;DoublePoint查询&quot;&gt;DoublePoint查询&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testDoublePointQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Field doublePoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DoublePoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(doublePoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    doublePoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(doublePoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    doublePoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DoublePoint(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22.2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(doublePoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    doublePoint = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22.2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(doublePoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//精确查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Query query = DoublePoint.newExactQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ScoreDoc[] scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;精确查询：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，不包含边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = DoublePoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, Math.nextUp(&lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;), Math.nextDown(&lt;span class=&quot;number&quot;&gt;22.2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;不包含边界：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，包含边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = DoublePoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22.2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;包含边界：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//范围查询，左包含，右不包含&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = DoublePoint.newRangeQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;, Math.nextDown(&lt;span class=&quot;number&quot;&gt;22.2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;左包含右不包含：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//集合查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    query = DoublePoint.newSetQuery(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;22.2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;33.3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scoreDocs = indexSearcher.search(query, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;).scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;集合查询：&quot;&lt;/span&gt; + indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;精确查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;包含边界：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;包含边界：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;22.2&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;左包含右不包含：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;集合查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;11.1&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;集合查询：Document&amp;lt;stored&amp;lt;age:&lt;span class=&quot;number&quot;&gt;22.2&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;IntPoint查询&quot;&gt;IntPoint查询&lt;/h3&gt;&lt;p&gt;XXXPoint类中提供了一些常用的静态工厂查询方法，可以直接用来构建查询语句。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Lucene" scheme="http://www.codepub.cn/tags/Lucene/"/>
    
  </entry>
  
  <entry>
    <title>Lucene 6.0 实战（2）-各种Field及排序操作</title>
    <link href="http://www.codepub.cn/2016/05/20/Lucene-6-0-in-action-2-All-kinds-of-Field-and-sort-operations/"/>
    <id>http://www.codepub.cn/2016/05/20/Lucene-6-0-in-action-2-All-kinds-of-Field-and-sort-operations/</id>
    <published>2016-05-20T13:31:45.000Z</published>
    <updated>2016-07-27T14:09:44.939Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Field简述&quot;&gt;Field简述&lt;/h3&gt;&lt;p&gt;在Lucene中，各种Field都是IndexableField接口的实现，该接口中提供了一些通用的方法，用于获取Field相关的属性&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IndexableField&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//获取名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//获取Field的类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; IndexableFieldType &lt;span class=&quot;title&quot;&gt;fieldType&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//获取Field的权重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;boost&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** Non-null if this field has a binary value */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; BytesRef &lt;span class=&quot;title&quot;&gt;binaryValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** Non-null if this field has a string value */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;stringValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** Non-null if this field has a Reader value */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Reader &lt;span class=&quot;title&quot;&gt;readerValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** Non-null if this field has a numeric value */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Number &lt;span class=&quot;title&quot;&gt;numericValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;NOTES：&lt;/strong&gt;一般通过fieldType()方法获取到该Field对应的FieldType类型，但是却并不能去调用FieldType一系列的set方法，例如&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Field field = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntPoint(name, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;field.fieldType().setStored(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;field.fieldType().setTokenized(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;否则会报&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;java.lang.IllegalStateException: this FieldType is already frozen and cannot be changed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是因为各Field的子类中，都调用了type.freeze()方法，而该方法就可以阻止对fieldType做更改。&lt;/p&gt;
&lt;p&gt;在Lucene 6.0中，IntField替换为IntPoint，FloatField替换为FloatPoint，LongField替换为LongPoint，DoubleField替换为DoublePoint。对Lucene常见Field总结如下&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;IntPoint&lt;/td&gt;
&lt;td&gt;对int型字段索引，只索引不存储，提供了一些静态工厂方法用于创建一般的查询，提供了不同于文本的数值类型存储方式，使用&lt;a href=&quot;https://en.wikipedia.org/wiki/K-d_tree&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KD-trees&lt;/a&gt;索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FloatPoint&lt;/td&gt;
&lt;td&gt;对float型字段索引，其它同上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LongPoint&lt;/td&gt;
&lt;td&gt;对long型字段索引，其它同上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DoublePoint&lt;/td&gt;
&lt;td&gt;对double型字段索引，其它同上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BinaryDocValuesField&lt;/td&gt;
&lt;td&gt;只存储不共享，例如标题类字段，如果需要共享并排序，推荐使用SortedDocValuesField&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NumericDocValuesField&lt;/td&gt;
&lt;td&gt;存储long型字段，用于评分、排序和值检索，如果需要存储值，还需要添加一个单独的StoredField实例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SortedDocValuesField&lt;/td&gt;
&lt;td&gt;索引并存储，用于String类型的Field排序，需要在StringField后添加同名的SortedDocValuesField&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StringField&lt;/td&gt;
&lt;td&gt;只索引但不分词，所有的字符串会作为一个整体进行索引，例如通常用于country或id等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TextField&lt;/td&gt;
&lt;td&gt;索引并分词，不包括term vectors，例如通常用于一个body Field&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StoredField&lt;/td&gt;
&lt;td&gt;存储Field的值，可以用 IndexSearcher.doc和IndexReader.document来获取存储的Field和存储的值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;IntPoint的使用&quot;&gt;IntPoint的使用&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addIntPoint&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Document document, String name, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Field field = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntPoint(name, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//要排序，必须添加一个同名的NumericDocValuesField&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NumericDocValuesField(name, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//要存储值，必须添加一个同名的StoredField&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(name, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testIntPointSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addIntPoint(document, &lt;span class=&quot;string&quot;&gt;&quot;intValue&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addIntPoint(document, &lt;span class=&quot;string&quot;&gt;&quot;intValue&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addIntPoint(document, &lt;span class=&quot;string&quot;&gt;&quot;intValue&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//第三个参数为true，表示从大到小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SortField intValues = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SortField(&lt;span class=&quot;string&quot;&gt;&quot;intValue&quot;&lt;/span&gt;, SortField.Type.INT, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TopFieldDocs search = indexSearcher.search(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MatchAllDocsQuery(), &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Sort(intValues));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ScoreDoc[] scoreDocs = search.scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored&amp;lt;intValue:&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored&amp;lt;intValue:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored&amp;lt;intValue:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;FloatPoint，LongPoint，DoublePoint使用方法类似，不再赘述。&lt;/p&gt;
&lt;h3 id=&quot;BinaryDocValuesField的使用&quot;&gt;BinaryDocValuesField的使用&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addBinaryDocValuesField&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Document document, String name, String value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Field field = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BinaryDocValuesField(name, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BytesRef(value));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//如果需要存储，加此句&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StoredField(name, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testBinaryDocValuesFieldSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addBinaryDocValuesField(document, &lt;span class=&quot;string&quot;&gt;&quot;binaryValue&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1234&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addBinaryDocValuesField(document, &lt;span class=&quot;string&quot;&gt;&quot;binaryValue&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;2345&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addBinaryDocValuesField(document, &lt;span class=&quot;string&quot;&gt;&quot;binaryValue&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;12345&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SortField binaryValue = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SortField(&lt;span class=&quot;string&quot;&gt;&quot;binaryValue&quot;&lt;/span&gt;, SortField.Type.STRING_VAL, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TopFieldDocs search = indexSearcher.search(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MatchAllDocsQuery(), &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Sort(binaryValue));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ScoreDoc[] scoreDocs = search.scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored&amp;lt;intValue:&lt;span class=&quot;number&quot;&gt;2345&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored&amp;lt;intValue:&lt;span class=&quot;number&quot;&gt;12345&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored&amp;lt;binaryValue:&lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;StringField的使用&quot;&gt;StringField的使用&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addStringField&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Document document, String name, String value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Field field = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringField(name, value, Field.Store.YES);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SortedDocValuesField(name, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BytesRef(value));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testStringFieldSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addStringField(document, &lt;span class=&quot;string&quot;&gt;&quot;stringValue&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1234&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addStringField(document, &lt;span class=&quot;string&quot;&gt;&quot;stringValue&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;2345&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addStringField(document, &lt;span class=&quot;string&quot;&gt;&quot;stringValue&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;12345&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SortField stringValue = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SortField(&lt;span class=&quot;string&quot;&gt;&quot;stringValue&quot;&lt;/span&gt;, SortField.Type.STRING, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TopFieldDocs search = indexSearcher.search(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MatchAllDocsQuery(), &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Sort(stringValue));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ScoreDoc[] scoreDocs = search.scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;stringValue:&lt;span class=&quot;number&quot;&gt;2345&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;stringValue:&lt;span class=&quot;number&quot;&gt;12345&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized,omitNorms,indexOptions=DOCS&amp;lt;stringValue:&lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;TextField的使用&quot;&gt;TextField的使用&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addTextField&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Document document, String name, String value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Field field = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TextField(name, value, Field.Store.YES);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SortedDocValuesField(name, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BytesRef(value));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testTextFieldSort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Document document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Directory directory = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexWriter indexWriter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriter(directory, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addTextField(document, &lt;span class=&quot;string&quot;&gt;&quot;textValue&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1234&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addTextField(document, &lt;span class=&quot;string&quot;&gt;&quot;textValue&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;2345&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Document();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addTextField(document, &lt;span class=&quot;string&quot;&gt;&quot;textValue&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;12345&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.addDocument(document);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    indexWriter.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IndexSearcher indexSearcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(DirectoryReader.open(directory));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SortField textValue = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SortField(&lt;span class=&quot;string&quot;&gt;&quot;textValue&quot;&lt;/span&gt;, SortField.Type.STRING, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TopFieldDocs search = indexSearcher.search(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MatchAllDocsQuery(), &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Sort(textValue));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ScoreDoc[] scoreDocs = search.scoreDocs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ScoreDoc scoreDoc : scoreDocs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(indexSearcher.doc(scoreDoc.doc));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized&amp;lt;textValue:&lt;span class=&quot;number&quot;&gt;2345&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized&amp;lt;textValue:&lt;span class=&quot;number&quot;&gt;12345&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Document&amp;lt;stored,indexed,tokenized&amp;lt;textValue:&lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Field简述&quot;&gt;Field简述&lt;/h3&gt;&lt;p&gt;在Lucene中，各种Field都是IndexableField接口的实现，该接口中提供了一些通用的方法，用于获取Field相关的属性&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;tabl
    
    </summary>
    
      <category term="Programming Notes" scheme="http://www.codepub.cn/categories/Programming-Notes/"/>
    
    
      <category term="Lucene" scheme="http://www.codepub.cn/tags/Lucene/"/>
    
  </entry>
  
</feed>
